{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.global.ts","./src/app/app.module.ts","./src/app/common/toastr.service.ts","./src/app/components/about/about.component.css","./src/app/components/about/about.component.html","./src/app/components/about/about.component.ts","./src/app/components/activitylog/activitylog.component.css","./src/app/components/activitylog/activitylog.component.html","./src/app/components/activitylog/activitylog.component.ts","./src/app/components/activitylogstats/activitylogstats.component.css","./src/app/components/activitylogstats/activitylogstats.component.html","./src/app/components/activitylogstats/activitylogstats.component.ts","./src/app/components/album/addalbum/addalbum.component.css","./src/app/components/album/addalbum/addalbum.component.html","./src/app/components/album/addalbum/addalbum.component.ts","./src/app/components/album/editalbum/editalbum.component.css","./src/app/components/album/editalbum/editalbum.component.html","./src/app/components/album/editalbum/editalbum.component.ts","./src/app/components/album/editalbumphoto/editalbumphoto.component.css","./src/app/components/album/editalbumphoto/editalbumphoto.component.html","./src/app/components/album/editalbumphoto/editalbumphoto.component.ts","./src/app/components/album/listalbum/listalbum.component.css","./src/app/components/album/listalbum/listalbum.component.html","./src/app/components/album/listalbum/listalbum.component.ts","./src/app/components/album/viewalbum/viewalbum.component.css","./src/app/components/album/viewalbum/viewalbum.component.html","./src/app/components/album/viewalbum/viewalbum.component.ts","./src/app/components/albumstats/albumstats.component.css","./src/app/components/albumstats/albumstats.component.html","./src/app/components/albumstats/albumstats.component.ts","./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.css","./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.html","./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.ts","./src/app/components/artist/addartist/addartist.component.css","./src/app/components/artist/addartist/addartist.component.html","./src/app/components/artist/addartist/addartist.component.ts","./src/app/components/artist/editartist/editartist.component.css","./src/app/components/artist/editartist/editartist.component.html","./src/app/components/artist/editartist/editartist.component.ts","./src/app/components/artist/editartistphoto/editartistphoto.component.css","./src/app/components/artist/editartistphoto/editartistphoto.component.html","./src/app/components/artist/editartistphoto/editartistphoto.component.ts","./src/app/components/artist/listartist/listartist.component.css","./src/app/components/artist/listartist/listartist.component.html","./src/app/components/artist/listartist/listartist.component.ts","./src/app/components/artist/viewartist/viewartist.component.css","./src/app/components/artist/viewartist/viewartist.component.html","./src/app/components/artist/viewartist/viewartist.component.ts","./src/app/components/artiststats/artiststats.component.css","./src/app/components/artiststats/artiststats.component.html","./src/app/components/artiststats/artiststats.component.ts","./src/app/components/artiststats/viewartiststats/viewartiststats.component.css","./src/app/components/artiststats/viewartiststats/viewartiststats.component.html","./src/app/components/artiststats/viewartiststats/viewartiststats.component.ts","./src/app/components/dashboard/dashboard.component.css","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/kx-info-dialog/kx-info-dialog.component.css","./src/app/components/kx-info-dialog/kx-info-dialog.component.html","./src/app/components/kx-info-dialog/kx-info-dialog.component.ts","./src/app/components/labelbalancedialog/labelbalancedialog.component.css","./src/app/components/labelbalancedialog/labelbalancedialog.component.html","./src/app/components/labelbalancedialog/labelbalancedialog.component.ts","./src/app/components/labelstats/labelstats.component.css","./src/app/components/labelstats/labelstats.component.html","./src/app/components/labelstats/labelstats.component.ts","./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.css","./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.html","./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.ts","./src/app/components/msconfig/addconfig/addconfig.component.css","./src/app/components/msconfig/addconfig/addconfig.component.html","./src/app/components/msconfig/addconfig/addconfig.component.ts","./src/app/components/msconfig/addgroup/addgroup.component.css","./src/app/components/msconfig/addgroup/addgroup.component.html","./src/app/components/msconfig/addgroup/addgroup.component.ts","./src/app/components/msconfig/editconfig/editconfig.component.css","./src/app/components/msconfig/editconfig/editconfig.component.html","./src/app/components/msconfig/editconfig/editconfig.component.ts","./src/app/components/msconfig/editconfigfile/editconfigfile.component.css","./src/app/components/msconfig/editconfigfile/editconfigfile.component.html","./src/app/components/msconfig/editconfigfile/editconfigfile.component.ts","./src/app/components/msconfig/listconfig/listconfig.component.css","./src/app/components/msconfig/listconfig/listconfig.component.html","./src/app/components/msconfig/listconfig/listconfig.component.ts","./src/app/components/msconfig/viewconfig/viewconfig.component.css","./src/app/components/msconfig/viewconfig/viewconfig.component.html","./src/app/components/msconfig/viewconfig/viewconfig.component.ts","./src/app/components/navbar/navbar.component.css","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.css","./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.html","./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.ts","./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.css","./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.html","./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.ts","./src/app/components/purchase/songpurchasestats/songpurchasestats.component.css","./src/app/components/purchase/songpurchasestats/songpurchasestats.component.html","./src/app/components/purchase/songpurchasestats/songpurchasestats.component.ts","./src/app/components/purchase/viewpurchase/viewpurchase.component.css","./src/app/components/purchase/viewpurchase/viewpurchase.component.html","./src/app/components/purchase/viewpurchase/viewpurchase.component.ts","./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.css","./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.html","./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.ts","./src/app/components/song/addsong/addsong.component.css","./src/app/components/song/addsong/addsong.component.html","./src/app/components/song/addsong/addsong.component.ts","./src/app/components/song/editsong/editsong.component.css","./src/app/components/song/editsong/editsong.component.html","./src/app/components/song/editsong/editsong.component.ts","./src/app/components/song/editsongfiles/editsongfiles.component.css","./src/app/components/song/editsongfiles/editsongfiles.component.html","./src/app/components/song/editsongfiles/editsongfiles.component.ts","./src/app/components/song/listsong/listsong.component.css","./src/app/components/song/listsong/listsong.component.html","./src/app/components/song/listsong/listsong.component.ts","./src/app/components/song/viewsong/viewsong.component.css","./src/app/components/song/viewsong/viewsong.component.html","./src/app/components/song/viewsong/viewsong.component.ts","./src/app/components/songmgt/songmgt.component.css","./src/app/components/songmgt/songmgt.component.html","./src/app/components/songmgt/songmgt.component.ts","./src/app/components/songstats/songstats.component.css","./src/app/components/songstats/songstats.component.html","./src/app/components/songstats/songstats.component.ts","./src/app/components/songstats/viewsongstats/viewsongstats.component.css","./src/app/components/songstats/viewsongstats/viewsongstats.component.html","./src/app/components/songstats/viewsongstats/viewsongstats.component.ts","./src/app/components/transaction/transaction.component.css","./src/app/components/transaction/transaction.component.html","./src/app/components/transaction/transaction.component.ts","./src/app/components/transactionstats/transactionstats.component.css","./src/app/components/transactionstats/transactionstats.component.html","./src/app/components/transactionstats/transactionstats.component.ts","./src/app/components/user/emailverification/emailverification.component.css","./src/app/components/user/emailverification/emailverification.component.html","./src/app/components/user/emailverification/emailverification.component.ts","./src/app/components/user/forgotpassword/forgotpassword.component.css","./src/app/components/user/forgotpassword/forgotpassword.component.html","./src/app/components/user/forgotpassword/forgotpassword.component.ts","./src/app/components/user/login/login.component.css","./src/app/components/user/login/login.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/logout.component.ts","./src/app/components/user/password/password.component.css","./src/app/components/user/password/password.component.html","./src/app/components/user/password/password.component.ts","./src/app/components/user/postregistered/postregistered.component.css","./src/app/components/user/postregistered/postregistered.component.html","./src/app/components/user/postregistered/postregistered.component.ts","./src/app/components/user/profile/profile.component.css","./src/app/components/user/profile/profile.component.html","./src/app/components/user/profile/profile.component.ts","./src/app/components/user/register/register.component.css","./src/app/components/user/register/register.component.html","./src/app/components/user/register/register.component.ts","./src/app/components/user/resetuserpasswd/resetuserpasswd.component.css","./src/app/components/user/resetuserpasswd/resetuserpasswd.component.html","./src/app/components/user/resetuserpasswd/resetuserpasswd.component.ts","./src/app/components/user/updateemail/updateemail.component.css","./src/app/components/user/updateemail/updateemail.component.html","./src/app/components/user/updateemail/updateemail.component.ts","./src/app/components/usermgt/usermgt.component.css","./src/app/components/usermgt/usermgt.component.html","./src/app/components/usermgt/usermgt.component.ts","./src/app/components/usermgt/viewlabel/viewlabel.component.css","./src/app/components/usermgt/viewlabel/viewlabel.component.html","./src/app/components/usermgt/viewlabel/viewlabel.component.ts","./src/app/guards/auth.guard.ts","./src/app/services/activitylog.service.ts","./src/app/services/admin/msconfig.service.ts","./src/app/services/admin/songadmin.service.ts","./src/app/services/admin/usermgt.service.ts","./src/app/services/album.service.ts","./src/app/services/artist.service.ts","./src/app/services/auth.service.ts","./src/app/services/filetransfer.service.ts","./src/app/services/notif.service.ts","./src/app/services/song.service.ts","./src/app/services/songpurchase.service.ts","./src/app/services/transaction.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n      <p class=\\\"text-muted\\\">&copy; Copyright 2017 | kaXet app</p>\\n  </div>\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kaXet';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Globals {\n    artistuploadpath = 'images/artists/';\n    albumuploadpath = 'images/albums/';\n    configuploadpath = 'images/genres/';\n    prvwuploadpath = 'previews/';\n    songuploadpath = 'songs/';\n    //adminurl: String = 'http://localhost:2002';\n    adminurl: String = 'https://apikxadmin-dot-kaxetd.appspot.com';\n    //notifurl: String = 'http://localhost:2004';\n    notifurl: String = 'https://apikxnotif-dot-kaxetd.appspot.com';\n    //filetransferurl: String = 'http://localhost:2005';\n    filetransferurl: String = 'https://apikxfiletrf-dot-kaxetd.appspot.com';\n    kaxeturl: String = 'https://kaxetd.appspot.com';\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.global.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoadingModule, ANIMATION_TYPES } from 'ngx-loading';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCardModule } from '@angular/material'\nimport { Angular2FontawesomeModule } from 'angular2-fontawesome/angular2-fontawesome'\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n/* Global Variables */\nimport {Globals} from './app.global';\n\n/* Services Modules */\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { UserService } from './services/user.service';\nimport { ArtistService } from './services/artist.service';\nimport { AlbumService } from './services/album.service';\nimport { SongService } from './services/song.service';\nimport { UsermgtService } from './services/admin/usermgt.service';\nimport { SongadminService } from './services/admin/songadmin.service';\nimport { MsconfigService } from './services/admin/msconfig.service';\nimport { NotifService } from './services/notif.service';\nimport { FiletransferService } from './services/filetransfer.service';\nimport { SongpurchaseService } from './services/songpurchase.service';\nimport { TransactionService } from './services/transaction.service';\nimport { ActivitylogService } from './services/activitylog.service';\n\n/* common Modules */\nimport { ToastrService } from './common/toastr.service';\nimport { DatePipe } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { PasswordComponent } from './components/user/password/password.component';\nimport { ProfileComponent } from './components/user/profile/profile.component';\nimport { LogoutComponent } from './components/user/logout.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EditartistComponent } from './components/artist/editartist/editartist.component';\nimport { ListartistComponent } from './components/artist/listartist/listartist.component';\nimport { ViewartistComponent } from './components/artist/viewartist/viewartist.component';\nimport { AddartistComponent } from './components/artist/addartist/addartist.component';\nimport { EditartistphotoComponent } from './components/artist/editartistphoto/editartistphoto.component';\nimport { AddalbumComponent } from './components/album/addalbum/addalbum.component';\nimport { ListalbumComponent } from './components/album/listalbum/listalbum.component';\nimport { ViewalbumComponent } from './components/album/viewalbum/viewalbum.component';\nimport { EditalbumComponent } from './components/album/editalbum/editalbum.component';\nimport { EditalbumphotoComponent } from './components/album/editalbumphoto/editalbumphoto.component';\nimport { AddsongComponent } from './components/song/addsong/addsong.component';\nimport { ListsongComponent } from './components/song/listsong/listsong.component';\nimport { EditsongfilesComponent } from './components/song/editsongfiles/editsongfiles.component';\nimport { ViewsongComponent } from './components/song/viewsong/viewsong.component';\nimport { EditsongComponent } from './components/song/editsong/editsong.component';\nimport { PostregisteredComponent } from './components/user/postregistered/postregistered.component';\nimport { UsermgtComponent } from './components/usermgt/usermgt.component';\nimport { ViewlabelComponent } from './components/usermgt/viewlabel/viewlabel.component';\nimport { UpdateemailComponent } from './components/user/updateemail/updateemail.component';\nimport { EmailverificationComponent } from './components/user/emailverification/emailverification.component';\nimport { SongmgtComponent } from './components/songmgt/songmgt.component';\nimport { AddconfigComponent } from './components/msconfig/addconfig/addconfig.component';\nimport { AddgroupComponent } from './components/msconfig/addgroup/addgroup.component';\nimport { ListconfigComponent } from './components/msconfig/listconfig/listconfig.component';\nimport { ViewconfigComponent } from './components/msconfig/viewconfig/viewconfig.component';\nimport { EditconfigfileComponent } from './components/msconfig/editconfigfile/editconfigfile.component';\nimport { EditconfigComponent } from './components/msconfig/editconfig/editconfig.component';\nimport { KxInfoDialogComponent } from './components/kx-info-dialog/kx-info-dialog.component';\nimport { ForgotpasswordComponent } from './components/user/forgotpassword/forgotpassword.component';\nimport { ResetuserpasswdComponent } from './components/user/resetuserpasswd/resetuserpasswd.component';\nimport { ArtiststatsComponent } from './components/artiststats/artiststats.component';\nimport { AlbumstatsComponent } from './components/albumstats/albumstats.component';\nimport { SongstatsComponent } from './components/songstats/songstats.component';\nimport { LabelstatsComponent } from './components/labelstats/labelstats.component';\nimport { ViewlabelstatsComponent } from './components/labelstats/viewlabelstats/viewlabelstats.component';\nimport { ViewartiststatsComponent } from './components/artiststats/viewartiststats/viewartiststats.component';\nimport { ViewalbumstatsComponent } from './components/albumstats/viewalbumstats/viewalbumstats.component';\nimport { ViewsongstatsComponent } from './components/songstats/viewsongstats/viewsongstats.component';\nimport { SongpendingpurchaseComponent } from './components/purchase/songpendingpurchase/songpendingpurchase.component';\nimport { SongcompletepurchaseComponent } from './components/purchase/songcompletepurchase/songcompletepurchase.component';\nimport { ViewsongpurchaseComponent } from './components/purchase/viewsongpurchase/viewsongpurchase.component';\nimport { ViewpurchaseComponent } from './components/purchase/viewpurchase/viewpurchase.component';\nimport { TransactionComponent } from './components/transaction/transaction.component';\nimport { SongpurchasestatsComponent } from './components/purchase/songpurchasestats/songpurchasestats.component';\nimport { TransactionstatsComponent } from './components/transactionstats/transactionstats.component';\nimport { LabelbalancedialogComponent } from './components/labelbalancedialog/labelbalancedialog.component';\nimport { ActivitylogComponent } from './components/activitylog/activitylog.component';\nimport { ActivitylogstatsComponent } from './components/activitylogstats/activitylogstats.component';\n\nconst appRoutes: Routes = [\n  {path: '',redirectTo:'login',pathMatch:'full'},\n  {path:'register', component:RegisterComponent},\n  {path:'forgotpassword', component:ForgotpasswordComponent},\n  {path:'postregistered/:nm', component:PostregisteredComponent},\n  {path:'login', component:LoginComponent},\n  {path:'about', component:AboutComponent},\n  {path:'logout', component:LogoutComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path:'profile', component:ProfileComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path:'password', component:PasswordComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path:'report', component:DashboardComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path: 'addartist', canActivate: [ AuthGuard], component: AddartistComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'editartist/:id', canActivate: [ AuthGuard], component: EditartistComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'listartist', canActivate: [ AuthGuard], component: ListartistComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'editartistphoto/:id', component:EditartistphotoComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path: 'viewartist/:id', canActivate: [ AuthGuard], component: ViewartistComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'addalbum', canActivate: [ AuthGuard], component: AddalbumComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'listalbum', canActivate: [ AuthGuard], component: ListalbumComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewalbum/:id', canActivate: [ AuthGuard], component: ViewalbumComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'editalbum/:id', canActivate: [ AuthGuard], component: EditalbumComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'editalbumphoto/:id', component:EditalbumphotoComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path: 'addsong', canActivate: [ AuthGuard], component: AddsongComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'listsong', canActivate: [ AuthGuard], component: ListsongComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'editsongfiles/:id', component:EditsongfilesComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path: 'viewsong/:id', canActivate: [ AuthGuard], component: ViewsongComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'editsong/:id', canActivate: [ AuthGuard], component: EditsongComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'usermanagement', canActivate: [ AuthGuard], component: UsermgtComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewlabel/:id', canActivate: [ AuthGuard], component: ViewlabelComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'updateemail', canActivate: [ AuthGuard], component: UpdateemailComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'verify', component: EmailverificationComponent },\n  {path: 'songmanagement', canActivate: [ AuthGuard], component: SongmgtComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'addconfig', canActivate: [ AuthGuard], component: AddconfigComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'addgroup', canActivate: [ AuthGuard], component: AddgroupComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'listconfig', canActivate: [ AuthGuard], component: ListconfigComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewconfig/:id', canActivate: [ AuthGuard], component: ViewconfigComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'editconfigfile/:id', component:EditconfigfileComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path: 'editconfig/:id', component:EditconfigComponent, canActivate:[AuthGuard],runGuardsAndResolvers: 'always'},\n  {path: 'resetpassword', component: ResetuserpasswdComponent },\n  {path: 'labelstats', canActivate: [ AuthGuard], component: LabelstatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'artiststats', canActivate: [ AuthGuard], component: ArtiststatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'albumstats', canActivate: [ AuthGuard], component: AlbumstatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'songstats', canActivate: [ AuthGuard], component: SongstatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewlabelstats/:id', canActivate: [ AuthGuard], component: ViewlabelstatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewartiststats/:id', canActivate: [ AuthGuard], component: ViewartiststatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewalbumstats/:id', canActivate: [ AuthGuard], component: ViewalbumstatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewsongstats/:id', canActivate: [ AuthGuard], component: ViewsongstatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'songpendingpurchase', canActivate: [ AuthGuard], component: SongpendingpurchaseComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'songcompletepurchase', canActivate: [ AuthGuard], component: SongcompletepurchaseComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewsongpurchase/:id', canActivate: [ AuthGuard], component: ViewsongpurchaseComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'viewpurchase/:id', canActivate: [ AuthGuard], component: ViewpurchaseComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'transaction', canActivate: [ AuthGuard], component: TransactionComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'songpurchasestats', canActivate: [ AuthGuard], component: SongpurchasestatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'transactionstats', canActivate: [ AuthGuard], component: TransactionstatsComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'activitylog', canActivate: [ AuthGuard], component: ActivitylogComponent ,runGuardsAndResolvers: 'always'},\n  {path: 'activitylogstats', canActivate: [ AuthGuard], component: ActivitylogstatsComponent ,runGuardsAndResolvers: 'always'},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    PasswordComponent,\n    ProfileComponent,\n    LogoutComponent,\n    AboutComponent,\n    DashboardComponent,\n    EditartistComponent,\n    ListartistComponent,\n    ViewartistComponent,\n    AddartistComponent,\n    EditartistphotoComponent,\n    AddalbumComponent,\n    ListalbumComponent,\n    ViewalbumComponent,\n    EditalbumComponent,\n    EditalbumphotoComponent,\n    AddsongComponent,\n    ListsongComponent,\n    EditsongfilesComponent,\n    ViewsongComponent,\n    EditsongComponent,\n    PostregisteredComponent,\n    UsermgtComponent,\n    ViewlabelComponent,\n    UpdateemailComponent,\n    EmailverificationComponent,\n    SongmgtComponent,\n    AddconfigComponent,\n    AddgroupComponent,\n    ListconfigComponent,\n    ViewconfigComponent,\n    EditconfigfileComponent,\n    EditconfigComponent,\n    KxInfoDialogComponent,\n    ForgotpasswordComponent,\n    ResetuserpasswdComponent,\n    ArtiststatsComponent,\n    AlbumstatsComponent,\n    SongstatsComponent,\n    LabelstatsComponent,\n    ViewlabelstatsComponent,\n    ViewartiststatsComponent,\n    ViewalbumstatsComponent,\n    ViewsongstatsComponent,\n    SongpendingpurchaseComponent,\n    SongcompletepurchaseComponent,\n    ViewsongpurchaseComponent,\n    ViewpurchaseComponent,\n    TransactionComponent,\n    SongpurchasestatsComponent,\n    TransactionstatsComponent,\n    LabelbalancedialogComponent,\n    ActivitylogComponent,\n    ActivitylogstatsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    MatCardModule,\n    BrowserAnimationsModule,\n    Angular2FontawesomeModule,\n    LoadingModule.forRoot({\n      animationType: ANIMATION_TYPES.threeBounce,\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \n      backdropBorderRadius: '4px',\n      primaryColour: '#ce3b3b', \n      secondaryColour: '#ce3b3b', \n      tertiaryColour: '#ce3b3b'\n    }),\n    BsDatepickerModule.forRoot(),\n    RouterModule.forRoot(appRoutes, {onSameUrlNavigation: 'reload'})\n  ],\n  entryComponents: [\n    KxInfoDialogComponent,\n    LabelbalancedialogComponent\n  ],\n  providers: [ Globals,\n    ToastrService, \n    AuthService, \n    AuthGuard, \n    UserService, \n    ArtistService, \n    AlbumService, \n    SongService, \n    DatePipe,\n    UsermgtService,\n    SongadminService,\n    MsconfigService,\n    NotifService,\n    FiletransferService,\n    SongpurchaseService,\n    TransactionService,\n    ActivitylogService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\ndeclare let toastr:any\n\n@Injectable()\nexport class ToastrService {\n\n  constructor() { \n    toastr.options = {\n      //timeOut : 0,\n      //extendedTimeOut : 100,\n      //tapToDismiss : true,\n      //debug : false,\n      //fadeOut: 10,\n      positionClass : \"toast-top-right\"\n      };\n  }\n  success(message: string, title?: string) {\n    toastr.success(message, title)\n  }\n  info(message: string, title?: string) {\n    toastr.info(message, title)\n  }\n  warning(message: string, title?: string) {\n    toastr.warning(message, title)\n  }\n  error(message: string, title?: string) {\n    toastr.error(message, title)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/toastr.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.css\n// module id = ./src/app/components/about/about.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n    <h1></h1>\\n</div>\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"../../../cassetteicon.png\\\">\\n      <h2>kaXet v1.0</h2>\\n      <p>An app for inspiring and commercial music</p>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.html\n// module id = ./src/app/components/about/about.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/about/about.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/activitylog/activitylog.component.css\n// module id = ./src/app/components/activitylog/activitylog.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Activity Log</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label class=\\\"col-sm-6 paddingsearch\\\">Activity Date</label>\\n              </div>  \\n          </div>\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-3 col-md-3\\\">\\n                  <div class=\\\"radio\\\">\\n                      <label>\\n                          <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt3\\\" [formControl]=\\\"rptype\\\" checked>\\n                          Today\\n                      </label>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-3 col-md-3\\\">\\n                  <div class=\\\"radio\\\">\\n                      <label>\\n                          <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt1\\\" [formControl]=\\\"rptype\\\">\\n                          Current month\\n                      </label>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <div class=\\\"radio\\\">\\n                      <label>\\n                          <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt2\\\" [formControl]=\\\"rptype\\\">\\n                          Date Range (yyyy-mm-dd)\\n                      </label>\\n                  </div>\\n                  <div class=\\\"row\\\" style=\\\"padding: 8px\\\">\\n                      <div class=\\\"col-sm-6 col-md-6\\\">\\n                          <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                              <div class=\\\"input-group\\\">\\n                                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                  <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                              </div>\\n                              <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                                  <span class=\\\"col-sm-2\\\"></span>\\n                                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid start date</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                      <div class=\\\"col-sm-6 col-md-6\\\">\\n                          <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                              <div class=\\\"input-group\\\">\\n                                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                  <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                              </div>\\n                              <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                                  <span class=\\\"col-sm-2\\\"></span>\\n                                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid end date</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div>\\n              </div> \\n\\n          </div>\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Activity Type</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"activitytype\\\">\\n                      <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the activity</option>\\n                      <option *ngFor=\\\"let a of activitylist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                    </select>\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <div class=\\\"col-sm-6\\\" style=\\\"margin:0;padding:0\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"this.loading == false && reportForm.invalid\\\">Submit</button>\\n                  </div>\\n              </div>                  \\n          </div>\\n        </form>\\n    </div>    \\n  </div>\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"activitylog && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">No activity found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n        There is NO activity found for the selected criteria.\\n      </div>\\n  </div>\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"activitylog && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-hover\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortActivitylog('logdate')\\\">Activity Date</a></th>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortActivitylog('activitytype')\\\">Activity type</a></th>\\n                          <th width=\\\"45%\\\" scope=\\\"col\\\">Remarks</th>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\">Status</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let log of activitylog; let logIndex = index'>\\n                          <!-- <td data-label=\\\"Transaction Date\\\" scope=\\\"row\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showTransaction(trx._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ trx.transactiondt | date: 'd MMM y'}}</a></td>   -->\\n                          <td data-label=\\\"Activity Date\\\" scope=\\\"row\\\">{{ log.logdate | date: 'd MMM y'}}</td>\\n                          <td data-label=\\\"Activity Type\\\">{{ log.activity }}</td>\\n                          <td data-label=\\\"Remarks\\\">{{ log.remarks }}</td>\\n                          <td data-label=\\\"Status\\\">{{ log.stsval }}</td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div> \\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"activitylog && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div> \\n      </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/activitylog/activitylog.component.html\n// module id = ./src/app/components/activitylog/activitylog.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\nimport { ActivitylogService } from '../../services/activitylog.service';\n//import { SongService } from '../../services/song.service';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\n\n@Component({\n  selector: 'app-activitylog',\n  templateUrl: './activitylog.component.html',\n  styleUrls: ['./activitylog.component.css']\n})\nexport class ActivitylogComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  activitylog: any[];\n  totalrows: number;\n  pgCounter: number;\n  qactivitytype: string;\n  qrptype: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: string;\n  activitylist: IMsconfigGroupList[];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private activitylogService: ActivitylogService,\n    private msconfigService: MsconfigService,\n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n  activitytype = new FormControl('',[Validators.nullValidator]);\n  rptype = new FormControl('opt3');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      activitytype: this.activitytype,\n      rptype: this.rptype,\n      startdt: this.startdt,\n      enddt: this.enddt\n    });\n    this.getMsconfigGroupList('ALOG');\n    this.route.queryParams.forEach((params: Params) => {\n      this.qactivitytype = params['activitytype'] || '';\n      this.qrptype = params['rptype'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n      \n      if(this.qrptype !== '') {\n        let payload: any = {};\n        payload.activitytype = this.qactivitytype;\n        payload.rptype = this.qrptype;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n  \n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n  \n        this.reportForm.patchValue({\n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }       \n    })\n    this.reportForm.get('rptype').valueChanges\n    .subscribe(value => this.toggleDates(value));\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'ALOG') {\n            this.activitylist = data.data;\n          }\n        } else {\n          this.activitylist = [{code:'', value:'Empty ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.activitylist = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        if (this.reportForm.value.rptype === 'opt2'){\n          var pstartdt, penddt;\n            try {\n              pstartdt = this.datePipe.transform(this.reportForm.value.startdt, 'yyyy-MM-dd');  \n            } catch (error) {\n              pstartdt = this.qstartdt;\n            }\n            \n            try {\n              penddt = this.datePipe.transform(this.reportForm.value.enddt, 'yyyy-MM-dd');  \n            } catch (error) {\n              penddt = this.qenddt;  \n            }          \n\n          if (!pstartdt || !penddt) {\n            this.toastr.error('Date format is invalid.');\n          } else {\n            if (pstartdt > penddt) {    \n              this.toastr.error('Start date cannot be greater than end date.');\n            } else {\n              this.router.navigate(['activitylog'],\n                  {\n                    queryParams: {\n                      activitytype: this.reportForm.value.activitytype,\n                      rptype: this.reportForm.value.rptype,\n                      startdt: pstartdt,\n                      enddt: penddt,\n                      page: 1, \n                      sortby: null }\n                  }\n              );                  \n            }\n          }\n        } else {\n            this.router.navigate(['activitylog'],\n                {\n                  queryParams: {\n                    activitytype: this.reportForm.value.activitytype,\n                    rptype: this.reportForm.value.rptype,\n                    startdt: null,\n                    enddt: null,\n                    page: 1, \n                    sortby: null }\n                }\n            );\n        }    \n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.activitylogService.getActivitylogAggs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.activitylog = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qactivitytype = formval.activitytype;\n        this.qrptype = formval.rptype;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n\n        /* if (formval.rptype === 'opt1') {\n          this.reportTitle = 'Song purchase for ' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.rptype === 'opt2') {\n            this.reportTitle = 'Song purchase between ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' and ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n            //this.reportTitle = 'Song purchase between ' + formval.startdt + ' and ' + formval.enddt;\n        } else if (formval.rptype === 'opt3') {\n          this.reportTitle = 'Song purchase for today'\n        } */\n        this.reportTitle = 'Search Result - ';\n        this.reportForm.patchValue({\n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['activitylog'],\n      {\n        queryParams: {\n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n  sortActivitylog(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['activitylog'],\n      {\n        queryParams: { \n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/activitylog/activitylog.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/activitylogstats/activitylogstats.component.css\n// module id = ./src/app/components/activitylogstats/activitylogstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Activity Log</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label class=\\\"col-sm-6 paddingsearch\\\">Activity Date</label>\\n                </div>  \\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-3 col-md-3\\\">\\n                    <div class=\\\"radio\\\">\\n                        <label>\\n                            <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt3\\\" [formControl]=\\\"rptype\\\" checked>\\n                            Today\\n                        </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-3 col-md-3\\\">\\n                    <div class=\\\"radio\\\">\\n                        <label>\\n                            <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt1\\\" [formControl]=\\\"rptype\\\">\\n                            Current month\\n                        </label>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <div class=\\\"radio\\\">\\n                        <label>\\n                            <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt2\\\" [formControl]=\\\"rptype\\\">\\n                            Date Range (yyyy-mm-dd)\\n                        </label>\\n                    </div>\\n                    <div class=\\\"row\\\" style=\\\"padding: 8px\\\">\\n                        <div class=\\\"col-sm-6 col-md-6\\\">\\n                            <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                    <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                                </div>\\n                                <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                                    <span class=\\\"col-sm-2\\\"></span>\\n                                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid start date</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-sm-6 col-md-6\\\">\\n                            <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                                <div class=\\\"input-group\\\">\\n                                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                    <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                                </div>\\n                                <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                                    <span class=\\\"col-sm-2\\\"></span>\\n                                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid end date</span>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div> \\n  \\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Activity Type</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"activitytype\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the activity</option>\\n                        <option *ngFor=\\\"let a of activitylist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"labelid\\\" class=\\\"col-sm-2 paddingsearch\\\">Label</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                            <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                            <option value=\\\"\\\">Select the label</option>\\n                            <!-- <option value=\\\"system\\\">system</option> -->\\n                            <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                        </select>\\n                      </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <div class=\\\"col-sm-6\\\" style=\\\"margin:0;padding:0\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"this.loading == false && reportForm.invalid\\\">Submit</button>\\n                    </div>\\n                </div>                  \\n            </div>\\n          </form>\\n      </div>    \\n    </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"activitylog && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No activity found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n          There is NO activity found for the selected criteria.\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"activitylog && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortActivitylog('logdate')\\\">Activity Date</a></th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortActivitylog('activitytype')\\\">Activity type</a></th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortActivitylog('performed')\\\">Performed by</a></th>                            \\n                            <th width=\\\"40%\\\" scope=\\\"col\\\">Remarks</th>\\n                            <th width=\\\"10%\\\" scope=\\\"col\\\">Status</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let log of activitylog; let logIndex = index'>\\n                            <!-- <td data-label=\\\"Transaction Date\\\" scope=\\\"row\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showTransaction(trx._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ trx.transactiondt | date: 'd MMM y'}}</a></td>   -->\\n                            <td data-label=\\\"Activity Date\\\" scope=\\\"row\\\">{{ log.logdate | date: 'd MMM y'}}</td>\\n                            <td data-label=\\\"Activity Type\\\">{{ log.activity }}</td>\\n                            <td data-label=\\\"Performed by\\\">{{ log.performed }}</td>\\n                            <td data-label=\\\"Remarks\\\">{{ log.remarks }}</td>\\n                            <td data-label=\\\"Status\\\">{{ log.stsval }}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"activitylog && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n  \\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/activitylogstats/activitylogstats.component.html\n// module id = ./src/app/components/activitylogstats/activitylogstats.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\nimport { ActivitylogService } from '../../services/activitylog.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\n//import { SongService } from '../../services/song.service';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\nimport { IUserList } from '../../interface/user';\n\n@Component({\n  selector: 'app-activitylogstats',\n  templateUrl: './activitylogstats.component.html',\n  styleUrls: ['./activitylogstats.component.css']\n})\nexport class ActivitylogstatsComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  activitylog: any[];\n  totalrows: number;\n  pgCounter: number;\n  qactivitytype: string;\n  qlabelid:string;\n  qrptype: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: string;\n  activitylist: IMsconfigGroupList[];\n  userlist: IUserList[];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private labelmgtService: UsermgtService,\n    private activitylogService: ActivitylogService,\n    private msconfigService: MsconfigService,\n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n\n  labelid = new FormControl('',[Validators.nullValidator]);\n  activitytype = new FormControl('',[Validators.nullValidator]);\n  rptype = new FormControl('opt3');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      labelid: this.labelid,\n      activitytype: this.activitytype,\n      rptype: this.rptype,\n      startdt: this.startdt,\n      enddt: this.enddt\n    });\n    this.getMsconfigGroupList('ALOG');\n    this.getLabels();\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qactivitytype = params['activitytype'] || '';\n      this.qrptype = params['rptype'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n      \n      if(this.qrptype !== '') {\n        let payload: any = {};\n        payload.labelid = this.qlabelid;\n        payload.activitytype = this.qactivitytype;\n        payload.rptype = this.qrptype;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n  \n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n  \n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }       \n    })\n    this.reportForm.get('rptype').valueChanges\n    .subscribe(value => this.toggleDates(value));\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Error label list'}];\n        }\n      }\n    },\n    err => {\n      this.userlist = [{_id:'', name:'Error label list'}];\n    });\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'ALOG') {\n            this.activitylist = data.data;\n          }\n        } else {\n          this.activitylist = [{code:'', value:'Empty ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.activitylist = [{code:'', value:'Error ms config list'}];\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        if (this.reportForm.value.rptype === 'opt2'){\n          var pstartdt, penddt;\n            try {\n              pstartdt = this.datePipe.transform(this.reportForm.value.startdt, 'yyyy-MM-dd');  \n            } catch (error) {\n              pstartdt = this.qstartdt;\n            }\n            \n            try {\n              penddt = this.datePipe.transform(this.reportForm.value.enddt, 'yyyy-MM-dd');  \n            } catch (error) {\n              penddt = this.qenddt;  \n            }          \n\n          if (!pstartdt || !penddt) {\n            this.toastr.error('Date format is invalid.');\n          } else {\n            if (pstartdt > penddt) {    \n              this.toastr.error('Start date cannot be greater than end date.');\n            } else {\n              this.router.navigate(['activitylogstats'],\n                  {\n                    queryParams: {\n                      labelid: this.reportForm.value.labelid,\n                      activitytype: this.reportForm.value.activitytype,\n                      rptype: this.reportForm.value.rptype,\n                      startdt: pstartdt,\n                      enddt: penddt,\n                      page: 1, \n                      sortby: null }\n                  }\n              );                  \n            }\n          }\n        } else {\n            this.router.navigate(['activitylogstats'],\n                {\n                  queryParams: {\n                    labelid: this.reportForm.value.labelid,\n                    activitytype: this.reportForm.value.activitytype,\n                    rptype: this.reportForm.value.rptype,\n                    startdt: null,\n                    enddt: null,\n                    page: 1, \n                    sortby: null }\n                }\n            );\n        }    \n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.activitylogService.getAdmActivitylogAggs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.activitylog = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qlabelid = formval.labelid;\n        this.qactivitytype = formval.activitytype;\n        this.qrptype = formval.rptype;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n\n        /* if (formval.rptype === 'opt1') {\n          this.reportTitle = 'Song purchase for ' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.rptype === 'opt2') {\n            this.reportTitle = 'Song purchase between ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' and ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n            //this.reportTitle = 'Song purchase between ' + formval.startdt + ' and ' + formval.enddt;\n        } else if (formval.rptype === 'opt3') {\n          this.reportTitle = 'Song purchase for today'\n        } */\n        this.reportTitle = 'Search Result - ';\n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate(['activitylogstats'],\n      {\n        queryParams: {\n          labelid: this.qlabelid,\n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n  sortActivitylog(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['activitylogstats'],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          activitytype: this.qactivitytype,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/activitylogstats/activitylogstats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/addalbum/addalbum.component.css\n// module id = ./src/app/components/album/addalbum/addalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Album</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"addAlbumForm\\\" (ngSubmit)=\\\"addAlbum(addAlbumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('artistid').invalid && addAlbumForm.get('artistid').dirty}\\\">\\n      <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist Id <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select #inputartist [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n            <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('artistid').dirty && addAlbumForm.get('artistid').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('artistid').errors.required\\\">\\n              Please enter the artist\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumname').invalid && addAlbumForm.get('albumname').dirty}\\\">\\n        <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"albumname\\\" id=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumname').dirty && addAlbumForm.get('albumname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumname').errors.required\\\">\\n                Please enter the album name\\n            </span>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumyear').invalid && addAlbumForm.get('albumyear').dirty}\\\">\\n      <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-6\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"albumyear\\\" id=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumyear').dirty && addAlbumForm.get('albumyear').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumyear').errors.required\\\">\\n              Please enter the album year\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumgenre').invalid && addAlbumForm.get('albumgenre').dirty}\\\">\\n      <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n          <select #inputgenre [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n              <option *ngFor=\\\"let a of genre\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n          </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumgenre').dirty && addAlbumForm.get('albumgenre').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumgenre').errors.required\\\">\\n              Please select album genre\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumprice').invalid && addAlbumForm.get('albumprice').dirty}\\\">\\n      <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\">Rp</div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"albumprice\\\" [formControl]=\\\"albumprice\\\" placeholder=\\\"Album Price\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumprice').dirty && addAlbumForm.get('albumprice').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumprice').errors.required\\\">\\n              Please enter price\\n          </span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumprice').errors.pattern\\\">\\n              Please enter a valid amount\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumimage').invalid && addAlbumForm.get('albumimage').dirty}\\\">\\n        <label for=\\\"albumimage\\\" class=\\\"col-sm-2 control-label\\\">Album Photo <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" #inputimg type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"albumimage\\\" id=\\\"albumimage\\\" placeholder=\\\"Album image\\\">\\n            <span class=\\\"control-label\\\" style=\\\"text-align:bottom;font-size:10px;color:red;\\\">&nbsp;&nbsp;<u><b>(MAX {{ +this.maxfilesize?.value/1000 }} KB)</b></u></span>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n      <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n      <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n   </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-5\\\" style=\\\"padding:0;margin:0;\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"addAlbumForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n        </div>\\n        <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n            <sup>*</sup> required\\n        </div>\\n    </div>\\n  </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/addalbum/addalbum.component.html\n// module id = ./src/app/components/album/addalbum/addalbum.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\n\n@Component({\n  selector: 'app-addalbum',\n  templateUrl: './addalbum.component.html',\n  styleUrls: ['./addalbum.component.css']\n})\nexport class AddalbumComponent implements OnInit {\n  addAlbumForm: FormGroup;\n  userObj: any;\n  genre: IMsconfigGroupList[];\n  filesToUpload: Array<File> = [];\n  albumid: String;\n  artistlist: IArtistList[];\n  loading = false;\n  @ViewChild('inputimg')albumimageVar: any;\n  @ViewChild('inputartist')artistVar: any;\n  @ViewChild('inputgenre')genreVar: any;\n  albumuploadpath:string;\n  progressvalue = 0;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n\n  artistid = new FormControl('', [Validators.required]);  \n  albumname = new FormControl('', [Validators.required]);\n  albumyear = new FormControl('', [Validators.required]);\n  albumgenre = new FormControl('', [Validators.required]);\n  albumprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  albumphotopath: String;\n  albumphotoname: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.albumuploadpath = this.globals.albumuploadpath;\n    this.progressvalue = 0;\n    this.getArtistList(this.userObj.userid);\n    this.getMsconfigGroupList('GENRE');\n    this.getMsconfigVal('IMGSIZE','FSIZE');\n    this.albumid = '';\n    this.addAlbumForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      albumprice: this.albumprice,\n      albumimage: this.filesToUpload,\n      albumphotopath: this.albumphotopath,\n      albumphotoname: this.albumphotoname\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.genre = data.data;\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.genre = [{code:'', value:'Error ms config list'}];\n    });\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      }\n    },\n    err => {\n      this.maxfilesize = {code:'', value:'0'};\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    },\n    err => {\n      this.artistlist = [{_id:'', artistname:'Error artist list'}];\n    });\n  }\n  \n  addAlbum(formdata:any): void {\n    this.progressvalue = 0;\n    const files: Array<File> = this.filesToUpload;\n    if (this.addAlbumForm.dirty && this.addAlbumForm.valid && files[0]) {\n      this.progressvalue = 10;\n      //const files: Array<File> = this.filesToUpload;\n      let theForm = this.addAlbumForm.value;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ files[0]['name']);\n      this.progressvalue = 20;\n      //lformData.append('albumimage',files[0],files[0]['name']);\n      lformData.append('fileinputsrc',files[0],files[0]['name']);\n      lformData.append('uploadpath',this.albumuploadpath);\n      //console.dir(theForm);\n      this.loading = true;\n      this.progressvalue = 40;\n      this.ftService.uploadInputFile(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n              this.progressvalue = 60;\n              theForm.albumphotopath = data.filedata.filepath;\n              theForm.albumphotoname = data.filedata.filename;\n              theForm.status = 'STSACT';\n              if (this.albumid !== '') {\n                theForm.albumid = this.albumid;\n              }\n              this.progressvalue = 80;\n              this.albumService.pubsaveAlbum(this.userObj.userid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.progressvalue = 0;\n                  this.toastr.error(data.message);\n                } else {\n                  this.progressvalue = 90;\n                  this.loading = false;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listalbum']);\n                  this.progressvalue = 100;\n                }\n                this.addAlbumForm.reset();\n                this.artistVar.nativeElement.selectedIndex = 0;\n                this.genreVar.nativeElement.selectedIndex = 0;\n                this.albumimageVar.nativeElement.value = \"\";\n                this.progressvalue = 0;\n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }   \n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n \n    } else {\n      this.toastr.error('Please provide the album cover/image...');\n    }\n  }\n/*   addAlbum(formdata:any): void {\n    this.progressvalue = 0;\n    const files: Array<File> = this.filesToUpload;\n    if (this.addAlbumForm.dirty && this.addAlbumForm.valid && files[0]) {\n      this.progressvalue = 10;\n      //const files: Array<File> = this.filesToUpload;\n      let theForm = this.addAlbumForm.value;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ files[0]['name']);\n      this.progressvalue = 20;\n      //lformData.append('albumimage',files[0],files[0]['name']);\n      lformData.append('fileinputsrc',files[0],files[0]['name']);\n      lformData.append('uploadpath',this.albumuploadpath);\n      //console.dir(theForm);\n      this.loading = true;\n      this.progressvalue = 40;\n      this.ftService.uploadInputFile(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n              this.progressvalue = 60;\n              theForm.albumphotopath = data.filedata.filepath;\n              theForm.albumphotoname = data.filedata.filename;\n              theForm.status = 'STSACT';\n              if (this.albumid !== '') {\n                theForm.albumid = this.albumid;\n              }\n              this.progressvalue = 80;\n              this.albumService.saveAlbum(this.userObj.userid, theForm.artistid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.progressvalue = 0;\n                  this.toastr.error(data.message);\n                } else {\n                  this.progressvalue = 90;\n                  this.loading = false;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listalbum']);\n                  this.progressvalue = 100;\n                }\n                this.addAlbumForm.reset();\n                this.artistVar.nativeElement.selectedIndex = 0;\n                this.genreVar.nativeElement.selectedIndex = 0;\n                this.albumimageVar.nativeElement.value = \"\";\n                this.progressvalue = 0;\n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }   \n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n \n    } else {\n      this.toastr.error('Please provide the album cover/image...');\n    }\n  } */\n\n  fileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"image/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.filesToUpload = <Array<File>>fileInput.target.files;\n      } else {\n        let mfsize = +this.maxfilesize.value/1000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Kb');\n        this.albumimageVar.nativeElement.value = \"\";\n      }\n    } else  {\n      alert('Error file type. You must input image file type.');\n      this.albumimageVar.nativeElement.value = \"\";\n    }    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/addalbum/addalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbum/editalbum.component.css\n// module id = ./src/app/components/album/editalbum/editalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Album</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"albumForm\\\" (ngSubmit)=\\\"saveAlbum(albumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumname').invalid && albumForm.get('albumname').dirty}\\\">\\n            <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumname').dirty && albumForm.get('albumname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} album name</span>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('artistid').invalid && albumForm.get('artistid').dirty}\\\">\\n            <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n                    <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('artistid').dirty && albumForm.get('artistid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('artistid').errors.required\\\">\\n                    Please select artist status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumyear').invalid && albumForm.get('albumyear').dirty}\\\">\\n            <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumyear').dirty && albumForm.get('albumyear').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter album year</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumgenre').invalid && albumForm.get('albumgenre').dirty}\\\">\\n            <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Album Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n                    <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumgenre').dirty && albumForm.get('albumgenre').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumgenre').errors.required\\\">\\n                    Please select album genre\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumprice').invalid && albumForm.get('albumprice').dirty}\\\">\\n            <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"albumprice\\\" [formControl]=\\\"albumprice\\\" placeholder=\\\"Enter price\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumprice').dirty && albumForm.get('albumprice').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumprice').errors.required\\\">\\n                    Please enter price\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumprice').errors.pattern\\\">\\n                    Please enter a valid amount\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('status').invalid && albumForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('status').dirty && albumForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('status').errors.required\\\">\\n                    Please select album status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"albumForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbum/editalbum.component.html\n// module id = ./src/app/components/album/editalbum/editalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editalbum',\n  templateUrl: './editalbum.component.html',\n  styleUrls: ['./editalbum.component.css']\n})\nexport class EditalbumComponent implements OnInit {\n  albumForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  albumid: String;\n  artistlist: IArtistList[];\n  btnLbl: String;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  \n  artistid = new FormControl('', [Validators.required]);  \n  albumname = new FormControl('', [Validators.required]);\n  albumyear = new FormControl('', [Validators.required]);\n  albumgenre = new FormControl('', [Validators.required]);\n  albumprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.albumid = params['id'];\n      this.getAlbum(this.albumid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getArtistList(this.userObj.userid);\n    this.albumForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      albumprice: this.albumprice,\n      status: this.status\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    },\n    err => {\n      this.artistlist = [{_id:'', artistname:'Error artist list'}];\n    });\n  }\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n          this.router.navigate(['listalbum']);\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n      this.router.navigate(['listalbum']);\n    });\n  }\n  populateForm(data): void {\n    this.albumForm.patchValue({\n      artistid: data.artistid,\n      albumname: data.albumname,\n      albumyear: data.albumyear,\n      albumgenre: data.albumgenre,\n      albumprice: data.albumprice,\n      status: data.status\n    });\n  }\n  \n  saveAlbum(formdata:any): void {\n    if (this.albumForm.valid) {\n      const theForm:any = this.albumForm.value;\n      if (this.albumid !== '') {\n        theForm.albumid = this.albumid;\n      \n      }\n      this.loading = true;\n      this.albumService.pubsaveAlbum(this.userObj.userid, theForm)\n        .subscribe(data => {\n          this.loading = false;\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.albumid) {\n            this.albumForm.reset();\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n/*   saveAlbum(formdata:any): void {\n    if (this.albumForm.valid) {\n      const theForm:any = this.albumForm.value;\n      if (this.albumid !== '') {\n        theForm.albumid = this.albumid;\n      \n      }\n      this.loading = true;\n      this.albumService.saveAlbum(this.userObj.userid,theForm.artistid, theForm)\n        .subscribe(data => {\n          this.loading = false;\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.albumid) {\n            this.albumForm.reset();\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  } */\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/editalbum/editalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbumphoto/editalbumphoto.component.css\n// module id = ./src/app/components/album/editalbumphoto/editalbumphoto.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Change Photo</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"albumForm\\\" (ngSubmit)=\\\"updatePhoto(albumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n\\n        <div class=\\\"form-group\\\">\\n            <!-- <label for=\\\"albumimage\\\" class=\\\"col-sm-2 control-label\\\"></label> -->\\n            <div class=\\\"col-sm-12\\\">\\n                <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">   \\n            <!-- <label class=\\\"col-sm-2 control-label\\\"></label> -->\\n            <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"control-label\\\" style=\\\"color:red;\\\"><sup>* <u>FILE SIZE (MAX {{ +this.maxfilesize?.value/1000 }} KB)</u></sup></label>    \\n                <div class=\\\"input-group\\\">\\n                    <label class=\\\"input-group-btn\\\">\\n                        <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                            Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"albumimage\\\" id=\\\"albumimage\\\" style=\\\"display:none\\\">\\n                        </span>\\n                    </label>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n                </div>\\n            </div>            \\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">  </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">  </label>\\n            <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n            <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n          </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <button [disabled]=\\\"this.loading == true\\\" type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbumphoto/editalbumphoto.component.html\n// module id = ./src/app/components/album/editalbumphoto/editalbumphoto.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IAlbum } from '../../../interface/album';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editalbumphoto',\n  templateUrl: './editalbumphoto.component.html',\n  styleUrls: ['./editalbumphoto.component.css']\n})\nexport class EditalbumphotoComponent implements OnInit {\n  albumForm: FormGroup\n  userObj: any;\n  album: IAlbum;\n  albumid: String;\n  filesToUpload: Array<File> = [];\n  loading = false;\n  albumuploadpath:string;\n  progressvalue = 0;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private albumService: AlbumService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private ftService:FiletransferService,\n    private globals: Globals,\n    private msconfigService: MsconfigService,\n  ) { }\n  \n  albumphotopath = new FormControl('', [Validators.nullValidator]);\n  albumphotoname = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.albumuploadpath = this.globals.albumuploadpath;\n    this.progressvalue = 0;\n    this.getMsconfigVal('IMGSIZE','FSIZE');\n    this.albumForm = this.fb.group({\n      albumphotopath: this.albumphotopath,\n      albumphotoname: this.albumphotoname\n    });\n    this.route.params.subscribe((params: any) => {\n      this.albumid = params['id'];\n      this.getAlbum(this.albumid);\n    });\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      }\n    },\n    err => {\n      this.maxfilesize = {code:'', value:'0'};\n    });\n  }\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.album = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n          this.router.navigate(['listalbum']);\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n      this.router.navigate(['listalbum']);\n    });\n  }\n\n  populateForm(data): void {\n    this.deletedFilename = this.album.albumphotoname;\n    this.displayImg = this.album.albumphotopath;\n    this.albumForm.patchValue({\n      albumphotopath: data.albumphotopath,\n      albumphotoname: data.albumphotoname\n    });\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"image/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.filesToUpload = <Array<File>>fileInput.target.files;\n        this.newfile = this.filesToUpload[0]['name'];\n        //console.log('content file: ' + this.filesToUpload);\n        this.progressvalue = 0;\n        this.uploadNewPhoto(this.filesToUpload);  \n      } else {\n        let mfsize = +this.maxfilesize.value/1000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Kb');\n      }\n    } else  {\n      alert('Error file type. You must input image file type.');\n    }   \n  }\n  \n  uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.albumuploadpath);\n    this.progressvalue = 30;\n    this.loading = true;\n    this.progressvalue = 40;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        this.progressvalue = 60;\n        this.displayImg = data.filedata.filepath;\n        let payloadData: any = {};\n        payloadData.oldalbumphotoname = this.albumForm.value.albumphotoname;\n        payloadData.uploadpath = this.albumuploadpath;\n        payloadData.albumphotoname = data.filedata.filename;\n        payloadData.albumphotopath = data.filedata.filepath;\n        payloadData.labelid = this.userObj.userid;\n        this.progressvalue = 80;\n        this.progressvalue = 90;   \n        this.albumService.pubupdateAlbumphoto(this.albumid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 100;\n            this.loading = false;\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.progressvalue = 0;\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  }\n\n/*   uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.albumuploadpath);\n    this.progressvalue = 30;\n    this.loading = true;\n    this.progressvalue = 40;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        this.progressvalue = 60;\n        this.displayImg = data.filedata.filepath;\n        let payloadData: any = {};\n        payloadData.uploadpath = this.albumuploadpath;\n        payloadData.filename = this.albumForm.value.albumphotoname;\n        this.progressvalue = 80;\n        this.ftService.deleteInputFile(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.filename);\n            }   \n          },\n          err => {\n            console.log(err);\n          });\n        this.progressvalue = 90;   \n        this.albumForm.value.albumphotopath = data.filedata.filepath;\n        this.albumForm.value.albumphotoname = data.filedata.filename;\n\n        //console.log('Update database photo - ' + this.displayImg);\n        this.albumService.updateAlbumphoto(this.albumid, this.albumForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 100;\n            this.loading = false;\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.progressvalue = 0;\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  } */\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/editalbumphoto/editalbumphoto.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/listalbum/listalbum.component.css\n// module id = ./src/app/components/album/listalbum/listalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>List Album</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"albumname\\\" class=\\\"col-sm-2 paddingsearch\\\">Name</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"artistid\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n                                <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n                                <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                            </select>\\n                          </div>\\n                    </div>                \\n\\n                </div>\\n               <div class=\\\"row rowmarginsearch\\\">   \\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 paddingsearch\\\">Genre</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                            <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                         </select>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"albumyear\\\" class=\\\"col-sm-2 paddingsearch\\\">Year</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n                        </div>\\n                    </div>\\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                          </select>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label class=\\\"col-sm-2 paddingsearch\\\"></label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                    </div>\\n                  </div>                \\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"albums && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No album found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems like you havn't entered any albums for the selected criteria. Please add the album <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddAlbums()\\\">here</a>.\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"albums && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-hover\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\">Artist</th>\\n                          <!-- <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th> -->\\n                          <th width=\\\"9%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                          <th width=\\\"10%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let albm of albums; let albIndex = index'>\\n                          <td scope=\\\"row\\\" data-label=\\\"Album Name\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showAlbum(albm._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ albm.albumname}}</a></td>\\n                          <td data-label=\\\"Artist\\\">{{ albm.artist }}</td>\\n                          <!-- <td>{{ albm.albumyear}}</td> -->\\n                          <td data-label=\\\"Genre\\\">{{ albm.genrevalue}}</td>\\n                          <td data-label=\\\"Price\\\" class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td data-label=\\\"Action\\\">\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editAlbumPhoto(albm._id)\\\">\\n                                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Album Photo\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editAlbum(albm._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Album Data\\\">\\n                                  <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(albIndex, albm._id, albm.albumname, albm.albumphotoname )\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Album\\\">\\n                                  <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      \\n                  </tbody>\\n              </table>\\n          </div>\\n\\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div>\\n\\n      </div>\\n  </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/listalbum/listalbum.component.html\n// module id = ./src/app/components/album/listalbum/listalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAggAlbum } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\n\n@Component({\n  selector: 'app-listalbum',\n  templateUrl: './listalbum.component.html',\n  styleUrls: ['./listalbum.component.css']\n})\nexport class ListalbumComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artistlist: IArtistList[];\n  albums: IAggAlbum[];\n  song: ISong;\n  totalrows: number;\n  pgCounter: number;\n  qalbumname: String;\n  qartistid: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  //artistname: String;\n  loading = false;\n  albumuploadpath:string;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n\n  artistid = new FormControl('',[Validators.nullValidator]);\n  albumname = new FormControl('',[Validators.nullValidator]);\n  albumyear = new FormControl('',[Validators.nullValidator]);\n  albumgenre = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.albumuploadpath = this.globals.albumuploadpath;\n    this.reportForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getArtistList(this.userObj.userid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistid = params['artistid'] || '';\n      this.qalbumname = params['albumname'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qalbumgenre = params['albumgenre'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n       let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistid = this.qartistid;\n      payload.albumname = this.qalbumname;\n      payload.albumyear = this.qalbumyear;\n      payload.albumgenre = this.qalbumgenre;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload); \n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    },\n    err => {\n      this.artistlist = [{_id:'', artistname:'Error artist list'}];\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['listalbum'],\n        {\n          queryParams: { artistid: this.reportForm.value.artistid,\n            albumname: this.reportForm.value.albumname,\n            albumyear: this.reportForm.value.albumyear,\n            albumgenre: this.reportForm.value.albumgenre, \n            status: this.reportForm.value.status, \n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.albumService.getAggAlbums(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        //this.albums = data.data.docs;\n        this.albums = data.data;\n        //console.log(this.albums);\n        //this.totalrows = +data.data.totalcount;\n        this.totalrows = +data.totalcount;\n        //console.log(this.totalrows);\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistid = formval.artistid;\n        this.qalbumname = formval.albumname;\n        this.qalbumyear = formval.albumyear;\n        this.qalbumgenre = formval.albumgenre;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Albums Result';\n        \n        this.reportForm.patchValue({\n          artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre,\n          status: this.qstatus\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listalbum'],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listalbum'],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n/*   getArtistName(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          return data.data[0].artistname;\n        } else {\n          return 'Artist id is incorrect in the URL';\n        }\n      }\n    });\n  } */\n  showAlbum(albumid): void {\n    this.router.navigate([`viewalbum/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  \n  confirmDel(idx: number, albumid: string, albumname:string, albumphotoname:string) {\n    var totalsong: number;\n\n    let payload: any = {};\n    payload.albumid = albumid;\n    this.loading = true;\n    this.songService.getSongList(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        totalsong = +data.totalcount;\n        if (totalsong > 0) {\n          this.toastr.warning('Can not delete album. It already has songs.');\n        } else {\n          if(confirm('Do you really want to delete this album: ' + albumname + ' record?')){\n            let payloadData: any = {};\n            payloadData.labelid = this.userObj.userid;\n            payloadData.albumphotoname = albumphotoname;\n            payloadData.uploadpath = this.albumuploadpath;\n            this.loading = true;\n            this.albumService.pubdeleteAlbum(albumid, payloadData)\n            .subscribe(data => {\n              if (data.success === false) {\n                this.loading = false;\n                if (data.errcode){\n                  this.authService.logout();\n                  this.router.navigate(['login']);\n                }\n                this.toastr.error(data.message);\n              } else {\n                this.loading = false;\n                this.albums.splice(idx, 1);\n                this.totalrows = this.totalrows - 1;\n                this.toastr.success(data.message);  \n              }\n            },\n            err => {\n              this.loading = false;\n              //console.log(err);\n              this.toastr.error(err);\n            });\n          }\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n/*   confirmDel(idx: number, albumid: string, albumname:string, albumphotoname:string) {\n    var totalsong: number;\n\n    let payload: any = {};\n    payload.albumid = albumid;\n    this.loading = true;\n    this.songService.getSongList(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        totalsong = +data.totalcount;\n        if (totalsong > 0) {\n          this.toastr.warning('Can not delete album. It already has songs.');\n        } else {\n          if(confirm('Do you really want to delete this album: ' + albumname + ' record?')){\n            let payloadData: any = {};\n            payloadData.uploadpath = this.albumuploadpath;\n            payloadData.filename = albumphotoname;\n            this.loading = true;\n            this.ftService.deleteInputFile(payloadData)\n            .subscribe(data => {\n               if (data.success === false) {\n                this.loading = false;\n                  if (data.errcode){\n                    this.authService.logout();\n                    this.router.navigate(['login']);\n                  }\n                  this.toastr.error(data.message);\n                } else {\n                  this.albumService.deleteAlbum(albumid)\n                  .subscribe(data => {\n                    if (data.success === false) {\n                      this.loading = false;\n                      if (data.errcode){\n                        this.authService.logout();\n                        this.router.navigate(['login']);\n                      }\n                      this.toastr.error(data.message);\n                    } else {\n                      this.loading = false;\n                      this.albums.splice(idx, 1);\n                      this.totalrows = this.totalrows - 1;\n                      this.toastr.success(data.message);  \n                    }\n                  },\n                  err => {\n                    this.loading = false;\n                    //console.log(err);\n                    this.toastr.error(err);\n                  });\n                }\n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  } */\n  \n  editAlbum(albumid): void {\n    this.router.navigate([`editalbum/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  editAlbumPhoto(albumid): void {\n    this.router.navigate([`editalbumphoto/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  toaddAlbums(): void {\n    this.router.navigate(['/addalbum']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/listalbum/listalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/viewalbum/viewalbum.component.css\n// module id = ./src/app/components/album/viewalbum/viewalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Album Details</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n          <form [formGroup]=\\\"albumForm\\\" class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ album?.albumname }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <div class=\\\"form-ele\\\">{{ album?.albumname }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ artist?.artistname }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Year</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ album?.albumyear }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <div class=\\\"form-ele\\\">{{ album?.albumyear }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n                <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                    <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"albumgenre\\\" disabled>\\n                        <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                    </select>\\n                    <!-- <div class=\\\"form-ele\\\">{{ album?.albumgenre }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ album?.albumprice | currency: 'IDR':'symbol-narrow' }}\\n                    <!-- <div class=\\\"input-group-addon\\\">Rp</div>\\n                    <div class=\\\"form-ele\\\">{{ album?.albumprice | currency: 'IDR':true }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n                <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                    <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                        <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                    </select>\\n                    <!-- <div class=\\\"form-ele\\\">{{ album?.status }}</div> -->\\n                </div>\\n            </div>\\n          </form>\\n        </div>\\n        <div class=\\\"col-sm-4 thumbpadding\\\">\\n            <img src=\\\"{{ album?.albumphotopath }}\\\" class=\\\"img-thumbnail thumbviewsize\\\">\\n        </div>\\n    </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"dtlpadding\\\" *ngIf=\\\"songs && totalrows > 0\\\">\\n                <div class=\\\"col-md-11 col-lg-11\\\">\\n                        <b>( TOTAL : {{ totalrows }} songs ) </b><br> \\n                    <!-- <div class=\\\"table-responsive\\\"> -->\\n                        <table class=\\\"table table-striped\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\" width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Title</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songpublish')\\\">Published?</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songbuy')\\\">Total Purchase</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor='let song of songs; let songIndex = index'>\\n                                    <td scope=\\\"row\\\" data-label=\\\"Song Title\\\">{{ song.songname}}</td>\\n                                    <td data-label=\\\"Publish\\\">{{ song.songpublish}}</td>\\n                                    <td data-label=\\\"Purchase\\\">{{ song.songbuy}}</td>\\n                                    <td data-label=\\\"Song Price\\\" class=\\\"text-right\\\">{{ song.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                                    <td data-label=\\\"Status\\\">{{ song.stsvalue}}</td>\\n                                </tr>\\n                                \\n                            </tbody>\\n                        </table>\\n                    <!-- </div> -->\\n            \\n                    <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n                        <nav aria-label=\\\"Page navigation\\\">\\n                            <ul class=\\\"pagination\\\">\\n                                <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                    <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                                </li>\\n                            </ul>\\n                        </nav>\\n                    </div>\\n            \\n                </div>\\n                <div class=\\\"col-md-1 col-lg-1\\\"></div>\\n            </div>      \\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n        <br>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/viewalbum/viewalbum.component.html\n// module id = ./src/app/components/album/viewalbum/viewalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewalbum',\n  templateUrl: './viewalbum.component.html',\n  styleUrls: ['./viewalbum.component.css']\n})\nexport class ViewalbumComponent implements OnInit {\n  artist: IArtist;\n  album: IAlbum;\n  artistid: String;\n  albumid: String;\n  userObj: any;\n  songs: ISong[];\n  totalrows: number;\n  pgCounter: number;\n  qsongname: String;\n  qalbumid: String;\n\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n  genre: IMsconfigGroupList[];\n  sts: IMsconfigGroupList[];\n  albumForm: FormGroup;\n  \n  private sub: Subscription;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,    \n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  albumgenre = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let albumid = params['id'];\n        this.albumid = albumid;\n      });\n    console.log(this.albumid);  \n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getAlbum(this.albumid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qalbumid = params['albumid'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      this.qalbumid = this.albumid;\n      payload.albumid = this.qalbumid;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n    });\n    this.albumForm = this.fb.group({\n      albumgenre: this.albumgenre,\n      status: this.status\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.album = data.data[0];\n          this.getArtistName(this.album.artistid);\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n        }\n        \n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  \n  populateForm(data): void {\n    this.albumForm.patchValue({\n      albumgenre: data.albumgenre,\n      status: data.status\n    });\n  }\n\n  getArtistName(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  fetchReport(userid, formval) {\n    this.songService.getSongList(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qalbumid = formval.albumid;\n        this.reportTitle = 'Songs Result';\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate([`viewalbum/${this.albumid}`],\n      {\n        queryParams: { albumid: this.qalbumid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewalbum/${this.albumid}`],\n      {\n        queryParams: { albumid: this.qalbumid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/viewalbum/viewalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/albumstats/albumstats.component.css\n// module id = ./src/app/components/albumstats/albumstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Albums</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"labelid\\\" class=\\\"col-sm-2 paddingsearch\\\">Label</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                              <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                              <option value=\\\"\\\">Select the label</option>\\n                              <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                          </select>\\n                        </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"albumname\\\" class=\\\"col-sm-2 paddingsearch\\\">Album</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n                      </div>\\n                  </div>\\n                </div>\\n               <div class=\\\"row rowmarginsearch\\\">   \\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 paddingsearch\\\">Genre</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                            <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                         </select>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"albumyear\\\" class=\\\"col-sm-2 paddingsearch\\\">Year</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                          </select>\\n                      </div>\\n                  </div>\\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label class=\\\"col-sm-2 paddingsearch\\\"></label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                      </div>\\n                    </div>                \\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"albums && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No album found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems there is NO albums entered yet for the selected criteria.\\n      </div>\\n  </div>\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"albums && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-hover\\\">\\n                  <thead>\\n                      <tr>\\n                          <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                          <th scope=\\\"col\\\" width=\\\"20%\\\">Label</th>\\n                          <th scope=\\\"col\\\" width=\\\"20%\\\">Artist</th>\\n                          <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th>\\n                          <th scope=\\\"col\\\" width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                          <th scope=\\\"col\\\" width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let albm of albums; let albIndex = index'>\\n                          <td scope=\\\"row\\\" data-label=\\\"Album Name\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showAlbum(albm._id, albm.labelid)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ albm.albumname}}</a></td>\\n                          <td data-label=\\\"Label\\\">{{ albm.label }}</td>\\n                          <td data-label=\\\"Artist\\\">{{ albm.artist }}</td>\\n                          <td data-label=\\\"Album Year\\\">{{ albm.albumyear}}</td>\\n                          <td data-label=\\\"Genre\\\">{{ albm.genrevalue}}</td>\\n                          <td data-label=\\\"Album Price\\\" class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div>\\n\\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div>\\n\\n      </div>\\n  </div> \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/albumstats/albumstats.component.html\n// module id = ./src/app/components/albumstats/albumstats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { ArtistService } from '../../services/artist.service';\nimport { AlbumService } from '../../services/album.service';\nimport { SongService } from '../../services/song.service';\nimport { AuthService } from '../../services/auth.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { IArtistList } from '../../interface/artist';\nimport { IAggAlbum } from '../../interface/album';\nimport { IUserList } from '../../interface/user';\nimport { ISong } from '../../interface/song';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\nimport { FiletransferService } from '../../services/filetransfer.service';\nimport { Globals } from '../../app.global';\n\n@Component({\n  selector: 'app-albumstats',\n  templateUrl: './albumstats.component.html',\n  styleUrls: ['./albumstats.component.css']\n})\nexport class AlbumstatsComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artistlist: IArtistList[];\n  userlist: IUserList[];\n  albums: IAggAlbum[];\n  song: ISong;\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qalbumname: String;\n  qartistname: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  //artistname: String;\n  loading = false;\n  albumuploadpath:string;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n\n  labelid = new FormControl('',[Validators.nullValidator]);\n  artistname = new FormControl('',[Validators.nullValidator]);\n  albumname = new FormControl('',[Validators.nullValidator]);\n  albumyear = new FormControl('',[Validators.nullValidator]);\n  albumgenre = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.albumuploadpath = this.globals.albumuploadpath;\n    this.reportForm = this.fb.group({\n      labelid: this.labelid,\n      artistname: this.artistname,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getLabels();\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qartistname = params['artistname'] || '';\n      this.qalbumname = params['albumname'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qalbumgenre = params['albumgenre'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n       let payload: any = {};\n      payload.status = this.qstatus;\n      payload.labelid = this.qlabelid;\n      payload.artistname = this.qartistname;\n      payload.albumname = this.qalbumname;\n      payload.albumyear = this.qalbumyear;\n      payload.albumgenre = this.qalbumgenre;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload); \n    })\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n    });\n  }\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Error label list'}];\n        }\n      }\n    },\n    err => {\n      this.userlist = [{_id:'', name:'Error label list'}];\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['albumstats'],\n        {\n          queryParams: { labelid: this.reportForm.value.labelid,\n            artistname: this.reportForm.value.artistname,\n            albumname: this.reportForm.value.albumname,\n            albumyear: this.reportForm.value.albumyear,\n            albumgenre: this.reportForm.value.albumgenre, \n            status: this.reportForm.value.status, \n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.albumService.getAggAlbumstats(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.albums = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n\n        this.qlabelid = formval.labelid;\n        this.qartistname = formval.artistname;\n        this.qalbumname = formval.albumname;\n        this.qalbumyear = formval.albumyear;\n        this.qalbumgenre = formval.albumgenre;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Albums Result';\n        \n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          artistid: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre,\n          status: this.qstatus\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['albumstats'],\n      {\n        queryParams: { labelid: this.qlabelid, \n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['albumstats'],\n      {\n        queryParams: { labelid: this.qlabelid,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  showAlbum(albumid, labelid): void {\n      this.router.navigate([`viewalbumstats/${albumid}`],\n        {\n          queryParams: { label:labelid, \n            labelid: this.qlabelid,\n            artistname: this.qartistname,\n            albumname: this.qalbumname,\n            albumyear: this.qalbumyear,\n            albumgenre: this.qalbumgenre, \n            status: this.qstatus, \n            page: this.qpage || 1, \n            sortby: this.qsort }\n        }\n      );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/albumstats/albumstats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.css\n// module id = ./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Album Details</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n          <form [formGroup]=\\\"albumForm\\\" class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ album?.albumname }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <div class=\\\"form-ele\\\">{{ album?.albumname }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ artist?.artistname }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Year</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ album?.albumyear }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <div class=\\\"form-ele\\\">{{ album?.albumyear }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n                <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                    <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"albumgenre\\\" disabled>\\n                        <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                    </select>\\n                    <!-- <div class=\\\"form-ele\\\">{{ album?.albumgenre }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n                <div class=\\\"form-ele col-sm-10\\\">{{ album?.albumprice | currency: 'IDR':'symbol-narrow' }}\\n                    <!-- <div class=\\\"input-group-addon\\\">Rp</div>\\n                    <div class=\\\"form-ele\\\">{{ album?.albumprice | currency: 'IDR':true }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n                <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                    <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                        <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                    </select>\\n                    <!-- <div class=\\\"form-ele\\\">{{ album?.status }}</div> -->\\n                </div>\\n            </div>\\n          </form>\\n        </div>\\n        <div class=\\\"col-sm-4 thumbpadding\\\">\\n            <img src=\\\"{{ album?.albumphotopath }}\\\" class=\\\"img-thumbnail thumbviewsize\\\">\\n        </div>\\n    </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"dtlpadding\\\" *ngIf=\\\"songs && totalrows > 0\\\">\\n                <div class=\\\"col-md-11 col-lg-11\\\">\\n                    <b>( TOTAL : {{ totalrows }} songs ) </b>\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table table-striped\\\" width=\\\"80%\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th scope=\\\"col\\\" width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Name</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songpublish')\\\">Published?</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songbuy')\\\">Total Purchase</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                                    <th scope=\\\"col\\\" width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor='let song of songs; let songIndex = index'>\\n                                    <td scope=\\\"row\\\" data-label=\\\"Song Title\\\">{{ song.songname}}</td>\\n                                    <td data-label=\\\"Publish\\\">{{ song.songpublish}}</td>\\n                                    <td data-label=\\\"Purchase\\\">{{ song.songbuy}}</td>\\n                                    <td data-label=\\\"Song Price\\\" class=\\\"text-right\\\">{{ song.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                                    <td data-label=\\\"Status\\\">{{ song.stsvalue}}</td>\\n                                </tr>\\n                                \\n                            </tbody>\\n                        </table>\\n                    </div>\\n            \\n                    <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n                        <nav aria-label=\\\"Page navigation\\\">\\n                            <ul class=\\\"pagination\\\">\\n                                <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                    <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                                </li>\\n                            </ul>\\n                        </nav>\\n                    </div>\\n            \\n                </div>\\n                <div class=\\\"col-md-1 col-lg-1\\\"></div>\\n            </div>      \\n        </div>\\n\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n        <br>\\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.html\n// module id = ./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewalbumstats',\n  templateUrl: './viewalbumstats.component.html',\n  styleUrls: ['./viewalbumstats.component.css']\n})\nexport class ViewalbumstatsComponent implements OnInit {\n  artist: IArtist;\n  album: IAlbum;\n  artistid: String;\n  albumid: String;\n  userObj: any;\n  songs: ISong[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qsongname: String;\n  qalbumid: String;\n\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n  genre: IMsconfigGroupList[];\n  sts: IMsconfigGroupList[];\n  albumForm: FormGroup;\n  \n  private sub: Subscription;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,    \n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  albumgenre = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let albumid = params['id'];\n        this.albumid = albumid;\n      });\n    console.log(this.albumid);  \n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getAlbum(this.albumid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['label'] || '';\n      this.qalbumid = params['albumid'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      this.qalbumid = this.albumid;\n      payload.labelid = this.qlabelid;\n      payload.albumid = this.qalbumid;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n    });\n    this.albumForm = this.fb.group({\n      albumgenre: this.albumgenre,\n      status: this.status\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.album = data.data[0];\n          this.getArtistName(this.album.artistid);\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n        }\n        \n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  populateForm(data): void {\n    this.albumForm.patchValue({\n      albumgenre: data.albumgenre,\n      status: data.status\n    });\n  }\n\n  getArtistName(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  fetchReport(userid, formval) {\n    this.songService.getSongListstats(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qlabelid = formval.labelid;\n        this.qalbumid = formval.albumid;\n        this.reportTitle = 'Songs Result';\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate([`viewalbumstats/${this.albumid}`],\n      {\n        queryParams: { labelid: this.qlabelid,\n          albumid: this.qalbumid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewalbumstats/${this.albumid}`],\n      {\n        queryParams: { labelid: this.qlabelid,\n          albumid: this.qalbumid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['../albumstats'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/albumstats/viewalbumstats/viewalbumstats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/addartist/addartist.component.css\n// module id = ./src/app/components/artist/addartist/addartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Artist</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form  [formGroup]=\\\"addArtistForm\\\" (ngSubmit)=\\\"addArtist(addArtistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addArtistForm.get('artistname').invalid && addArtistForm.get('artistname').dirty}\\\">\\n        <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Artist Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"artistname\\\" id=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"addArtistForm.get('artistname').dirty && addArtistForm.get('artistname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addArtistForm.get('artistname').errors.required\\\">\\n                Please enter the artist name\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addArtistForm.get('artistimage').invalid && addArtistForm.get('artistimage').dirty}\\\">\\n        <label for=\\\"artistimage\\\" class=\\\"col-sm-2 control-label\\\">Artist Photo <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" #inputimg type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"artistimage\\\" id=\\\"artistimage\\\" placeholder=\\\"Artistimage\\\">\\n            <span class=\\\"control-label\\\" style=\\\"text-align:bottom;font-size:10px;color:red;\\\">&nbsp;&nbsp;<u><b>(MAX {{ +this.maxfilesize?.value/1000 }} KB)</b></u></span>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n         <label class=\\\"col-sm-2 control-label\\\">  </label>\\n       <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n       <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-5\\\" style=\\\"padding:0;margin:0;\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"addArtistForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n        </div>\\n        <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n            <sup>*</sup> required\\n        </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/addartist/addartist.component.html\n// module id = ./src/app/components/artist/addartist/addartist.component.html\n// module chunks = main","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-addartist',\n  templateUrl: './addartist.component.html',\n  styleUrls: ['./addartist.component.css']\n})\n\n\nexport class AddartistComponent implements OnInit {\n  addArtistForm: FormGroup;\n  userObj: any;\n  //status: any = ['active', 'inactive'];\n  filesToUpload: Array<File> = [];\n  artistid: String;\n  artistuploadpath:string;\n  loading = false;\n  progressvalue = 0;\n  @ViewChild('inputimg')artistimageVar: any;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private ftService:FiletransferService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private globals: Globals,\n    private msconfigService: MsconfigService\n  ) { }\n  \n  artistname = new FormControl('', [Validators.required]);\n  artistphotopath: String;\n  artistphotoname: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.artistid = '';\n    this.artistuploadpath = this.globals.artistuploadpath;\n    this.getMsconfigVal('IMGSIZE','FSIZE');\n    this.progressvalue = 0;\n    this.addArtistForm = this.fb.group({\n      artistname: this.artistname,\n      artistimage: this.filesToUpload,\n      artistphotopath: this.artistphotopath,\n      artistphotoname: this.artistphotoname\n    });\n  }\n\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      }\n    },\n    err => {\n      this.maxfilesize = {code:'', value:'0'};\n    });\n  }\n\n/*   addArtist(formdata:any): void {\n    this.progressvalue = 0;\n    const files: Array<File> = this.filesToUpload;\n    if (this.addArtistForm.dirty && this.addArtistForm.valid && files[0]) {\n      this.progressvalue = 10;\n      let theForm = this.addArtistForm.value;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ files[0]['name']);\n      this.progressvalue = 30;\n      lformData.append('fileinputsrc',files[0],files[0]['name']);\n      lformData.append('uploadpath',this.artistuploadpath);\n      //console.log(lformData.getAll('artistimage'));\n      //console.dir(theForm);\n      this.loading = true;\n      this.progressvalue = 50;\n      this.ftService.uploadInputFile(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n              this.progressvalue = 70;\n              theForm.artistphotopath = data.filedata.filepath;\n              theForm.artistphotoname = data.filedata.filename;\n              theForm.status = 'STSACT';\n              this.progressvalue = 90;\n              //console.log('Ini file path: '+ theForm.artistphotopath);\n              if (this.artistid !== '') {\n                theForm.artistid = this.artistid;\n              }\n              this.artistService.saveArtist(this.userObj.userid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.progressvalue = 0;\n                  this.toastr.error(data.message);\n                } else {\n                  this.loading = false;\n                  this.progressvalue = 100;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listartist']);\n                }\n                this.addArtistForm.reset();\n                this.artistimageVar.nativeElement.value = \"\";\n                this.progressvalue = 0;\n              },\n              err => {\n                this.loading = false;\n                this.progressvalue = 0;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }   \n        },\n        err => {\n          this.progressvalue = 0;\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n \n    } else {\n        this.toastr.error('Please provide artist photo...');\n    }\n  } */\n  \n  addArtist(formdata:any): void {\n    this.progressvalue = 0;\n    const files: Array<File> = this.filesToUpload;\n    if (this.addArtistForm.dirty && this.addArtistForm.valid && files[0]) {\n      this.progressvalue = 10;\n      let theForm = this.addArtistForm.value;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ files[0]['name']);\n      this.progressvalue = 30;\n      lformData.append('fileinputsrc',files[0],files[0]['name']);\n      lformData.append('uploadpath',this.artistuploadpath);\n      //console.log(lformData.getAll('artistimage'));\n      //console.dir(theForm);\n      this.loading = true;\n      this.progressvalue = 50;\n      this.ftService.uploadInputFile(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n              this.progressvalue = 70;\n              theForm.artistphotopath = data.filedata.filepath;\n              theForm.artistphotoname = data.filedata.filename;\n              theForm.status = 'STSACT';\n              this.progressvalue = 90;\n              //console.log('Ini file path: '+ theForm.artistphotopath);\n              if (this.artistid !== '') {\n                theForm.artistid = this.artistid;\n              }\n              this.artistService.pubsaveArtist(this.userObj.userid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.progressvalue = 0;\n                  this.toastr.error(data.message);\n                } else {\n                  this.loading = false;\n                  this.progressvalue = 100;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listartist']);\n                }\n                this.addArtistForm.reset();\n                this.artistimageVar.nativeElement.value = \"\";\n                this.progressvalue = 0;\n              },\n              err => {\n                this.loading = false;\n                this.progressvalue = 0;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }   \n        },\n        err => {\n          this.progressvalue = 0;\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n \n    } else {\n        this.toastr.error('Please provide artist photo...');\n    }\n  }\n/*   addArtist(formdata:any): void {\n    this.progressvalue = 0;\n    const files: Array<File> = this.filesToUpload;\n    if (this.addArtistForm.dirty && this.addArtistForm.valid && files[0]) {\n      this.progressvalue = 10;\n      let theForm = this.addArtistForm.value;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ files[0]['name']);\n      this.progressvalue = 30;\n      lformData.append('fileinputsrc',files[0],files[0]['name']);\n      lformData.append('uploadpath',this.artistuploadpath);\n      lformData.append('artistname',theForm.artistname);\n      lformData.append('status','STSACT');\n      //console.log(lformData.getAll('artistimage'));\n      //console.dir(theForm);\n      this.loading = true;\n      this.progressvalue = 70;\n      this.artistService.addArtist(this.userObj.userid,lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n              this.progressvalue = 80;\n              this.progressvalue = 90;\n              this.loading = false;\n              this.progressvalue = 100;\n              this.toastr.success(data.message);\n              this.addArtistForm.reset();\n              this.artistimageVar.nativeElement.value = \"\";\n              this.progressvalue = 0;\n          }   \n        },\n        err => {\n          this.progressvalue = 0;\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n \n    } else {\n        this.toastr.error('Please provide artist photo...');\n    }\n  } */\n  \n  fileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"image/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.filesToUpload = <Array<File>>fileInput.target.files;\n      } else {\n        let mfsize = +this.maxfilesize.value/1000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Kb');\n        this.artistimageVar.nativeElement.value = \"\";\n      }\n    } else  {\n      alert('Error file type. You must input image file type.');\n      this.artistimageVar.nativeElement.value = \"\";\n    }    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/addartist/addartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartist/editartist.component.css\n// module id = ./src/app/components/artist/editartist/editartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Artist</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"artistForm\\\" (ngSubmit)=\\\"saveArtist(artistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': artistForm.get('artistname').invalid && artistForm.get('artistname').dirty}\\\">\\n            <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"artistForm.get('artistname').dirty && artistForm.get('artistname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} artist name</span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': artistForm.get('status').invalid && artistForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"artistForm.get('status').dirty && artistForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"artistForm.get('status').errors.required\\\">\\n                    Please select artist status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"artistForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartist/editartist.component.html\n// module id = ./src/app/components/artist/editartist/editartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editartist',\n  templateUrl: './editartist.component.html',\n  styleUrls: ['./editartist.component.css']\n})\nexport class EditartistComponent implements OnInit {\n  artistForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  //sts: any = ['active', 'inactive'];\n  artistid: String;\n  btnLbl: String;\n  loading = false;\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistname = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n  \n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.artistid = params['id'];\n      this.getMsconfigGroupList('CSTATUS');\n      this.getArtist(this.artistid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.artistForm = this.fb.group({\n      artistname: this.artistname,\n      status: this.status\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n          this.router.navigate(['listartist']);\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n      this.router.navigate(['listartist']);\n    });\n  }\n  populateForm(data): void {\n    this.artistForm.patchValue({\n      artistname: data.artistname,\n      status: data.status\n    });\n  }\n\n  saveArtist(formdata:any): void {\n    if (this.artistForm.valid) {\n      const theForm:any = this.artistForm.value;\n      if (this.artistid !== '') {\n        theForm.artistid = this.artistid;\n      \n      }\n      this.loading = true;\n      this.artistService.pubsaveArtist(this.userObj.userid,theForm)\n        .subscribe(data => {\n          this.loading = false;\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.artistid) {\n            this.artistForm.reset();\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n/*   saveArtist(formdata:any): void {\n    if (this.artistForm.valid) {\n      const theForm:any = this.artistForm.value;\n      if (this.artistid !== '') {\n        theForm.artistid = this.artistid;\n      \n      }\n      this.loading = true;\n      this.artistService.saveArtist(this.userObj.userid,theForm)\n        .subscribe(data => {\n          this.loading = false;\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.artistid) {\n            this.artistForm.reset();\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  } */\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/editartist/editartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartistphoto/editartistphoto.component.css\n// module id = ./src/app/components/artist/editartistphoto/editartistphoto.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Change Photo</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"artistForm\\\" (ngSubmit)=\\\"updatePhoto(artistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n<!--       <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('imgpath').invalid && profileForm.get('imgpath').dirty}\\\">\\n          <label for=\\\"imgpath\\\" class=\\\"col-sm-2 control-label\\\">Image Path</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imgpath\\\" [formControl]=\\\"imgpath\\\" placeholder=\\\"Img Path\\\">\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('imgoriname').invalid && profileForm.get('imgoriname').dirty}\\\">\\n          <label for=\\\"imgoriname\\\" class=\\\"col-sm-2 control-label\\\">Image Oriname</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imgoriname\\\" [formControl]=\\\"imgoriname\\\" placeholder=\\\"Img Oriname\\\">\\n          </div>\\n      </div> -->\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-12\\\">\\n            <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n        </div>\\n      </div>    \\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"col-sm-12\\\">\\n          <label class=\\\"control-label\\\" style=\\\"color:red;\\\"><sup>* <u>FILE SIZE (MAX {{ +this.maxfilesize?.value/1000 }} KB)</u></sup></label>    \\n          <div class=\\\"input-group\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"artistimage\\\" id=\\\"artistimage\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n            </div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n        <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n        <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <div class=\\\"col-sm-12\\\">\\n              <button [disabled]=\\\"this.loading == true\\\" type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartistphoto/editartistphoto.component.html\n// module id = ./src/app/components/artist/editartistphoto/editartistphoto.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtist } from '../../../interface/artist';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editartistphoto',\n  templateUrl: './editartistphoto.component.html',\n  styleUrls: ['./editartistphoto.component.css']\n})\nexport class EditartistphotoComponent implements OnInit {\n  artistForm: FormGroup\n  userObj: any;\n  artist: IArtist;\n  artistid: String;\n  filesToUpload: Array<File> = [];\n  loading = false;\n  artistuploadpath:string;\n  progressvalue = 0;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private ftService:FiletransferService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private globals: Globals,\n    private msconfigService: MsconfigService\n  ) { }\n\n  artistphotopath = new FormControl('', [Validators.nullValidator]);\n  artistphotoname = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.progressvalue = 0;\n    this.artistuploadpath = this.globals.artistuploadpath;\n    this.getMsconfigVal('IMGSIZE','FSIZE');\n    this.artistForm = this.fb.group({\n      artistphotopath: this.artistphotopath,\n      artistphotoname: this.artistphotoname\n    });\n    this.route.params.subscribe((params: any) => {\n      this.artistid = params['id'];\n      this.getArtist(this.artistid);\n    });\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      }\n    },\n    err => {\n      this.maxfilesize = {code:'', value:'0'};\n    });\n  }\n\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n          this.router.navigate(['listartist']);\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n      this.router.navigate(['listartist']);\n    });\n  }\n\n  populateForm(data): void {\n    this.deletedFilename = this.artist.artistphotoname;\n    this.displayImg = this.artist.artistphotopath;\n    this.artistForm.patchValue({\n      artistphotopath: data.artistphotopath,\n      artistphotoname: data.artistphotoname\n    });\n  }\n  fileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    this.progressvalue = 0;\n    if (~files[0].type.indexOf(\"image/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.filesToUpload = <Array<File>>fileInput.target.files;\n        this.newfile = this.filesToUpload[0]['name'];\n        //console.log('content file: ' + this.filesToUpload);\n        this.uploadNewPhoto(this.filesToUpload);  \n      } else {\n        let mfsize = +this.maxfilesize.value/1000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Kb');\n      }\n    } else  {\n      alert('Error file type. You must input image file type.');\n    }    \n  }\n  \n  uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.artistuploadpath);\n    this.loading = true;\n    this.progressvalue = 30;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        this.progressvalue = 50;\n        this.displayImg = data.filedata.filepath;\n        let payloadData: any = {};\n        payloadData.uploadpath = this.artistuploadpath;\n        payloadData.oldartistphotoname = this.artistForm.value.artistphotoname;\n        payloadData.artistphotoname = data.filedata.filename;\n        payloadData.artistphotopath = data.filedata.filepath;\n        payloadData.labelid = this.userObj.userid;\n        this.progressvalue = 80;   \n        this.artistService.pubupdateArtistphoto(this.artistid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.progressvalue = 100;\n            //console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  }\n\n/*   uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.artistuploadpath);\n    lformData.append('artistphotoname',this.artistForm.value.artistphotoname);\n    lformData.append('labelid',this.userObj.userid);\n    this.loading = true;\n    this.progressvalue = 30;\n    this.artistService.pubupdateArtistphoto(this.artistid, lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.progressvalue = 50;\n        //this.displayImg = data.filedata.filepath;\n        this.progressvalue = 70;\n        this.progressvalue = 80;   \n        this.progressvalue = 100;\n        this.toastr.success(data.message);\n        this.progressvalue = 0;\n        this.router.navigate(['/listartist'], { preserveQueryParams: true });\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  } */\n/*   uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.artistuploadpath);\n    this.loading = true;\n    this.progressvalue = 30;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        this.progressvalue = 50;\n        this.displayImg = data.filedata.filepath;\n        let payloadData: any = {};\n        payloadData.uploadpath = this.artistuploadpath;\n        payloadData.filename = this.artistForm.value.artistphotoname;\n        this.progressvalue = 70;\n        this.ftService.deleteInputFile(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              this.progressvalue = 0;\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.filename);\n            }   \n          },\n          err => {\n            console.log(err);\n          });\n        this.progressvalue = 80;   \n        this.artistForm.value.artistphotopath = data.filedata.filepath;\n        this.artistForm.value.artistphotoname = data.filedata.filename;\n\n        //console.log('Update database photo - ' + this.displayImg);\n        this.artistService.updateArtistphoto(this.artistid, this.artistForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.progressvalue = 100;\n            //console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  } */\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/editartistphoto/editartistphoto.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/listartist/listartist.component.css\n// module id = ./src/app/components/artist/listartist/listartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>List Artist</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-7 col-md-7\\\">\\n                        <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Name</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-5 col-md-5\\\">\\n                        <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                                <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                                <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-7 col-md-7\\\">\\n                        <label for=\\\"submit\\\" class=\\\"col-sm-2 paddingsearch\\\">      </label>\\n                        <div class=\\\"col-sm-5\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                        </div>\\n                    </div> \\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"artists && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No artist found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            It seems like you havn't entered any artists for the selected criteria. Please add the artist <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddArtists()\\\">here</a>.\\n        </div>\\n    </div>\\n  \\n  \\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"artists && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"50%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('artistname')\\\">Artist Name</a></th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('status')\\\">Status</a></th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let artst of artists; let artIndex = index'>\\n                            <td scope=\\\"row\\\" data-label=\\\"Artist Name\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showArtist(artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ artst.artistname}}</a></td>\\n                            <td data-label=\\\"Status\\\">{{ artst.stsvalue}}</td>\\n                            <td data-label=\\\"Action\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editArtistPhoto(artst._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Photo\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editArtist(artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Data\\\">\\n                                    <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(artIndex, artst._id, artst.artistname,artst.artistphotoname)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Artist\\\">\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                        \\n                    </tbody>\\n                </table>\\n            </div>\\n  \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"artists && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\"class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div>\\n  \\n        </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/listartist/listartist.component.html\n// module id = ./src/app/components/artist/listartist/listartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtist } from '../../../interface/artist';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\n\n@Component({\n  selector: 'app-listartist',\n  templateUrl: './listartist.component.html',\n  styleUrls: ['./listartist.component.css']\n})\nexport class ListartistComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artists: IArtist[];\n  totalrows: number;\n  pgCounter: number;\n  qartistname: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  artistuploadpath:string;\n/*   sts: any = [  {id: '',desc: 'Select option'},\n                {id: 'active', desc: 'active'}, \n                {id: 'inactive', desc: 'inactive'} \n              ]; */\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private ftService:FiletransferService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private globals: Globals\n  ) { }\n\n  artistname = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n  //startdt = new FormControl({value: '', disabled: true});\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.artistuploadpath = this.globals.artistuploadpath;\n    this.reportForm = this.fb.group({\n      artistname: this.artistname,\n      status: this.status\n    });\n\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistname = params['artistname'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      this.getMsconfigGroupList('CSTATUS');\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistname = this.qartistname;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['listartist'],\n        {\n          queryParams: { artistname: this.reportForm.value.artistname, status: this.reportForm.value.status, page: 1, sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.artistService.getAggArtists(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        //this.artists = data.data.docs;\n        this.artists = data.data;\n        //this.totalrows = +data.data.total;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistname = formval.artistname;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Artists Result';\n        this.reportForm.patchValue({\n          artistname: this.qartistname,\n          status: this.qstatus\n        });\n        /* if (formval.status === 'active') {\n          this.reportTitle = 'Selected active Artists'\n        } else {\n          this.reportTitle = 'Selected inactive Artists'\n        } */\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listartist'],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: page, sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  showArtist(artistid): void {\n    this.router.navigate([`viewartist/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, artistid: string, artistname:string, artistphotoname:string) {\n    var totalalbum: number;\n    \n    let payload: any = {};\n    payload.artistid = artistid;\n    this.loading = true;\n    this.albumService.getArtistAlbums(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        totalalbum = +data.totalcount;\n        if (totalalbum > 0) {\n          this.toastr.warning('Can not delete artist. It already has albums.');\n        } else {\n          if(confirm('Do you really want to delete this artist: ' + artistname + ' record?')){\n            let payloadData: any = {};\n            payloadData.artistphotoname = artistphotoname;\n            payloadData.uploadpath = this.artistuploadpath;\n            payloadData.labelid = this.userObj.userid;\n            this.loading = true;\n            this.artistService.pubdeleteArtist(artistid, payloadData)\n            .subscribe(data => {\n              if (data.success === false) {\n                this.loading = false;\n                if (data.errcode){\n                  this.authService.logout();\n                  this.router.navigate(['login']);\n                }\n                this.toastr.error(data.message);\n              } else {\n                this.loading = false;\n                this.artists.splice(idx, 1);\n                this.totalrows = this.totalrows - 1;\n                this.toastr.success(data.message);\n              }\n            },\n            err => {\n              this.loading = false;\n              //console.log(err);\n              this.toastr.error(err);\n            });\n          }\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  }\n/*   confirmDel(idx: number, artistid: string, artistname:string, artistphotoname:string) {\n    var totalalbum: number;\n    \n    let payload: any = {};\n    payload.artistid = artistid;\n    this.loading = true;\n    this.albumService.getArtistAlbums(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        totalalbum = +data.totalcount;\n        if (totalalbum > 0) {\n          this.toastr.warning('Can not delete artist. It already has albums.');\n        } else {\n          if(confirm('Do you really want to delete this artist: ' + artistname + ' record?')){\n            let payloadData: any = {};\n            payloadData.uploadpath = this.artistuploadpath;\n            payloadData.filename = artistphotoname;\n            this.loading = true;\n            this.ftService.deleteInputFile(payloadData)\n            .subscribe(data => {\n               if (data.success === false) {\n                this.loading = false;\n                  if (data.errcode){\n                    this.authService.logout();\n                    this.router.navigate(['login']);\n                  }\n                  this.toastr.error(data.message);\n                } else {\n                  this.artistService.deleteArtist(artistid)\n                  .subscribe(data => {\n                    if (data.success === false) {\n                      this.loading = false;\n                      if (data.errcode){\n                        this.authService.logout();\n                        this.router.navigate(['login']);\n                      }\n                      this.toastr.error(data.message);\n                    } else {\n                      this.loading = false;\n                      this.artists.splice(idx, 1);\n                      this.totalrows = this.totalrows - 1;\n                      this.toastr.success(data.message);\n                    }\n                  },\n                  err => {\n                    this.loading = false;\n                    //console.log(err);\n                    this.toastr.error(err);\n                  });\n                }   \n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  } */\n\n  editArtist(artistid): void {\n    this.router.navigate([`editartist/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n  editArtistPhoto(artistid): void {\n    this.router.navigate([`editartistphoto/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  sortArtist(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listartist'],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  toaddArtists(): void {\n    this.router.navigate(['/addartist']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/listartist/listartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/viewartist/viewartist.component.css\n// module id = ./src/app/components/artist/viewartist/viewartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Artist Details</h3>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-8\\\">\\n        <form [formGroup]=\\\"artistForm\\\" class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n                <div class=\\\"col-sm-10 form-ele\\\">{{ artist?.artistname }}\\n                  <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div> -->\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n                <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                    <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                          <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                    </select>\\n                    <!-- <div class=\\\"form-ele\\\">{{ artist?.status }}</div> -->\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"col-sm-4 thumbpadding\\\">        \\n        <img src=\\\"{{ artist?.artistphotopath }}\\\" class=\\\"img-thumbnail thumbviewsize\\\">\\n    </div>\\n  </div>\\n  \\n    <div class=\\\"row\\\">\\n        <div class=\\\"dtlpadding\\\" *ngIf=\\\"albums && totalrows > 0\\\">\\n            <div class=\\\"col-md-11 col-lg-11\\\">\\n                <b>( TOTAL : {{ totalrows }} albums ) </b> \\n                <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-striped\\\">\\n                        <thead>\\n                            <tr>\\n                                <th scope=\\\"col\\\" width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                                <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th>\\n                                <th scope=\\\"col\\\" width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                                <th scope=\\\"col\\\" width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                                <th scope=\\\"col\\\" width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                            </tr>\\n                        </thead>\\n                        <tbody>\\n                            <tr *ngFor='let albm of albums; let albIndex = index'>\\n                                <td scope=\\\"row\\\" data-label=\\\"Album Name\\\">{{ albm.albumname}}</td>\\n                                <td data-label=\\\"Album Year\\\">{{ albm.albumyear}}</td>\\n                                <td data-label=\\\"Genre\\\">{{ albm.genrevalue}}</td>\\n                                <td data-label=\\\"Album Price\\\" class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                                <td data-label=\\\"Status\\\">{{ albm.stsvalue}}</td>\\n                            </tr>\\n                            \\n                        </tbody>\\n                    </table>\\n                </div>\\n    \\n                <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n                    <nav aria-label=\\\"Page navigation\\\">\\n                        <ul class=\\\"pagination\\\">\\n                            <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                            </li>\\n                        </ul>\\n                    </nav>\\n                </div>\\n    \\n            </div>\\n            <div class=\\\"col-md-1 col-lg-11\\\"></div>\\n        </div>      \\n    </div>\\n\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-12\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n          <br>\\n      </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/viewartist/viewartist.component.html\n// module id = ./src/app/components/artist/viewartist/viewartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewartist',\n  templateUrl: './viewartist.component.html',\n  styleUrls: ['./viewartist.component.css']\n})\nexport class ViewartistComponent implements OnInit {\n  artist: IArtist;\n  artistid: String;\n  userObj: any;\n  albums: IAlbum[];\n  private sub: Subscription;\n  totalrows: number;\n  pgCounter: number;\n  qalbumname: String;\n  qartistid: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n  sts: IMsconfigGroupList[];\n  artistForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  status = new FormControl('', [Validators.required]);\n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let artistid = params['id'];\n        this.artistid = artistid;\n        this.getMsconfigGroupList('CSTATUS');\n        this.getArtist(artistid);\n      });\n      this.route.queryParams.forEach((params: Params) => {\n        this.qartistid = params['artistid'] || '';\n        this.qpage = params['page'] || '';\n        this.qsort = params['sortby'] || '';\n\n        let payload: any = {};\n        this.qartistid = this.artistid;\n        payload.artistid = this.qartistid;\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n      })\n      this.artistForm = this.fb.group({\n        status: this.status\n      });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n        \n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  populateForm(data): void {\n    this.artistForm.patchValue({\n      status: data.status\n    });\n  }\n\n  fetchReport(userid, formval) {\n    this.albumService.getArtistAlbums(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.albums = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistid = formval.artistid;\n        this.reportTitle = 'Albums Result';\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate([`viewartist/${this.artistid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewartist/${this.artistid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/viewartist/viewartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artiststats/artiststats.component.css\n// module id = ./src/app/components/artiststats/artiststats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Artists</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"labelid\\\" class=\\\"col-sm-2 paddingsearch\\\">Label</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                            <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                            <option value=\\\"\\\">Select the label</option>\\n                            <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                        </select>\\n                      </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Name</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"submit\\\" class=\\\"col-sm-2 paddingsearch\\\">      </label>\\n                    <div class=\\\"col-sm-5\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                    </div>\\n                </div> \\n            </div>\\n        </form>\\n    </div>\\n  </div>\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"artists && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No artist found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems there is NO artists entered yet for the selected criteria.\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"artists && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-hover\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"40%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('artistname')\\\">Artist Name</a></th>\\n                          <th width=\\\"40%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('labelid')\\\">Label</a></th>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('status')\\\">Status</a></th>\\n                          <!-- <th width=\\\"20%\\\">Action</th> -->\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let artst of artists; let artIndex = index'>\\n                          <td scope=\\\"row\\\" data-label=\\\"Artist Name\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showArtist(artst._id, artst.labelid)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ artst.artistname}}</a></td>\\n                          <td data-label=\\\"Label\\\">{{ artst.label}}</td>\\n                          <td data-label=\\\"Status\\\">{{ artst.stsvalue}}</td>\\n<!--                           <td>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editArtistPhoto(artst._id)\\\">\\n                                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Photo\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editArtist(artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Data\\\">\\n                                  <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(artIndex, artst._id, artst.artistname,artst.artistphotoname)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Artist\\\">\\n                                  <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                          </td> -->\\n                      </tr>\\n                      \\n                  </tbody>\\n              </table>\\n          </div>\\n\\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"artists && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\"class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div>\\n\\n      </div>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artiststats/artiststats.component.html\n// module id = ./src/app/components/artiststats/artiststats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { ArtistService } from '../../services/artist.service';\nimport { AlbumService } from '../../services/album.service';\nimport { AuthService } from '../../services/auth.service';\nimport { IArtist } from '../../interface/artist';\nimport { IUserList } from '../../interface/user';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\nimport { FiletransferService } from '../../services/filetransfer.service';\nimport { Globals } from '../../app.global';\n\n@Component({\n  selector: 'app-artiststats',\n  templateUrl: './artiststats.component.html',\n  styleUrls: ['./artiststats.component.css']\n})\nexport class ArtiststatsComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  userlist: IUserList[];\n  artists: IArtist[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qartistname: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  artistuploadpath:string;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private ftService:FiletransferService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private globals: Globals\n  ) { }\n\n  labelid = new FormControl('',[Validators.nullValidator]);\n  artistname = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.artistuploadpath = this.globals.artistuploadpath;\n    this.reportForm = this.fb.group({\n      labelid: this.labelid,\n      artistname: this.artistname,\n      status: this.status\n    });\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qartistname = params['artistname'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      this.getMsconfigGroupList('CSTATUS');\n      this.getLabels();\n      let payload: any = {};\n      payload.labelid = this.qlabelid;\n      payload.status = this.qstatus;\n      payload.artistname = this.qartistname;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n    });\n  }\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Error label list'}];\n        }\n      }\n    },\n    err => {\n      this.userlist = [{_id:'', name:'Error label list'}];\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['artiststats'],\n        {\n          queryParams: { labelid: this.reportForm.value.labelid, artistname: this.reportForm.value.artistname, status: this.reportForm.value.status, page: 1, sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.artistService.getAggArtiststats(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        //this.artists = data.data.docs;\n        this.artists = data.data;\n        //this.totalrows = +data.data.total;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qlabelid = formval.labelid;\n        this.qartistname = formval.artistname;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Artists Result';\n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          artistname: this.qartistname,\n          status: this.qstatus\n        });\n        /* if (formval.status === 'active') {\n          this.reportTitle = 'Selected active Artists'\n        } else {\n          this.reportTitle = 'Selected inactive Artists'\n        } */\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['artiststats'],\n      {\n        queryParams: { labelid: this.qlabelid, artistname: this.qartistname, status: this.qstatus, page: page, sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortArtist(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['artiststats'],\n      {\n        queryParams: { labelid: this.qlabelid, artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  showArtist(artistid, labelid): void {\n    //console.log(artistid + '  ' + labelid);\n    this.router.navigate([`viewartiststats/${artistid}`],\n      {\n        queryParams: { label:labelid, \n          labelid: this.qlabelid, \n          artistname: this.qartistname, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artiststats/artiststats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artiststats/viewartiststats/viewartiststats.component.css\n// module id = ./src/app/components/artiststats/viewartiststats/viewartiststats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Artist Details</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-8\\\">\\n          <form [formGroup]=\\\"artistForm\\\" class=\\\"form-horizontal\\\">\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n                  <div class=\\\"col-sm-10 form-ele\\\">{{ artist?.artistname }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div> -->\\n                  </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n                  <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                      <!-- <div class=\\\"form-ele\\\">{{ artist?.status }}</div> -->\\n                  </div>\\n              </div>\\n          </form>\\n      </div>\\n      <div class=\\\"col-sm-4 thumbpadding\\\">        \\n          <img src=\\\"{{ artist?.artistphotopath }}\\\" class=\\\"img-thumbnail thumbviewsize\\\">\\n      </div>\\n    </div>\\n    \\n      <div class=\\\"row\\\">\\n          <div class=\\\"dtlpadding\\\" *ngIf=\\\"albums && totalrows > 0\\\">\\n                <div class=\\\"col-md-11 col-lg-11\\\">\\n                  <b>( TOTAL : {{ totalrows }} albums ) </b>\\n                  <div class=\\\"table-responsive\\\">\\n                      <table class=\\\"table table-striped\\\">\\n                          <thead>\\n                              <tr>\\n                                  <th scope=\\\"col\\\" width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                              </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor='let albm of albums; let albIndex = index'>\\n                                  <td scope=\\\"row\\\" data-label=\\\"Album Name\\\">{{ albm.albumname}}</td>\\n                                  <td data-label=\\\"Album Year\\\">{{ albm.albumyear}}</td>\\n                                  <td data-label=\\\"Genre\\\">{{ albm.genrevalue}}</td>\\n                                  <td data-label=\\\"Album Price\\\" class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                                  <td data-label=\\\"Status\\\">{{ albm.stsvalue}}</td>\\n                              </tr>\\n                              \\n                          </tbody>\\n                      </table>\\n                  </div>\\n      \\n                  <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n                      <nav aria-label=\\\"Page navigation\\\">\\n                          <ul class=\\\"pagination\\\">\\n                              <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                  <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                              </li>\\n                          </ul>\\n                      </nav>\\n                  </div>\\n      \\n              </div>\\n              <div class=\\\"col-md-1 col-lg-1\\\"></div>\\n          </div>      \\n      </div>\\n  \\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n            <br>\\n        </div>\\n  \\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artiststats/viewartiststats/viewartiststats.component.html\n// module id = ./src/app/components/artiststats/viewartiststats/viewartiststats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewartiststats',\n  templateUrl: './viewartiststats.component.html',\n  styleUrls: ['./viewartiststats.component.css']\n})\nexport class ViewartiststatsComponent implements OnInit {\n  artist: IArtist;\n  artistid: String;\n  userObj: any;\n  albums: IAlbum[];\n  private sub: Subscription;\n  totalrows: number;\n  pgCounter: number;\n  qalbumname: String;\n  qlabelid: String;\n  qartistid: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n  sts: IMsconfigGroupList[];\n  artistForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let artistid = params['id'];\n        this.artistid = artistid;\n        this.getMsconfigGroupList('CSTATUS');\n        this.getArtist(artistid);\n      });\n      this.route.queryParams.forEach((params: Params) => {\n        this.qlabelid = params['label'] || '';\n        this.qartistid = params['artistid'] || '';\n        this.qpage = params['page'] || '';\n        this.qsort = params['sortby'] || '';\n\n        let payload: any = {};\n        this.qartistid = this.artistid;\n        payload.labelid = this.qlabelid;\n        payload.artistid = this.qartistid;\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n      })\n      this.artistForm = this.fb.group({\n        status: this.status\n      });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n    });\n  }\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n        \n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  populateForm(data): void {\n    this.artistForm.patchValue({\n      status: data.status\n    });\n  }\n\n  fetchReport(userid, formval) {\n    this.albumService.getArtistAlbumsStats(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.albums = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qlabelid = formval.labelid;\n        this.qartistid = formval.artistid;\n        this.reportTitle = 'Albums Result';\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate([`viewartiststats/${this.artistid}`],\n      {\n        queryParams: { labelid: this.qlabelid,\n          artistid: this.qartistid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewartiststats/${this.artistid}`],\n      {\n        queryParams: { labelid: this.qlabelid, \n          artistid: this.qartistid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['../artiststats'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artiststats/viewartiststats/viewartiststats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.css\n// module id = ./src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Dashboard</h3>\\n  </div>\\n\\n  <form class=\\\"form-horizontal\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"labelname\\\" class=\\\"control-label\\\">Name</label>\\n        <div class=\\\"input-group col-sm-12\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-user\\\"></i></div>\\n            <div class=\\\"form-ele\\\">{{ this.name }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\" class=\\\"control-label\\\">Email</label>\\n        <div class=\\\"input-group col-sm-12\\\">\\n            <div class=\\\"input-group-addon\\\">@</div>\\n            <div class=\\\"form-ele\\\">{{ this.email }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n      <label for=\\\"contactno\\\" class=\\\"control-label\\\">Contact No</label>\\n      <div class=\\\"input-group col-sm-12\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-earphone\\\"></i></div>\\n          <div class=\\\"form-ele\\\">{{ this.contactno }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n        <label for=\\\"balance\\\" class=\\\"control-label\\\">Balance</label>\\n        <div class=\\\"input-group col-sm-12\\\"> \\n            <button style=\\\"padding:5px;\\\"type=\\\"button\\\" (click)=\\\"viewlabelbalance(this.name)\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-primary\\\">View balance</button>\\n        </div>\\n    </div>\\n    <hr style=\\\"color:#333\\\">\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n      <div class=\\\"input-group col-xs-12\\\">\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n        <div class=\\\"panel panel-info\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">Total Assets</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <ul class=\\\"list-group\\\">\\n                    <a style=\\\"cursor:pointer\\\" (click)=\\\"toArtists()\\\" class=\\\"list-group-item borderless bordersideless\\\">Total active artists <span class=\\\"badge\\\"><b><i>{{ this.totalrows }}</i></b></span></a>\\n                    <a style=\\\"cursor:pointer\\\" (click)=\\\"toAlbums()\\\" class=\\\"list-group-item bordersideless\\\">Total active albums <span class=\\\"badge\\\"><b><i>{{ this.totalalbums }}</i></b></span></a>\\n                    <a style=\\\"cursor:pointer\\\" (click)=\\\"toSongs()\\\" class=\\\"list-group-item bordersideless\\\">Total active songs <span class=\\\"badge\\\"><b><i>{{ this.totalsongs }}</i></b></span></a>\\n                </ul>\\n            </div>\\n        </div>\\n      </div>  \\n      <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n        <div class=\\\"panel panel-info\\\">\\n            <div class=\\\"panel-heading\\\">\\n                <h3 class=\\\"panel-title\\\">Transactions</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n                <ul class=\\\"list-group\\\">\\n                    <a style=\\\"cursor:pointer\\\" (click)=\\\"toPendingSongpurchase()\\\" class=\\\"list-group-item borderless bordersideless\\\">Pending purchase <span class=\\\"badge\\\"><b><i>{{ this.totalpendingpurchase }}</i></b></span></a>\\n                    <a style=\\\"cursor:pointer\\\" routerLink=\\\"../transaction\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item bordersideless\\\">View Transactions</a>\\n                    <a style=\\\"cursor:pointer\\\" routerLink=\\\"../activitylog\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item bordersideless\\\">View Activity Log</a>\\n                </ul>\\n            </div>\\n        </div>\\n      </div>\\n    </div>\\n    </div>\\n    \\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'ADM'\\\">\\n        <div class=\\\"input-group col-xs-12\\\">\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"panel panel-info\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">Approval Summary</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <ul class=\\\"list-group\\\">\\n                        <a style=\\\"cursor:pointer\\\" (click)=\\\"toLabelApv()\\\" class=\\\"list-group-item borderless bordersideless\\\">Total pending labels <span class=\\\"badge\\\"><b><i>{{ this.totalpendinglabel }}</i></b></span></a>\\n                        <a style=\\\"cursor:pointer\\\" (click)=\\\"toSongMgt()\\\" class=\\\"list-group-item bordersideless\\\">Total pending to publish songs <span class=\\\"badge\\\"><b><i>{{ this.totalpendingsong }}</i></b></span></a>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>  \\n        <div class=\\\"col-xs-12 col-sm-6 col-md-6\\\">\\n            <div class=\\\"panel panel-info\\\">\\n                <div class=\\\"panel-heading\\\">\\n                    <h3 class=\\\"panel-title\\\">Activity Log</h3>\\n                </div>\\n                <div class=\\\"panel-body\\\">\\n                    <ul class=\\\"list-group\\\">\\n                        <a style=\\\"cursor:pointer\\\" routerLink=\\\"../activitylogstats\\\" routerLinkActive=\\\"active\\\" class=\\\"list-group-item borderless bordersideless\\\">View Activity Log</a>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LIS'\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-7\\\">\\n            You have logged in as Listener. <br>\\n            Please use the kaXet mobile apps to buy songs.\\n        </div>\\n    </div>\\n  </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.html\n// module id = ./src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { ArtistService } from '../../services/artist.service';\nimport { AlbumService } from '../../services/album.service';\nimport { SongService } from '../../services/song.service';\nimport { AuthService } from '../../services/auth.service';\n//import { IArtist } from '../../interface/artist';\n//import { IAlbum } from '../../interface/album';\nimport { IUser } from '../../interface/user';\nimport { UserService } from '../../services/user.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { SongadminService } from '../../services/admin/songadmin.service';\nimport { SongpurchaseService } from '../../services/songpurchase.service';\nimport { MatDialog } from '@angular/material';\nimport { LabelbalancedialogComponent } from '../labelbalancedialog/labelbalancedialog.component';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  //artists: IArtist[];\n  //albums: IAlbum[];  \n  user: IUser;\n  private sub: Subscription;\n  userObj: any;\n  totalrows: number;\n  totalalbums: number;\n  totalsongs: number;\n  totalpendinglabel: number = 0;\n  totalpendingsong: number = 0;\n  totalpendingpurchase: number = 0;\n\n  constructor(\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private userService: UserService,\n    private labelmgtService: UsermgtService,\n    private songadminService: SongadminService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private songpurchaseService: SongpurchaseService,\n    private dialog: MatDialog\n  ) { }\n\n  name: String;\n  email: String;\n  contactno: String;\n  balance: Number;\n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.name = this.userObj.name;\n\n    this.userService.getUser(this.userObj.userid).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.email = this.user.email;\n        this.contactno = this.user.contactno;\n        this.balance = this.user.balance;\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n\n    if (this.userObj.usertype === 'ADM') {\n      this.fetchReportAdm(this.userObj.userid);\n    }\n    if (this.userObj.usertype === 'LBL') {\n      let payload: any = {};\n      payload.status = 'STSACT';\n      this.fetchReport(this.userObj.userid, payload);\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.artistService.getArtistCount(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        //this.artists = data.data.docs;\n        this.totalrows = +data.totalcount;\n        this.albumService.getAlbumCount(userid, formval)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            //this.albums = data.data.docs;\n            this.totalalbums = +data.totalcount;\n            this.songService.getSongCount(userid, formval)\n            .subscribe(data => {\n              if (data.success === false) {\n                if (data.errcode){\n                  this.authService.logout();\n                  this.router.navigate(['login']);\n                }\n                this.toastr.error(data.message);\n              } else {\n                this.totalsongs = +data.totalcount;\n              }\n            },\n            err => {\n              //console.log(err);\n              this.toastr.error(err);\n            });\n          }\n        },\n        err => {\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n    //songpurchaseService.getPendingSongpurchaseCount\n    let payload: any = {};\n    payload.status = 'STSPEND';\n    this.songpurchaseService.getPendingSongpurchaseCount(userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.totalpendingpurchase = +data.totalcount;\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  fetchReportAdm (userid) {\n    let payload: any = {};\n    payload.status = 'STSPEND';\n    payload.veremail = 'Y';\n    payload.usertype = 'LBL';\n    this.labelmgtService.getPendingLabelCount(userid, payload)\n    .subscribe(data => { \n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.totalpendinglabel = +data.totalcount;\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n    let payloadsg: any = {};\n    payloadsg.songpublish = 'N';\n    this.songadminService.getPendingSongCount(userid, payloadsg)\n    .subscribe(data => { \n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.totalpendingsong = +data.totalcount;\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  toArtists(): void {\n    this.router.navigate(['/listartist']);\n  }\n  toAlbums(): void {\n    this.router.navigate(['/listalbum']);\n  }\n  toSongs(): void {\n    this.router.navigate(['/listsong']);\n  }\n  toLabelApv(): void {\n    this.router.navigate(['/usermanagement']);\n  }\n  toSongMgt(): void {\n    this.router.navigate(['/songmanagement']);\n  }\n  toPendingSongpurchase(): void {\n    this.router.navigate(['/songpendingpurchase']);\n  }\n\n  viewlabelbalance(labelname):void {\n    let dialogRef = this.dialog.open(LabelbalancedialogComponent, {\n      disableClose: true,\n      width: '400px',\n      data: 'Hi ' + labelname + ', Please find below your balance.'\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/dashboard/dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/kx-info-dialog/kx-info-dialog.component.css\n// module id = ./src/app/components/kx-info-dialog/kx-info-dialog.component.css\n// module chunks = main","module.exports = \"<div class=\\\"md-dialog-container\\\">\\n  <h3 mat-dialog-title>INFO</h3>\\n  <hr>\\n  <mat-dialog-content>\\n    <strong>{{data}}</strong>\\n  </mat-dialog-content>\\n  <hr>\\n  <mat-dialog-actions>\\n      <!-- <button mat-raised-button (click)=\\\"onCloseConfirm()\\\">Confirm</button> -->\\n      <button class=\\\"btn btn-info\\\" mat-raised-button (click)=\\\"onCloseCancel()\\\">Close</button>\\n  </mat-dialog-actions>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/kx-info-dialog/kx-info-dialog.component.html\n// module id = ./src/app/components/kx-info-dialog/kx-info-dialog.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-kx-info-dialog',\n  templateUrl: './kx-info-dialog.component.html',\n  styleUrls: ['./kx-info-dialog.component.css']\n})\nexport class KxInfoDialogComponent implements OnInit {\n\n  constructor( private dialogRef: MatDialogRef<KxInfoDialogComponent>,\n               @Inject(MAT_DIALOG_DATA) private data: string \n             ) \n  { }\n\n  ngOnInit() {\n    //this.changePosition();\n  }\n\n  onCloseConfirm() {\n    this.dialogRef.close('Confirm');\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close('Cancel');\n  }\n\n  changePosition() {\n    this.dialogRef.updatePosition({ top: '50px', left: '50px' });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/kx-info-dialog/kx-info-dialog.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/labelbalancedialog/labelbalancedialog.component.css\n// module id = ./src/app/components/labelbalancedialog/labelbalancedialog.component.css\n// module chunks = main","module.exports = \"<div class=\\\"md-dialog-container\\\">\\n    <h3 mat-dialog-title>BALANCE INFO</h3>\\n    <hr>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <mat-dialog-content>\\n      <div *ngIf=\\\"this.success === true\\\">\\n        <strong>{{this.reportTitle}}</strong><br><br>\\n        <span style=\\\"color:red;font-size:14px\\\" *ngIf=\\\"this.total <= 0\\\"><strong>BALANCE : Rp {{this.totalstr }}</strong></span>\\n        <span style=\\\"color:#065E06;font-size:14px\\\" *ngIf=\\\"this.total > 0\\\"><strong>BALANCE : Rp {{this.totalstr }}</strong></span>\\n      </div>\\n      <div *ngIf=\\\"this.success === false\\\">\\n          <span style=\\\"color:red\\\"><strong>Oopss! sorry there is error when getting the balance</strong></span>\\n      </div>\\n    </mat-dialog-content>\\n    <hr>\\n    <mat-dialog-actions>\\n        <!-- <button mat-raised-button (click)=\\\"onCloseConfirm()\\\">Confirm</button> -->\\n        <button class=\\\"btn btn-info\\\" (click)=\\\"onCloseCancel()\\\">Close</button>\\n    </mat-dialog-actions>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/labelbalancedialog/labelbalancedialog.component.html\n// module id = ./src/app/components/labelbalancedialog/labelbalancedialog.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { AuthService } from '../../services/auth.service';\nimport { TransactionService } from '../../services/transaction.service';\n\n@Component({\n  selector: 'app-labelbalancedialog',\n  templateUrl: './labelbalancedialog.component.html',\n  styleUrls: ['./labelbalancedialog.component.css']\n})\nexport class LabelbalancedialogComponent implements OnInit {\n  userObj: any;\n  total: Number;\n  totalstr: string;\n  balances: any[];\n  loading = false;\n  reportTitle: string;\n  success: boolean;\n\n  constructor(\n    private dialogRef: MatDialogRef<LabelbalancedialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: string,\n    private transactionService: TransactionService,\n    private authService: AuthService,\n  ) { }\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.fetchReport(this.userObj.userid);\n  }\n  fetchReport(userid) {\n    this.loading = true;\n    this.transactionService.getLabelbalance(userid)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.success = false; \n      } else {\n        this.success = true;\n        this.loading = false;\n        this.reportTitle = this.data;\n        this.balances = data.data;\n        if (this.balances[0]) {\n          let amt = this.getbalanceamt(this.balances[0]._id,this.balances[0].balance);\n          let amt1 = this.getbalanceamt(this.balances[1]._id,this.balances[1].balance);\n          this.total = amt + amt1;\n          this.totalstr = this.total.toLocaleString();\n        } else {\n          this.total = 0;\n          this.totalstr = \"0\";\n        } \n\n      }\n    },\n    err => {\n      this.loading = false;\n      this.success = false; \n    });\n  }\n  onCloseCancel() {\n    this.dialogRef.close('Cancel');\n  }\n\n  changePosition() {\n    this.dialogRef.updatePosition({ top: '50px', left: '50px' });\n  }\n  getbalanceamt(sign,balance): number {\n    var result = balance;\n    if (sign === \"-\") {\n      result = -1 * balance;\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/labelbalancedialog/labelbalancedialog.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/labelstats/labelstats.component.css\n// module id = ./src/app/components/labelstats/labelstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Labels</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"username\\\" class=\\\"col-sm-2 paddingsearch\\\">Username</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [formControl]=\\\"username\\\" placeholder=\\\"User Name\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label for=\\\"name\\\" class=\\\"col-sm-2 paddingsearch\\\">Name</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [formControl]=\\\"name\\\" placeholder=\\\"Label Name\\\">\\n                </div>\\n              </div>\\n          </div>\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option value=\\\"\\\">Select the status</option>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"veremail\\\" class=\\\"col-sm-3 paddingsearch\\\">Email Verified?</label>\\n                    <div class=\\\"col-sm-9\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"veremail\\\">\\n                              <option value=\\\"\\\">Select the option</option>\\n                              <option *ngFor=\\\"let b of yn\\\" [ngValue]=\\\"b.code\\\">{{b.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label class=\\\"col-sm-2 paddingsearch\\\">      </label>\\n                  <div class=\\\"col-sm-5\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                  </div>\\n              </div>                  \\n          </div>\\n      </form>\\n    </div>\\n  </div>\\n  \\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"labellist && totalrows < 1\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">No LABELS found</h3> \\n    </div>\\n    <div class=\\\"panel-body\\\">\\n        No Labels found from above criterias.\\n    </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"labellist && totalrows > 0 && this.loading == false\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n    </div>\\n    <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\"> \\n                  <table class=\\\"table table-hover\\\">\\n                      <thead>\\n                              <tr>\\n                                  <th scope=\\\"col\\\" width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('username')\\\">User Name</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('name')\\\">Label Name</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('email')\\\">Email</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('verified_email')\\\">Email Verified?</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('status')\\\">Status</a></th>\\n                                  <th scope=\\\"col\\\" width=\\\"20%\\\">Action</th>\\n                              </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor='let lbl of labellist; let lblIndex = index'>\\n                                  <td scope=\\\"row\\\" data-label=\\\"Username\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showLabel(lbl._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ lbl.username}}</a></td>\\n                                  <td data-label=\\\"Label Name\\\">{{ lbl.name}}</td>\\n                                  <td data-label=\\\"Email\\\">{{ lbl.email}}</td>\\n                                  <td data-label=\\\"Email Verified?\\\">{{ lbl.verified_email }}</td>\\n                                  <td data-label=\\\"Status\\\">{{ lbl.stsvalue}}</td>\\n                                  <td data-label=\\\"Action\\\">\\n                                      <button *ngIf=\\\"lbl.status === 'STSINACT'\\\" type=\\\"button\\\" class=\\\"btn-xs btn-success\\\" aria-label=\\\"Activate\\\" (click)=\\\"activateLabel(lbl._id, lbl.name, lbl.status, lbl.email, lbl.username)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Activate Label\\\">\\n                                          <span class=\\\"glyphicon glyphicon-ok\\\" aria-hidden=\\\"true\\\"></span>\\n                                      </button>\\n                                      <button *ngIf=\\\"lbl.status === 'STSACT'\\\" type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Deactivate\\\" (click)=\\\"deactivateLabel(lbl._id, lbl.name, lbl.status, lbl.email, lbl.username)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Deactivate Label\\\">\\n                                          <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                                      </button>\\n                                      <span  *ngIf=\\\"lbl.status !== 'STSINACT' && lbl.status !== 'STSACT'\\\" style=\\\"color:#eee\\\">No Action</span>\\n                                  </td>\\n                              </tr>     \\n                          </tbody>    \\n                  </table>\\n          </div>\\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"labellist && totalrows > 10\\\">\\n                  <nav aria-label=\\\"Page navigation\\\">\\n                      <ul class=\\\"pagination\\\">\\n                          <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                              <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                          </li>\\n                      </ul>\\n                  </nav>\\n          </div> \\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/labelstats/labelstats.component.html\n// module id = ./src/app/components/labelstats/labelstats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service';\nimport { AuthService } from '../../services/auth.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { IUser } from '../../interface/user';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\nimport { NotifService } from '../../services/notif.service';\nimport { Globals } from '../../app.global';\n\n@Component({\n  selector: 'app-labelstats',\n  templateUrl: './labelstats.component.html',\n  styleUrls: ['./labelstats.component.css']\n})\nexport class LabelstatsComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  labellist: IUser[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelname: String;\n  qusername: String;\n  qstatus: String;\n  qveremail: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  yn:IMsconfigGroupList[];\n  loading = false;\n  urlkaxet: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private notifService: NotifService,\n    private globals: Globals,\n  ) { }\n  name = new FormControl('',[Validators.nullValidator]);\n  username = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n  veremail = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      name: this.name,\n      username: this.username,\n      status: this.status,\n      veremail: this.veremail\n    });\n    this.urlkaxet = this.globals.kaxeturl;\n    this.getMsconfigGroupList('STATUS');\n    this.getMsconfigGroupList('YRN');\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelname = params['name'] || '';\n      this.qusername = params['username'] || '';\n      this.qstatus = params['status'] || '';\n      this.qveremail = params['veremail'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.name = this.qlabelname;\n      payload.username = this.qusername;\n      payload.veremail = this.qveremail;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n\n      this.reportForm.patchValue({\n        name: this.qlabelname,\n        username: this.qusername,\n        status: this.qstatus,\n        veremail: this.qveremail\n      });\n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'STATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'YRN') {\n            this.yn = data.data;\n          } \n          \n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.yn = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.yn = [{code:'', value:'Error ms config list'}];\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['labelstats'],\n        {\n          queryParams: {\n            name: this.reportForm.value.name,\n            username: this.reportForm.value.username,\n            status: this.reportForm.value.status,\n            veremail: this.reportForm.value.veremail,\n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.labelmgtService.getUserLabels(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.labellist = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n\n        this.qlabelname = formval.name;\n        this.qusername = formval.username;\n        this.qstatus = formval.status;\n        this.qveremail = formval.veremail;\n        this.reportTitle = 'Labels Result';\n        \n        this.reportForm.patchValue({\n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['labelstats'],\n      {\n        queryParams: {\n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortLabel(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['labelstats'],\n      {\n        queryParams: { \n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  \n  activateLabel(userid: string, labelname: string, status: string, email: string, username: string) {\n    \n    this.loading = true;\n    if (status == 'STSACT') {\n      this.loading = false;\n      this.toastr.warning('The label is already active.');\n    } else {\n      if (status === 'STSRJCT') {\n        this.loading = false;\n        this.toastr.warning('The label is already rejected.');\n      } else {\n        if(confirm('Do you really want to activate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.labelid = userid;\n          payloadData.emailto = email;\n          payloadData.vlink = this.urlkaxet;\n          payloadData.username = username;\n          payloadData.status = 'STSACT';\n          this.labelmgtService.pubupdateLabelstatus(this.userObj.userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              this.loading = false;\n              this.fetchReport(this.userObj.userid, this.reportForm.value);\n              this.toastr.success(data.message);\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  }\n/*   activateLabel(userid: string, labelname: string, status: string, email: string, username: string) {\n\n    this.loading = true;\n    if (status == 'STSACT') {\n      this.loading = false;\n      this.toastr.warning('The label is already active.');\n    } else {\n      if (status === 'STSRJCT') {\n        this.loading = false;\n        this.toastr.warning('The label is already rejected.');\n      } else {\n        if(confirm('Do you really want to activate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.status = 'STSACT';\n          this.labelmgtService.updateLabelStatus(userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              let payload: any = {};\n              payload.emailto = email;\n              payload.vlink = this.urlkaxet;\n              payload.username = username;\n              let successmsg = data.message;\n              this.notifService.sendemailwelcome(payload)\n              .subscribe(data => {\n                this.loading = false;\n                if (data.success === true) {\n                  this.toastr.success(successmsg);\n                } else {\n                  this.toastr.warning(successmsg + '. However welcome email not send. ' + data.message);\n                }\n                this.fetchReport(this.userObj.userid, this.reportForm.value);\n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n                this.fetchReport(this.userObj.userid, this.reportForm.value);\n              });\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  } */\n  \n  deactivateLabel(userid: string, labelname: string, status: string, email: string, username: string) {\n    \n    this.loading = true;\n    if (status === 'STSPEND') {\n      if(confirm('Do you really want to reject this label: ' + labelname + ' record?')){\n        let payloadData: any = {};\n        payloadData.labelid = userid;\n        payloadData.username = username;\n        payloadData.status = 'STSRJCT';\n        this.labelmgtService.pubupdateLabelstatus(this.userObj.userid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.userObj.userid, this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      } else {\n        this.loading = false;\n      }\n    } else {\n      if (status != 'STSACT') {\n        this.loading = false;\n        this.toastr.warning('The label is already NOT active.');\n      } else {\n        if(confirm('Do you really want to deactivate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.labelid = userid;\n          payloadData.emailto = email;\n          payloadData.username = username;\n          payloadData.status = 'STSINACT';\n          this.labelmgtService.pubupdateLabelstatus(this.userObj.userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              this.loading = false;  \n              this.fetchReport(this.userObj.userid, this.reportForm.value);\n              this.toastr.success(data.message);              \n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  }\n/*   deactivateLabel(userid: string, labelname: string, status: string, email: string, username: string) {\n    \n    this.loading = true;\n    if (status === 'STSPEND') {\n      if(confirm('Do you really want to reject this label: ' + labelname + ' record?')){\n        let payloadData: any = {};\n        payloadData.status = 'STSRJCT';\n        this.labelmgtService.updateLabelStatus(userid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.userObj.userid, this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      } else {\n        this.loading = false;\n      }\n    } else {\n      if (status != 'STSACT') {\n        this.loading = false;\n        this.toastr.warning('The label is already NOT active.');\n      } else {\n        if(confirm('Do you really want to deactivate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.status = 'STSINACT';\n          this.labelmgtService.updateLabelStatus(userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              let payload: any = {};\n              payload.emailto = email;\n              payload.username = username;\n              let successmsg = data.message;\n              this.notifService.senddeactivation(payload)\n              .subscribe(data => {\n                this.loading = false;\n                if (data.success === true) {\n                  this.toastr.success(successmsg);\n                } else {\n                  this.toastr.warning(successmsg + '. However welcome email not send. ' + data.message);\n                }\n                this.fetchReport(this.userObj.userid, this.reportForm.value);\n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  } */\n  \n  showLabel(userid): void {\n    this.router.navigate([`viewlabelstats/${userid}`],\n      {\n        queryParams: { \n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/labelstats/labelstats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.css\n// module id = ./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>LABEL DETAILS</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div class=\\\"clearfix\\\">\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUser(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.username }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.username }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.name }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.name }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.email }}\\n                <!-- <div class=\\\"input-group-addon\\\">@</div>\\n                <div class=\\\"form-ele\\\">{{ user.email }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.contactno }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.contactno }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.bankaccno }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.bankaccno }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.bankname }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.bankname }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastlogin\\\" class=\\\"col-sm-2 control-label\\\">Last Login</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.lastlogin | date:'medium' }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-calendar\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.lastlogin | date:'medium' }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"balance\\\" class=\\\"col-sm-2 control-label\\\">Balance</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.balance | currency:'IDR'}}\\n                <!-- <div class=\\\"input-group-addon\\\">Rp</div>\\n                <div class=\\\"form-ele\\\">{{ user.balance }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">       </label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>                \\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.html\n// module id = ./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\n\n@Component({\n  selector: 'app-viewlabelstats',\n  templateUrl: './viewlabelstats.component.html',\n  styleUrls: ['./viewlabelstats.component.css']\n})\nexport class ViewlabelstatsComponent implements OnInit {\n  profileForm: FormGroup\n  user: IUser;\n  loading = false;\n  private sub: Subscription;\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankname = new FormControl('', [Validators.required]);\n  lastlogin = new FormControl('', [Validators.required]);\n  balance = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(\n      params => {\n        let labelid = params['id'];\n        this.getLabel(labelid);\n      });\n    this.profileForm = this.fb.group({\n      name: this.name,\n      email: this.email,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankname: this.bankname,\n      lastlogin: this.lastlogin,\n      balance: this.balance\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLabel(id){\n    this.userService.getUser(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.populateForm(this.user);\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });   \n  }\n  populateForm(data): void {\n    this.profileForm.patchValue({\n      name: data.name,\n      email: data.email,\n      contactno: data.contactno,\n      bankaccno: data.bankaccno,\n      bankname: data.bankname,\n      lastlogin: this.lastlogin,\n      balance: this.balance\n    });\n  }\n  onBack(): void {\n    this.router.navigate(['../labelstats'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/labelstats/viewlabelstats/viewlabelstats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addconfig/addconfig.component.css\n// module id = ./src/app/components/msconfig/addconfig/addconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Add Config</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form  [formGroup]=\\\"addConfigForm\\\" (ngSubmit)=\\\"addMsconfig(addConfigForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addConfigForm.get('code').invalid && addConfigForm.get('code').dirty}\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"code\\\" id=\\\"code\\\" placeholder=\\\"Ms Code\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addConfigForm.get('code').dirty && addConfigForm.get('code').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addConfigForm.get('code').errors.required\\\">\\n                    Please enter the code\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addConfigForm.get('value').invalid && addConfigForm.get('value').dirty}\\\">\\n            <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"value\\\" id=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addConfigForm.get('value').dirty && addConfigForm.get('value').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addConfigForm.get('value').errors.required\\\">\\n                    Please enter the value\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addConfigForm.get('group').invalid && addConfigForm.get('group').dirty}\\\">\\n            <label for=\\\"group\\\" class=\\\"col-sm-2 control-label\\\">Group <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select #inputgroup [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"group\\\">\\n                    <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the group</option>\\n                    <option *ngFor=\\\"let g of grouplist\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addConfigForm.get('group').dirty && addConfigForm.get('group').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addConfigForm.get('group').errors.required\\\">\\n                    Please select config group\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Description</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <textarea [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" id=\\\"desc\\\" rows=\\\"10\\\" [formControl]=\\\"desc\\\" placeholder=\\\"Description\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" >\\n            <label for=\\\"genreimage\\\" class=\\\"col-sm-2 control-label\\\">Config Photo</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" #inputimg type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"genreimage\\\" id=\\\"genreimage\\\" placeholder=\\\"Genreimage\\\">\\n                <span class=\\\"control-label\\\" style=\\\"text-align:bottom;font-size:10px;color:red;\\\">&nbsp;&nbsp;<u><b>(MAX {{ +this.maxfilesize?.value/1000 }} KB)</b></u></span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">  </label>\\n          <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n          <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n       </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-5\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"addConfigForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n            </div>\\n            <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n                <sup>*</sup> required\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addconfig/addconfig.component.html\n// module id = ./src/app/components/msconfig/addconfig/addconfig.component.html\n// module chunks = main","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\n\n@Component({\n  selector: 'app-addconfig',\n  templateUrl: './addconfig.component.html',\n  styleUrls: ['./addconfig.component.css']\n})\nexport class AddconfigComponent implements OnInit {\n  addConfigForm: FormGroup;\n  userObj: any;\n  //status: any = ['active', 'inactive'];\n  filesToUpload: Array<File> = [];\n  msconfigid: String;\n  grouplist: IMsconfigGroupList[];\n  loading = false;\n  @ViewChild('inputimg')genreimageVar: any;\n  @ViewChild('inputgroup')inputgroupVar: any;  \n  configuploadpath:string;\n  progressvalue = 0;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n\n  code = new FormControl('', [Validators.required]);\n  value = new FormControl('', [Validators.required]);\n  group = new FormControl('', [Validators.required]);\n  desc = new FormControl('', [Validators.nullValidator]);\n  filepath: String;\n  filename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.configuploadpath = this.globals.configuploadpath;\n    this.progressvalue = 0;\n    this.msconfigid = '';\n    this.addConfigForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      group: this.group,\n      desc: this.desc,\n      genreimage: this.filesToUpload,\n      filepath: this.filepath,\n      filename: this.filename\n    });\n    this.getMsconfiggroup();\n    this.getMsconfigVal('IMGSIZE','FSIZE');\n  }\n  getMsconfiggroup(){\n    this.msconfigService.getMsconfiggroup().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.grouplist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.grouplist = [{code:'', value:'Error group list'}];\n        }\n      }\n    },\n    err => {\n      this.grouplist = [{code:'', value:'Error group list'}];\n    });\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      }\n    },\n    err => {\n      this.maxfilesize = {code:'', value:'0'};\n    });\n  }\n  addMsconfig(formdata:any): void {\n    this.progressvalue = 0;\n    if (this.addConfigForm.dirty && this.addConfigForm.valid) {\n      const files: Array<File> = this.filesToUpload;\n      let theForm = this.addConfigForm.value;\n      this.loading = true;\n      this.progressvalue = 10;\n      if (this.genreimageVar.nativeElement.value) {\n        this.progressvalue = 30;\n        let lformData: FormData = new FormData();\n        //console.log('Ini file: '+ files[0]['name']); \n        //lformData.append('genreimage',files[0],files[0]['name']);\n        lformData.append('fileinputsrc',files[0],files[0]['name']);\n        lformData.append('uploadpath',this.configuploadpath);\n        //console.log(lformData.getAll('artistimage'));\n        //console.dir(theForm);\n        this.progressvalue = 50;\n        this.ftService.uploadInputFile(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n              this.progressvalue = 70;\n              theForm.filepath = data.filedata.filepath;\n              theForm.filename = data.filedata.filename;\n              theForm.status = 'STSACT';\n              //console.log('Ini file path: '+ theForm.artistphotopath);\n              if (this.msconfigid !== '') {\n                theForm.msconfigid = this.msconfigid;\n              }\n              this.progressvalue = 90;\n              this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.progressvalue = 0;\n                  this.toastr.error(data.message);\n                } else {\n                  this.progressvalue = 100;\n                  this.loading = false;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listartist']);\n                }\n                this.addConfigForm.reset();\n                this.inputgroupVar.nativeElement.selectedIndex = 0;\n                this.genreimageVar.nativeElement.value = \"\";\n                this.progressvalue = 0;\n              },\n              err => {\n                this.loading = false;\n                this.progressvalue = 0;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }   \n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }else {\n        this.progressvalue = 30;\n        theForm.status = 'STSACT';\n        //console.log('Ini file path: '+ theForm.artistphotopath);\n        if (this.msconfigid !== '') {\n          theForm.msconfigid = this.msconfigid;\n        }\n        this.progressvalue = 70;\n        this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 90;\n            this.loading = false;\n            this.toastr.success(data.message);\n            //this.router.navigate(['listartist']);\n            this.progressvalue = 100;\n          }\n          this.addConfigForm.reset();\n          this.inputgroupVar.nativeElement.selectedIndex = 0;\n          this.genreimageVar.nativeElement.value = \"\";\n          this.progressvalue = 0;\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }\n    }\n  }\n  fileChangeEvent(fileInput:any): void {\n\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"image/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.filesToUpload = <Array<File>>fileInput.target.files;\n      } else {\n        let mfsize = +this.maxfilesize.value/1000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Kb');\n        this.genreimageVar.nativeElement.value = \"\";\n      }\n    } else  {\n      alert('Error file type. You must input image file type.');\n      this.genreimageVar.nativeElement.value = \"\";\n    }   \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/addconfig/addconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addgroup/addgroup.component.css\n// module id = ./src/app/components/msconfig/addgroup/addgroup.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Add Group</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form  [formGroup]=\\\"addGroupForm\\\" (ngSubmit)=\\\"addMsgroup(addGroupForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addGroupForm.get('code').invalid && addGroupForm.get('code').dirty}\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"code\\\" id=\\\"code\\\" placeholder=\\\"Ms Code\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addGroupForm.get('code').dirty && addGroupForm.get('code').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addGroupForm.get('code').errors.required\\\">\\n                    Please enter the code\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addGroupForm.get('value').invalid && addGroupForm.get('value').dirty}\\\">\\n            <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"value\\\" id=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addGroupForm.get('value').dirty && addGroupForm.get('value').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addGroupForm.get('value').errors.required\\\">\\n                    Please enter the value\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Description</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <textarea [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" id=\\\"desc\\\" rows=\\\"10\\\" [formControl]=\\\"desc\\\" placeholder=\\\"Description\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-5\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"addGroupForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n            </div>\\n            <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n                <sup>*</sup> required\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addgroup/addgroup.component.html\n// module id = ./src/app/components/msconfig/addgroup/addgroup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-addgroup',\n  templateUrl: './addgroup.component.html',\n  styleUrls: ['./addgroup.component.css']\n})\nexport class AddgroupComponent implements OnInit {\n  addGroupForm: FormGroup;\n  userObj: any;\n  //status: any = ['active', 'inactive'];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  code = new FormControl('', [Validators.required]);\n  value = new FormControl('', [Validators.required]);\n  desc = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.addGroupForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      desc: this.desc\n    });\n  }\n  addMsgroup(formdata:any): void {\n    if (this.addGroupForm.dirty && this.addGroupForm.valid) {\n      let theForm = this.addGroupForm.value;\n      this.loading = true;\n      theForm.group = 'GROUP';      \n      theForm.status = 'STSACT';\n      //console.log('Ini file path: '+ theForm.artistphotopath);\n      this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          this.toastr.error(data.message);\n        } else {\n          this.loading = false;\n          this.toastr.success(data.message);\n          //this.router.navigate(['listartist']);\n        }\n        this.addGroupForm.reset();\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/addgroup/addgroup.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfig/editconfig.component.css\n// module id = ./src/app/components/msconfig/editconfig/editconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Config</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"msconfigForm\\\" (ngSubmit)=\\\"saveMsconfig(msconfigForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ this.mscode }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ this.mscode }}</div> -->\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': msconfigForm.get('value').invalid && msconfigForm.get('value').dirty}\\\">\\n            <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"value\\\" [formControl]=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"msconfigForm.get('value').dirty && msconfigForm.get('value').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter the Ms config value</span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': msconfigForm.get('group').invalid && msconfigForm.get('group').dirty}\\\">\\n            <label for=\\\"group\\\" class=\\\"col-sm-2 control-label\\\">Group</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"group\\\">\\n                    <option *ngFor=\\\"let g of grouplist\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"msconfigForm.get('group').dirty && msconfigForm.get('group').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"msconfigForm.get('group').errors.required\\\">\\n                    Please select Ms Config Group\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Description</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <textarea [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" id=\\\"desc\\\" rows=\\\"10\\\" [formControl]=\\\"desc\\\" placeholder=\\\"Desc\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': msconfigForm.get('status').invalid && msconfigForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"msconfigForm.get('status').dirty && msconfigForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"msconfigForm.get('status').errors.required\\\">\\n                    Please select config status\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"msconfigForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfig/editconfig.component.html\n// module id = ./src/app/components/msconfig/editconfig/editconfig.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editconfig',\n  templateUrl: './editconfig.component.html',\n  styleUrls: ['./editconfig.component.css']\n})\nexport class EditconfigComponent implements OnInit {\n  msconfigForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  //sts: any = ['active', 'inactive'];\n  grouplist: IMsconfigGroupList[];\n  msconfigid: String;\n  btnLbl: String;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  mscode: String;\n  code = new FormControl('', [Validators.required]);\n  value = new FormControl('', [Validators.required]);\n  group = new FormControl('', [Validators.required]);\n  desc = new FormControl('', [Validators.nullValidator]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.msconfigid = params['id'];\n      this.getMsconfig(this.msconfigid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfiggroup();\n    this.msconfigForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      group: this.group,\n      desc: this.desc,\n      status: this.status\n    });\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n    });\n  }\n  getMsconfiggroup(){\n    this.msconfigService.getMsconfiggroup().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.grouplist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.grouplist = [{code:'', value:'Error group list'}];\n        }\n      }\n    },\n    err => {\n      this.grouplist = [{code:'', value:'Error group list'}];\n    });\n  }\n\n  getMsconfig(id){\n    this.msconfigService.getMsconfigAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('MsConfig id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  populateForm(data): void {\n    this.mscode = data.code;\n    this.msconfigForm.patchValue({\n      code: data.code,\n      value: data.value,\n      group: data.group,\n      desc: data.desc,\n      status: data.status\n    });\n  }\n\n  saveMsconfig(formdata:any): void {\n    if (this.msconfigForm.valid) {\n      const theForm:any = this.msconfigForm.value;\n      if (this.msconfigid !== '') {\n        theForm.msconfigid = this.msconfigid;\n      \n      }\n      this.loading = true;\n      this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n        .subscribe(data => {\n          this.loading = false;\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.msconfigid) {\n            this.msconfigForm.reset();\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n  onBack(): void {\n    this.router.navigate(['/listconfig'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/editconfig/editconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfigfile/editconfigfile.component.css\n// module id = ./src/app/components/msconfig/editconfigfile/editconfigfile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Change File</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"msconfigForm\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <label class=\\\"control-label\\\" style=\\\"color:red;\\\"><sup>* <u>FILE SIZE (MAX {{ +this.maxfilesize?.value/1000 }} KB)</u></sup></label> \\n                <div class=\\\"input-group\\\">\\n                    <label class=\\\"input-group-btn\\\">\\n                        <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                            Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" accept=\\\"image/*\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"genreimage\\\" id=\\\"genreimage\\\" style=\\\"display:none\\\">\\n                        </span>\\n                    </label>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">  </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">  </label>\\n            <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n            <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-12\\\">\\n                <button [disabled]=\\\"this.loading == true\\\" type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfigfile/editconfigfile.component.html\n// module id = ./src/app/components/msconfig/editconfigfile/editconfigfile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IAggMsconfig } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editconfigfile',\n  templateUrl: './editconfigfile.component.html',\n  styleUrls: ['./editconfigfile.component.css']\n})\nexport class EditconfigfileComponent implements OnInit {\n  msconfigForm: FormGroup\n  userObj: any;\n  msconfig: IAggMsconfig;\n  msconfigid: String;\n  filesToUpload: Array<File> = [];\n  loading = false;\n  configuploadpath:string;\n  progressvalue = 0;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n  filepath = new FormControl('', [Validators.nullValidator]);\n  filename = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.configuploadpath = this.globals.configuploadpath;\n    this.progressvalue = 0;\n    this.getMsconfigVal('IMGSIZE','FSIZE');\n    this.msconfigForm = this.fb.group({\n      filepath: this.filepath,\n      filename: this.filename\n    });\n    this.route.params.subscribe((params: any) => {\n      let msconfigid = params['id'];\n      this.msconfigid = msconfigid;\n      this.getMsconfig(msconfigid);\n    });\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      }\n    },\n    err => {\n      this.maxfilesize = {code:'', value:'0'};\n    });\n  }\n  getMsconfig(id){\n    this.msconfigService.getMsconfigAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.msconfig = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('MsConfig id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  populateForm(data): void {\n    this.deletedFilename = this.msconfig.filename;\n    this.displayImg = this.msconfig.filepath;\n    this.msconfigForm.patchValue({\n      filepath: data.filepath,\n      filename: data.filename\n    });\n  }\n\n  fileChangeEvent(fileInput:any): void {\n\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    this.progressvalue = 0;\n    if (~files[0].type.indexOf(\"image/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.filesToUpload = <Array<File>>fileInput.target.files;\n        this.newfile = this.filesToUpload[0]['name'];\n        //console.log('content file: ' + this.filesToUpload);\n        this.progressvalue = 0;\n        this.uploadNewPhoto(this.filesToUpload);\n      } else {\n        let mfsize = +this.maxfilesize.value/1000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Kb');\n      }\n    } else  {\n      alert('Error file type. You must input image file type.');\n    }     \n  }\n\n  uploadNewPhoto(newFileData:any): void {\n    this.progressvalue = 30;\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    //lformData.append('genreimage',files[0],files[0]['name']);\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.configuploadpath);\n    this.loading = true;\n    this.progressvalue = 60;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        this.progressvalue = 70;\n        this.displayImg = data.filedata.filepath;\n        //let payloadData: any = this.msconfigForm.value;\n        let payloadData: any = {};\n        payloadData.uploadpath = this.configuploadpath;\n        payloadData.filename = this.msconfigForm.value.filename;\n        this.progressvalue = 80;\n        this.ftService.deleteInputFile(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.filename);\n            }   \n          },\n          err => {\n            console.log('Error deleted ' + err);\n          });\n        this.msconfigForm.value.msconfigid = this.msconfigid;   \n        this.msconfigForm.value.filepath = data.filedata.filepath;\n        this.msconfigForm.value.filename = data.filedata.filename;\n        this.progressvalue = 90;\n        //console.log('Update database photo - ' + this.displayImg);\n        this.msconfigService.updateMsconfigfile(this.userObj.userid, this.msconfigForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 100;\n            this.loading = false;\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  }\n  onBack(): void {\n    this.router.navigate(['/listconfig'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/editconfigfile/editconfigfile.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/listconfig/listconfig.component.css\n// module id = ./src/app/components/msconfig/listconfig/listconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>List Config</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"code\\\" class=\\\"col-sm-2 paddingsearch\\\">Code</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"code\\\" [formControl]=\\\"code\\\" placeholder=\\\"Ms Code\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"value\\\" class=\\\"col-sm-2 paddingsearch\\\">Value</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"value\\\" [formControl]=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n                      </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"group\\\" class=\\\"col-sm-2 paddingsearch\\\">Group</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"group\\\">\\n                                <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                                <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the group</option>\\n                                <option value=\\\"GROUP\\\">Group Config</option>\\n                                <option *ngFor=\\\"let g of grouplist\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                            </select>\\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                              <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">    \\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"submit\\\" class=\\\"col-sm-2 paddingsearch\\\"> </label>\\n                        <div class=\\\"col-sm-10\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                        </div>\\n                    </div>                  \\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"msconfigs && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No config found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            There is NO any configs found for the selected criteria.\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"msconfigs && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('code')\\\">Code</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('value')\\\">Value</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('group')\\\">Group</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('status')\\\">Status</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let config of msconfigs; let cfgIndex = index'>\\n                            <td scope=\\\"row\\\" data-label=\\\"Code\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showConfig(config._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ config.code}}</a></td>\\n                            <td data-label=\\\"Value\\\">{{ config.value }}</td>\\n                            <td data-label=\\\"Group\\\">{{ config.groupname }}</td>\\n                            <td data-label=\\\"Status\\\">{{ config.stsvalue}}</td>\\n                            <td data-label=\\\"Action\\\">\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editConfigFiles(config._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Config File\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editConfig(config._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Config Data\\\">\\n                                    <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(cfgIndex, config._id, config.code, config.filename)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Config\\\">\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"msconfigs && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/listconfig/listconfig.component.html\n// module id = ./src/app/components/msconfig/listconfig/listconfig.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { IAggMsconfig } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\n\n@Component({\n  selector: 'app-listconfig',\n  templateUrl: './listconfig.component.html',\n  styleUrls: ['./listconfig.component.css']\n})\nexport class ListconfigComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  totalrows: number;\n  pgCounter: number;\n  qcode: String;\n  qvalue: String;\n  qgroup: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  msconfigs: IAggMsconfig[];\n  sts: IMsconfigGroupList[] = [{code:'', value:'Error ms config list'}];\n  grouplist: IMsconfigGroupList[] = [{code:'', value:'Error ms config list'}];\n  loading = false;\n  configuploadpath:string;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n\n  code = new FormControl('',[Validators.nullValidator]);\n  value = new FormControl('',[Validators.nullValidator]);\n  group = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('',[Validators.nullValidator]);  \n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.configuploadpath = this.globals.configuploadpath;\n    this.reportForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      group: this.group,\n      status: this.status\n    });\n\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GROUP');\n\n    this.route.queryParams.forEach((params: Params) => {\n      this.qcode = params['code'] || '';\n      this.qvalue = params['value'] || '';\n      this.qgroup = params['group'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.code = this.qcode;\n      payload.value = this.qvalue;\n      payload.group = this.qgroup;\n      payload.status = this.qstatus;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(payload);\n\n      this.reportForm.patchValue({\n        code: this.qcode,\n        value: this.qvalue,\n        group: this.qgroup,\n        status: this.qstatus\n      });\n    })\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GROUP') {\n            this.grouplist = data.data;\n          }\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n       this.router.navigate(['listconfig'],\n        {\n          queryParams: {\n            code: this.reportForm.value.code,\n            value: this.reportForm.value.value,\n            group: this.reportForm.value.group,\n            status: this.reportForm.value.status,\n            page: 1, \n            sortby: null }\n        }\n      ); \n      //this.fetchReport(this.reportForm.value);\n    }\n  }\n\n  fetchReport(formval) {\n    this.loading = true;\n    this.msconfigService.getAggMsconfig(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.msconfigs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qcode = formval.code;\n        this.qvalue = formval.value;\n        this.qgroup = formval.group;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Ms Config Result';\n        \n        this.reportForm.patchValue({\n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listconfig'],\n      {\n        queryParams: {\n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortConfig(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listconfig'],\n      {\n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showConfig(msconfigid): void {\n    this.router.navigate([`viewconfig/${msconfigid}`],\n      { \n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }        \n      }\n    );\n  }\n\n  editConfigFiles(msconfigid): void {\n    this.router.navigate([`editconfigfile/${msconfigid}`],\n      {\n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  editConfig(msconfigid): void {\n    this.router.navigate([`editconfig/${msconfigid}`],\n      {\n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, msconfigid: string, code:string, filename:string) {\n\n    this.loading = true;\n\n    if(confirm('Do you really want to delete this config: ' + code + ' record?')){\n      if (filename) {\n        let payloadData: any = {};\n        payloadData.uploadpath = this.configuploadpath;\n        payloadData.filename = filename;\n        this.ftService.deleteInputFile(payloadData)\n        .subscribe(data => {\n            if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.filename);\n            }   \n          },\n          err => {\n            console.log('Error deleted ' + err);\n          });\n      }\n      this.msconfigService.deleteMsconfig(msconfigid)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message);\n        } else {\n          this.loading = false;\n          this.msconfigs.splice(idx, 1);\n          this.totalrows = this.totalrows - 1;\n          this.toastr.success(data.message);\n        }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });  \n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/listconfig/listconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/viewconfig/viewconfig.component.css\n// module id = ./src/app/components/msconfig/viewconfig/viewconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Config Details</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <form [formGroup]=\\\"msconfigForm\\\" class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code</label>\\n                    <div class=\\\"col-sm-10 form-ele\\\">{{ msconfig?.code }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                        <div class=\\\"form-ele\\\">{{ msconfig?.code }}</div>-->\\n                    </div> \\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value</label>\\n                    <div class=\\\"form-ele col-sm-10\\\">{{ msconfig?.value }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                        <div class=\\\"form-ele\\\">{{ msconfig?.value }}</div> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"group\\\" class=\\\"col-sm-2 control-label\\\">Group</label>\\n                    <div class=\\\"form-ele col-sm-10\\\">{{ msconfig?.groupname }}\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                        <div class=\\\"form-ele\\\">{{ msconfig?.groupname }}</div> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Desc</label>\\n                    \\n                    <div class=\\\"form-ele col-sm-10\\\">{{ msconfig?.desc }}\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                        <div class=\\\"form-ele\\\">{{ msconfig?.desc }}</div> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n                    <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                        <!-- <div class=\\\"form-ele\\\">{{ artist?.status }}</div> -->\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n        <div class=\\\"col-sm-4 thumbpadding\\\" *ngIf=\\\"msconfig?.filepath != ''\\\">\\n                <img src=\\\"{{ msconfig?.filepath }}\\\" class=\\\"img-thumbnail thumbviewsize\\\">\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-8\\\">\\n            <form class=\\\"form-horizontal\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label class=\\\"col-sm-2 control-label\\\"></label>\\n                    <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                        <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n                    </div>\\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/viewconfig/viewconfig.component.html\n// module id = ./src/app/components/msconfig/viewconfig/viewconfig.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { IAggMsconfig } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewconfig',\n  templateUrl: './viewconfig.component.html',\n  styleUrls: ['./viewconfig.component.css']\n})\nexport class ViewconfigComponent implements OnInit {\n\n  userObj: any;\n  private sub: Subscription;\n  sts: IMsconfigGroupList[];\n  msconfig: IAggMsconfig;\n  msconfigForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let msconfigid = params['id'];\n        this.getMsconfigGroupList('CSTATUS');\n        this.getMsconfig(msconfigid);\n      });\n    this.msconfigForm = this.fb.group({\n      status: this.status\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getMsconfig(id){\n    this.msconfigService.getMsconfigAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.msconfig = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('MsConfig id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  populateForm(data): void {\n    this.msconfigForm.patchValue({\n      status: data.status\n    });\n  }\n  onBack(): void {\n    this.router.navigate(['/listconfig'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/viewconfig/viewconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.css\n// module id = ./src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!-- Fixed navbar -->\\n<div id=\\\"wrap\\\">\\n    \\n        <header>   \\n            <div class=\\\"inner relative\\\">\\n                <a class=\\\"logo\\\" routerLink=\\\"about\\\"><img src=\\\"KXLOGO6.png\\\" alt=\\\"kaxet\\\"></a>\\n                <a id=\\\"menu-toggle\\\" class=\\\"button dark\\\" href=\\\"#\\\"><i class=\\\"fa fa-bars fa-2x\\\"></i></a>\\n                <nav id=\\\"navigation\\\">\\n                    <ul id=\\\"main-menu\\\" onclick=\\\"toggleMenu()\\\">\\n                        <li *ngIf=\\\"authService.isLoggedIn()\\\">\\n                            <a style=\\\"cursor:pointer;float:center;color:#fce86c\\\" routerLink=\\\"report\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-home fa-lg\\\"></i></a>\\n                        </li>\\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n                            <a routerLink=\\\"listartist\\\" routerLinkActive=\\\"active\\\">Artist</a>\\n                            <ul class=\\\"sub-menu\\\">\\n                                <li><a routerLink=\\\"addartist\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-plus-square\\\"></i>  Add Artist</a></li>\\n                                <li><a routerLink=\\\"listartist\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-edit\\\"></i>  Manage Artist</a></li>\\n                            </ul>\\n                        </li>\\n                        <!-- <li><a href=\\\"http://www.freshdesignweb.com/responsive-drop-down-menu-jquery-css3-using-icon-symbol.html\\\">Portfolio</a></li> -->\\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n                            <a routerLink=\\\"listalbum\\\" routerLinkActive=\\\"active\\\">Album</a>\\n                            <ul class=\\\"sub-menu\\\">\\n                                <li><a routerLink=\\\"addalbum\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-plus-square\\\"></i>  Add Album</a></li>\\n                                <li><a routerLink=\\\"listalbum\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-edit\\\"></i>  Manage Album</a></li>\\n                            </ul>\\n                        </li>\\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n                            <a routerLink=\\\"listsong\\\" routerLinkActive=\\\"active\\\">Song  <i class=\\\"fa fa-music\\\"></i></a>\\n                            <ul class=\\\"sub-menu\\\">\\n                                <li><a routerLink=\\\"addsong\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-plus-square\\\"></i>  Add Song</a></li>\\n                                <li><a routerLink=\\\"listsong\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-edit\\\"></i>  Manage Song</a></li>\\n                            </ul>\\n                        </li>\\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n                                <a routerLink=\\\"songpendingpurchase\\\" routerLinkActive=\\\"active\\\">Purchase</a>\\n                                <ul class=\\\"sub-menu\\\">\\n                                    <li><a routerLink=\\\"songpendingpurchase\\\" routerLinkActive=\\\"active\\\">Pending Cash</a></li>\\n                                    <li><a routerLink=\\\"songcompletepurchase\\\" routerLinkActive=\\\"active\\\">Summary</a></li>\\n                                </ul>\\n                        </li>\\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'ADM'\\\">\\n                            <a style=\\\"cursor:pointer\\\">Data</a>\\n                            <ul class=\\\"sub-menu\\\">\\n                                <li><a routerLink=\\\"labelstats\\\" routerLinkActive=\\\"active\\\">Labels</a></li>\\n                                <li><a routerLink=\\\"artiststats\\\" routerLinkActive=\\\"active\\\">Artists</a></li>\\n                                <li><a routerLink=\\\"albumstats\\\" routerLinkActive=\\\"active\\\">Albums</a></li>\\n                                <li><a routerLink=\\\"songstats\\\" routerLinkActive=\\\"active\\\">Songs</a></li>\\n                                <li><a routerLink=\\\"songpurchasestats\\\" routerLinkActive=\\\"active\\\">Purchase</a></li>\\n                                <li><a routerLink=\\\"transactionstats\\\" routerLinkActive=\\\"active\\\">Transactions</a></li>\\n                            </ul>\\n                        </li>                        \\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'ADM'\\\">\\n                            <a style=\\\"cursor:pointer\\\">Pending Action</a>\\n                            <ul class=\\\"sub-menu\\\">\\n                                <!-- <li><a routerLink=\\\"usermanagement\\\" [queryParams]=\\\"{status:'STSPEND',veremail:'Y'}\\\" routerLinkActive=\\\"active\\\">Pending Labels</a></li> -->\\n                                <li><a routerLink=\\\"usermanagement\\\" routerLinkActive=\\\"active\\\">Pending Labels</a></li>\\n                                <!-- <li><a routerLink=\\\"songmanagement\\\" [queryParams]=\\\"{songpublish:'N'}\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-music\\\"></i> Publish Songs</a></li> -->\\n                                <li><a routerLink=\\\"songmanagement\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-music\\\"></i> Publish Songs</a></li>\\n                            </ul>\\n                        </li>                        \\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'ADM'\\\">\\n                                <a routerLink=\\\"listconfig\\\" routerLinkActive=\\\"active\\\">Master Config  <i class=\\\"fa fa-wrench\\\"></i></a>\\n                                <ul class=\\\"sub-menu\\\">\\n                                    <li><a routerLink=\\\"addconfig\\\" routerLinkActive=\\\"active\\\">Add Config</a></li>\\n                                    <li><a routerLink=\\\"addgroup\\\" routerLinkActive=\\\"active\\\">Add Group</a></li>\\n                                    <li><a routerLink=\\\"listconfig\\\" routerLinkActive=\\\"active\\\">Manage Config</a></li>\\n                                </ul>\\n                        </li>\\n                        <li class=\\\"current-menu-item\\\" *ngIf=\\\"!authService.isLoggedIn()\\\"><a routerLink=\\\"login\\\" routerLinkActive=\\\"active\\\"><i class=\\\"fa fa-angle-right\\\"></i><i class=\\\"fa fa-angle-right\\\"></i>  Login</a></li>\\n                        <li class=\\\"parent\\\" *ngIf=\\\"authService.isLoggedIn()\\\">\\n                                <a routerLink=\\\"profile\\\" routerLinkActive=\\\"active\\\">Hi, {{ authService.currentUser.name }}  <i class=\\\"fa fa-user\\\"></i></a>\\n                                <ul class=\\\"sub-menu\\\">\\n                                    <li><a routerLink=\\\"profile\\\" routerLinkActive=\\\"active\\\">My Profile</a></li>\\n                                    <li><a routerLink=\\\"updateemail\\\" routerLinkActive=\\\"active\\\">Change Email</a></li>\\n                                    <li><a routerLink=\\\"password\\\" routerLinkActive=\\\"active\\\">Change Password</a></li>\\n                                    <li><a routerLink=\\\"logout\\\" routerLinkActive=\\\"active\\\">Logout</a></li>\\n                                </ul>\\n                            </li>\\n                    </ul>\\n                </nav>\\n                <div class=\\\"clear\\\"></div>\\n            </div>\\n        </header>\\t\\n    </div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.html\n// module id = ./src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navbar/navbar.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.css\n// module id = ./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Purchase Summary</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                        </div>\\n                    </div>         \\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"buyername\\\" class=\\\"col-sm-2 paddingsearch\\\">Buyer</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"buyername\\\" [formControl]=\\\"buyername\\\" placeholder=\\\"Buyer Name\\\">\\n                      </div>\\n                    </div>            \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"songname\\\" class=\\\"col-sm-2 paddingsearch\\\">Song</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                              <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                          </select>\\n                      </div>\\n                    </div>         \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label class=\\\"col-sm-6 paddingsearch\\\">Purchase Date</label>\\n                    </div>  \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-3 col-md-3\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt3\\\" [formControl]=\\\"rptype\\\" checked>\\n                                Today\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-3 col-md-3\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt1\\\" [formControl]=\\\"rptype\\\">\\n                                Current month\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt2\\\" [formControl]=\\\"rptype\\\">\\n                                Date Range (yyyy-mm-dd)\\n                            </label>\\n                        </div>\\n                        <div class=\\\"row\\\" style=\\\"padding: 8px\\\">\\n                            <div class=\\\"col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                        <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                                    </div>\\n                                    <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                                        <span class=\\\"col-sm-2\\\"></span>\\n                                        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid start date</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                        <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                                    </div>\\n                                    <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                                        <span class=\\\"col-sm-2\\\"></span>\\n                                        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid end date</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div> \\n\\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"paymentmtd\\\" class=\\\"col-sm-2 paddingsearch\\\">Payment</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"paymentmtd\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the method</option>\\n                            <option *ngFor=\\\"let pmt of pmtd\\\" [ngValue]=\\\"pmt.code\\\">{{pmt.value}}</option>\\n                        </select>\\n                      </div>\\n                    </div> \\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"this.loading == false && reportForm.invalid\\\">Submit</button>\\n                    </div>                  \\n                </div>\\n            </form>  \\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songpurchase && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">No song purchase found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n        There is NO song purchase found for the selected criteria.\\n      </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"songpurchase && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('purchasedt')\\\">Purchase Date</a></th>\\n                            <th width=\\\"5%\\\" scope=\\\"col\\\">Payment</th>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('listener')\\\">Buyer</a></th>\\n                            <th width=\\\"25%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('song')\\\">Song Title</a></th>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('artist')\\\">Artist</a></th>\\n                            <!-- <th width=\\\"15%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('album')\\\">Album</a></th> -->                            \\n                            <th width=\\\"10%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('songprice')\\\">Price</a></th>\\n                            <th width=\\\"5%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('status')\\\">Status</a></th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('approvedt')\\\">Response date</a></th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let songpuritem of songpurchase; let songIndex = index'>\\n                            <td data-label=\\\"Purchase Date\\\" scope=\\\"row\\\"><a style=\\\"font-size:12px;cursor:pointer\\\" (click)=\\\"showPurchase(songpuritem._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ songpuritem.purchasedt | date: 'd MMM y'}}</a></td>  \\n                            <td data-label=\\\"Payment\\\">{{ songpuritem.payment }}</td>\\n                            <td data-label=\\\"Buyer\\\">{{ songpuritem.listener }}</td>\\n                            <td data-label=\\\"Song Title\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showSong(songpuritem.songid)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Song\\\">{{ songpuritem.song}}</a></td>\\n                            <td data-label=\\\"Artist\\\">{{ songpuritem.artist }}</td>\\n                            <!-- <td style=\\\"font-size:12px\\\">{{ songpuritem.album }}</td> -->\\n                            <td data-label=\\\"Song Price\\\" class=\\\"text-right\\\">{{ songpuritem.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                            <td data-label=\\\"Status\\\">{{ songpuritem.stsvalue }}</td>\\n                            <td data-label=\\\"Response date\\\">{{ songpuritem.approvedt | date: 'd MMM y'}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"songpurchase && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n  \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.html\n// module id = ./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { SongpurchaseService } from '../../../services/songpurchase.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-songcompletepurchase',\n  templateUrl: './songcompletepurchase.component.html',\n  styleUrls: ['./songcompletepurchase.component.css']\n})\nexport class SongcompletepurchaseComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  songpurchase: any[];\n  totalrows: number;\n  pgCounter: number;\n  qartistname: String;\n  //qalbumname: String;\n  qbuyername: String;\n  qsongname: String;\n  qstatus: String;\n  qpaymentmtd: String;\n  qrptype: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  pmtd: IMsconfigGroupList[];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private songpurchaseService: SongpurchaseService,\n    private msconfigService: MsconfigService,    \n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n\n  artistname = new FormControl('',[Validators.nullValidator]);\n  //albumname = new FormControl('',[Validators.nullValidator]);  \n  buyername = new FormControl('',[Validators.nullValidator]);  \n  songname = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('',[Validators.nullValidator]);\n  rptype = new FormControl('opt3');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});\n  paymentmtd = new FormControl('',[Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      artistname: this.artistname,\n      //albumname: this.albumname,\n      buyername: this.buyername,\n      songname: this.songname,\n      status: this.status,\n      rptype: this.rptype,\n      startdt: this.startdt,\n      enddt: this.enddt,\n      paymentmtd: this.paymentmtd\n    });\n    this.getMsconfigGroupList('PMTSTATUS');\n    this.getMsconfigGroupList('PMTMETHOD');\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistname = params['artistname'] || '';\n      //this.qalbumname = params['albumname'] || '';\n      this.qbuyername = params['buyername'] || '';\n      this.qsongname = params['songname'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpaymentmtd = params['paymentmtd'] || '';\n      this.qrptype = params['rptype'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n      \n      if(this.qrptype !== '') {\n        let payload: any = {};\n        payload.artistname = this.qartistname;\n        //payload.albumname = this.qalbumname;\n        payload.buyername = this.qbuyername;\n        payload.songname = this.qsongname;\n        payload.status = this.qstatus;\n        payload.paymentmtd = this.qpaymentmtd;\n        payload.rptype = this.qrptype;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n  \n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n  \n        this.reportForm.patchValue({\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }       \n    })\n    this.reportForm.get('rptype').valueChanges\n    .subscribe(value => this.toggleDates(value));\n  }\n\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'PMTSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'PMTMETHOD') {\n            this.pmtd = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.pmtd = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.pmtd = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        if (this.reportForm.value.rptype === 'opt2'){\n          var pstartdt, penddt;\n            try {\n              pstartdt = this.datePipe.transform(this.reportForm.value.startdt, 'yyyy-MM-dd');  \n            } catch (error) {\n              pstartdt = this.qstartdt;\n            }\n            \n            try {\n              penddt = this.datePipe.transform(this.reportForm.value.enddt, 'yyyy-MM-dd');  \n            } catch (error) {\n              penddt = this.qenddt;  \n            }          \n\n          if (!pstartdt || !penddt) {\n            this.toastr.error('Date format is invalid.');\n          } else {\n            if (pstartdt > penddt) {    \n              this.toastr.error('Start date cannot be greater than end date.');\n            } else {\n              this.router.navigate(['songcompletepurchase'],\n                  {\n                    queryParams: {\n                      artistname: this.reportForm.value.artistname,\n                      //albumname: this.reportForm.value.albumname,\n                      buyername: this.reportForm.value.buyername,\n                      songname: this.reportForm.value.songname,\n                      status: this.reportForm.value.status,\n                      paymentmtd: this.reportForm.value.paymentmtd,\n                      rptype: this.reportForm.value.rptype,\n                      startdt: pstartdt,\n                      enddt: penddt,\n                      page: 1, \n                      sortby: null }\n                  }\n              );                  \n            }\n          }\n        } else {\n            this.router.navigate(['songcompletepurchase'],\n                {\n                  queryParams: {\n                    artistname: this.reportForm.value.artistname,\n                    //albumname: this.reportForm.value.albumname,\n                    buyername: this.reportForm.value.buyername,\n                    songname: this.reportForm.value.songname,\n                    status: this.reportForm.value.status,\n                    paymentmtd: this.reportForm.value.paymentmtd,\n                    rptype: this.reportForm.value.rptype,\n                    startdt: null,\n                    enddt: null,\n                    page: 1, \n                    sortby: null }\n                }\n            );\n        }    \n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.songpurchaseService.getSongpurchaseAggs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songpurchase = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qartistname = formval.artistname;\n        //this.qalbumname = formval.albumname;\n        this.qbuyername = formval.buyername;\n        this.qsongname = formval.songname;\n        this.qstatus = formval.status;\n        this.qpaymentmtd = formval.paymentmtd;\n        this.qrptype = formval.rptype;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n\n        /* if (formval.rptype === 'opt1') {\n          this.reportTitle = 'Song purchase for ' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.rptype === 'opt2') {\n            this.reportTitle = 'Song purchase between ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' and ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n            //this.reportTitle = 'Song purchase between ' + formval.startdt + ' and ' + formval.enddt;\n        } else if (formval.rptype === 'opt3') {\n          this.reportTitle = 'Song purchase for today'\n        } */\n        this.reportTitle = 'Search Result - ';\n        this.reportForm.patchValue({\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate(['songcompletepurchase'],\n      {\n        queryParams: {\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSongpurchase(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['songcompletepurchase'],\n      {\n        queryParams: { \n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showSong(songid): void {\n    this.router.navigate([`viewsongpurchase/${songid}`],\n      {\n        queryParams: { \n          srcpg:'comp',\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showPurchase(songpurchaseid): void {\n    this.router.navigate([`viewpurchase/${songpurchaseid}`],\n      {\n        queryParams: { \n          srcpg:'comp',\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/purchase/songcompletepurchase/songcompletepurchase.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.css\n// module id = ./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Pending Song purchase (Cash)</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                        </div>\\n                    </div>         \\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"buyername\\\" class=\\\"col-sm-2 paddingsearch\\\">Buyer</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"buyername\\\" [formControl]=\\\"buyername\\\" placeholder=\\\"Buyer Name\\\">\\n                      </div>\\n                    </div>            \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"songname\\\" class=\\\"col-sm-2 paddingsearch\\\">Song</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n                        </div>\\n                    </div>         \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label class=\\\"col-sm-6 paddingsearch\\\">Purchase Date</label>\\n                    </div>  \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-3 col-md-3\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt3\\\" [formControl]=\\\"rptype\\\" checked>\\n                                Today\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-3 col-md-3\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt1\\\" [formControl]=\\\"rptype\\\">\\n                                Current month\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt2\\\" [formControl]=\\\"rptype\\\">\\n                                Date Range (yyyy-mm-dd)\\n                            </label>\\n                        </div>\\n                        <div class=\\\"row\\\" style=\\\"padding: 8px\\\">\\n                            <div class=\\\"col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                        <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                                    </div>\\n                                    <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                                        <span class=\\\"col-sm-2\\\"></span>\\n                                        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid start date</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                        <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                                    </div>\\n                                    <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                                        <span class=\\\"col-sm-2\\\"></span>\\n                                        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid end date</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div> \\n\\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <div class=\\\"col-sm-6\\\" style=\\\"margin:0;padding:0\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"this.loading == false && reportForm.invalid\\\">Submit</button>\\n                        </div>\\n                    </div>                  \\n                </div>\\n            </form>  \\n        </div>\\n    </div>    \\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songpendings && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No pending song purchase found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            There is NO pending song purchase found for the selected criteria.\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"songpendings && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <span class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> {{ totalrows }} records found</b> </span> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"10%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpending('purchasedt')\\\">Purchase Date</a></th>\\n                            <th width=\\\"10%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpending('listener')\\\">Buyer</a></th>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpending('song')\\\">Song Name</a></th>\\n                            <!-- <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpending('artist')\\\">Artist</a></th> -->\\n                            <!-- <th width=\\\"15%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('album')\\\">Album</a></th> -->                            \\n                            <th width=\\\"10%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpending('songprice')\\\">Price</a></th>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\" >Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let songpending of songpendings; let songIndex = index'>\\n                            <td data-label=\\\"Purchase Date\\\" scope=\\\"row\\\">{{ songpending.purchasedt | date: 'd MMM y'}}</td>  \\n                            <td data-label=\\\"Buyer\\\">{{ songpending.listener }}</td>\\n                            <td data-label=\\\"Song Title\\\"><a style=\\\"font-size:12px;cursor:pointer\\\" (click)=\\\"showSong(songpending.songid)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Song\\\">{{ songpending.song}}</a></td>\\n                            <!-- <td style=\\\"font-size:12px\\\">{{ songpending.artist }}</td> -->\\n                            <!-- <td style=\\\"font-size:12px\\\">{{ songpending.album }}</td> -->\\n                            <td data-label=\\\"Price\\\" class=\\\"text-right\\\">{{ songpending.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                            <td data-label=\\\"Action\\\">\\n                                <!-- <a style=\\\"cursor:pointer;color:darkgreen\\\" aria-label=\\\"Approve\\\" (click)=\\\"approvePayment(songpending._id, songpending.song,songpending.songid,songpending.objlistenerid, songpending.songprice)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Approve Payment\\\"><i class=\\\"fa fa-check fa-2x\\\"></i></a> -->\\n                                <a style=\\\"cursor:pointer;color:darkgreen\\\" aria-label=\\\"Approve\\\" (click)=\\\"approvePayment(songIndex, songpending._id, songpending.song,songpending.songid,songpending.objlistenerid, songpending.songprice)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Approve Payment\\\">Approve</a>\\n                                &nbsp;&nbsp;&nbsp;\\n                                <!-- <a style=\\\"cursor:pointer;color:red\\\" aria-label=\\\"Reject\\\" (click)=\\\"rejectPayment(songpending._id, songpending.song)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Reject Payment\\\"><i class=\\\"fa fa-times fa-2x\\\"></i></a> -->\\n                                <a style=\\\"cursor:pointer;color:red\\\" aria-label=\\\"Reject\\\" (click)=\\\"rejectPayment(songIndex, songpending._id, songpending.song)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Reject Payment\\\">Reject</a>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"songpendings && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n  \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.html\n// module id = ./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { SongpurchaseService } from '../../../services/songpurchase.service';\nimport { TransactionService } from '../../../services/transaction.service';\nimport { SongService } from '../../../services/song.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-songpendingpurchase',\n  templateUrl: './songpendingpurchase.component.html',\n  styleUrls: ['./songpendingpurchase.component.css']\n})\nexport class SongpendingpurchaseComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  songpendings: any[];\n  totalrows: number;\n  pgCounter: number;\n  qartistname: String;\n  //qalbumname: String;\n  qbuyername: String;\n  qsongname: String;\n  qrptype: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: String;\n  pfee: IMsconfigGroupList;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private songpurchaseService: SongpurchaseService,\n    private transactionService: TransactionService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,    \n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n\n  artistname = new FormControl('',[Validators.nullValidator]);\n  //albumname = new FormControl('',[Validators.nullValidator]);  \n  buyername = new FormControl('',[Validators.nullValidator]);  \n  songname = new FormControl('',[Validators.nullValidator]);\n  rptype = new FormControl('opt3');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});  \n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      artistname: this.artistname,\n      //albumname: this.albumname,\n      buyername: this.buyername,\n      songname: this.songname,\n      rptype: this.rptype,\n      startdt: this.startdt,\n      enddt: this.enddt\n    });\n    this.getMsconfigVal('PFEE','FEE');\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistname = params['artistname'] || '';\n      //this.qalbumname = params['albumname'] || '';\n      this.qbuyername = params['buyername'] || '';\n      this.qsongname = params['songname'] || '';\n      this.qrptype = params['rptype'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n      \n      if(this.qrptype !== '') {\n        let payload: any = {};\n        payload.artistname = this.qartistname;\n        //payload.albumname = this.qalbumname;\n        payload.buyername = this.qbuyername;\n        payload.songname = this.qsongname;\n        payload.rptype = this.qrptype;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n  \n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n  \n        this.reportForm.patchValue({\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }       \n    })\n    this.reportForm.get('rptype').valueChanges\n    .subscribe(value => this.toggleDates(value));\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.pfee = data.data[0];\n        } else {\n          this.pfee = {code:'', value:'Error ms config list'};\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.pfee = {code:'', value:'Error ms config list'};\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        if (this.reportForm.value.rptype === 'opt2'){\n          var pstartdt, penddt;\n            try {\n              pstartdt = this.datePipe.transform(this.reportForm.value.startdt, 'yyyy-MM-dd');  \n            } catch (error) {\n              pstartdt = this.qstartdt;\n            }\n            \n            try {\n              penddt = this.datePipe.transform(this.reportForm.value.enddt, 'yyyy-MM-dd');  \n            } catch (error) {\n              penddt = this.qenddt;  \n            }          \n\n          if (!pstartdt || !penddt) {\n            this.toastr.error('Date format is invalid.');\n          } else {\n            if (pstartdt > penddt) {    \n              this.toastr.error('Start date cannot be greater than end date.');\n            } else {\n              this.router.navigate(['songpendingpurchase'],\n                  {\n                    queryParams: {\n                      artistname: this.reportForm.value.artistname,\n                      //albumname: this.reportForm.value.albumname,\n                      buyername: this.reportForm.value.buyername,\n                      songname: this.reportForm.value.songname,\n                      rptype: this.reportForm.value.rptype,\n                      startdt: pstartdt,\n                      enddt: penddt,\n                      page: 1, \n                      sortby: null }\n                  }\n              );                  \n            }\n             /* if (!this.isValidDate2(pstartdt) || !this.isValidDate2(penddt) ) {\n                this.toastr.error('Input date is invalid.');\n             } else { \n                var bits = pstartdt.split('-');\n                var y = bits[2],\n                  m = bits[1],\n                  d = bits[0];\n                let ipstartdt = new Date(y+ '-' +m+ '-' +d);\n                bits = penddt.split('-');\n                y = bits[2];\n                m = bits[1];\n                d = bits[0];\n                let ipenddt = new Date(y+ '-' +m+ '-' +d); \n                if (ipstartdt > ipenddt) {    \n                  this.toastr.error('Start date cannot be greater than end date.');\n                } else {\n                  this.router.navigate(['songpendingpurchase'],\n                      {\n                        queryParams: {\n                          artistname: this.reportForm.value.artistname,\n                          albumname: this.reportForm.value.albumname,\n                          songname: this.reportForm.value.songname,\n                          rptype: this.reportForm.value.rptype,\n                          startdt: pstartdt,\n                          enddt: penddt,\n                          page: 1, \n                          sortby: null }\n                      }\n                  );                  \n                }\n            } */\n          }\n        } else {\n            this.router.navigate(['songpendingpurchase'],\n                {\n                  queryParams: {\n                    artistname: this.reportForm.value.artistname,\n                    //albumname: this.reportForm.value.albumname,\n                    buyername: this.reportForm.value.buyername,\n                    songname: this.reportForm.value.songname,\n                    rptype: this.reportForm.value.rptype,\n                    startdt: null,\n                    enddt: null,\n                    page: 1, \n                    sortby: null }\n                }\n            );\n        }    \n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.songpurchaseService.getPendingsongpurchaseAggs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songpendings = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qartistname = formval.artistname;\n        //this.qalbumname = formval.albumname;\n        this.qbuyername = formval.buyername;\n        this.qsongname = formval.songname;\n        this.qrptype = formval.rptype;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n\n        /* if (formval.rptype === 'opt1') {\n          this.reportTitle = 'Search Result for month:' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.rptype === 'opt2') {\n            this.reportTitle = 'Result for date: ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' to ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n            //this.reportTitle = 'Pending Song purchase between ' + formval.startdt + ' and ' + formval.enddt;\n        } else if (formval.rptype === 'opt3') {\n          this.reportTitle = 'Result for date: today'\n        } */\n        this.reportTitle = 'Search Result - ';\n        this.reportForm.patchValue({\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate(['songpendingpurchase'],\n      {\n        queryParams: {\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSongpending(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['songpendingpurchase'],\n      {\n        queryParams: { \n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  showSong(songid): void {\n    this.router.navigate([`viewsongpurchase/${songid}`],\n      {\n        queryParams: { \n          srcpg:'pend',\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  showPurchase(songpurchaseid): void {\n    this.router.navigate([`viewpurchase/${songpurchaseid}`],\n      {\n        queryParams: { \n          srcpg:'pend',\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  \n  approvePayment(idx, songpurchaseid, songname, songid, listenerid, songprice): void {\n    if(confirm('Do you really want to approve this song payment: ' + songname + ' record?')){ \n      this.loading = true;\n      let payload: any = {};\n      payload.status = 'STSAPV';\n      payload.listenerid = listenerid;\n      payload.songpurchaseid = songpurchaseid;\n      payload.paymentmtd = 'PMTCASH';\n      payload.producttype = 'SONG';\n      payload.songid = songid;\n      payload.dbcr = '-'\n      payload.amount = Number(this.pfee.value) * (parseInt(songprice) / 100);\n      this.songpurchaseService.pubSaveSongpurchasePayment(this.userObj.userid, payload)\n      .subscribe(data => {\n        if (data.success === true) {\n          this.songpendings.splice(idx, 1);\n          this.totalrows = this.totalrows - 1;\n          /* setTimeout(\n            this.router.navigate(['songpendingpurchase'],\n              {\n                queryParams: { \n                  artistname: this.qartistname,\n                  //albumname: this.qalbumname,\n                  buyername: this.qbuyername,\n                  songname: this.qsongname,\n                  rptype: this.qrptype,\n                  startdt: this.qstartdt,\n                  enddt: this.qenddt,\n                  page: this.qpage || 1, \n                  sortby: this.qsort }\n              }\n            ), 1000);  */\n          this.loading = false;\n          this.toastr.success('Approve payment success !');\n        } else {\n          this.loading = false;\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message + '. Error updating the purchase payment...');\n        }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n/*   approvePayment(songpurchaseid, songname, songid, listenerid, songprice): void {\n    if(confirm('Do you really want to approve this song payment: ' + songname + ' record?')){\n      this.loading = true;\n      let payload: any = {};\n      payload.status = 'STSAPV';\n      this.songpurchaseService.updateStatuspurchase(songpurchaseid, payload)\n      .subscribe(data => {\n        if (data.success === true) {\n          let payload1: any = {};\n          payload1.listenerid = listenerid;\n          payload1.purchaseid = songpurchaseid;\n          payload1.paymentmtd = 'PMTCASH';\n          payload1.producttype = 'SONG';\n          payload1.productid = songid;\n          payload1.dbcr = '-'\n          payload1.amount = Number(this.pfee.value) * (parseInt(songprice) / 100);\n          this.transactionService.saveTransaction(this.userObj.userid, payload1)\n          .subscribe(data => {\n            if (data.success === true) {\n              let payload2: any = {};\n              this.songService.songbuyincrement(songid, payload2)\n              .subscribe(data => {\n                if (data.success === true) {\n                  this.loading = false;\n                  this.toastr.success('Approve payment success !');\n                } else {\n                  this.toastr.warning('Error increment total purchase in song data...');\n                }\n                this.router.navigate(['songpendingpurchase'],\n                  {\n                      queryParams: { \n                        artistname: this.qartistname,\n                        //albumname: this.qalbumname,\n                        buyername: this.qbuyername,\n                        songname: this.qsongname,\n                        rptype: this.qrptype,\n                        startdt: this.qstartdt,\n                        enddt: this.qenddt,\n                        page: this.qpage || 1, \n                        sortby: this.qsort }\n                  }\n                );                \n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n                this.router.navigate(['songpendingpurchase'],\n                  {\n                      queryParams: { \n                        artistname: this.qartistname,\n                        //albumname: this.qalbumname,\n                        buyername: this.qbuyername,\n                        songname: this.qsongname,\n                        rptype: this.qrptype,\n                        startdt: this.qstartdt,\n                        enddt: this.qenddt,\n                        page: this.qpage || 1, \n                        sortby: this.qsort }\n                  }\n                ); \n              });\n            } else {\n              this.loading = false;\n              this.toastr.error('Error saving the payment transaction...');\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n\n        } else {\n          this.loading = false;\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message + '. Error updating the purchase status...');\n        }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  } */\n\n  rejectPayment(idx, songpurchaseid, songname): void {\n    if(confirm('Do you really want to reject this song payment: ' + songname + ' record?')){\n      this.loading = true;\n      let payload: any = {};\n      payload.status = 'STSRJCT';\n      payload.songpurchaseid = songpurchaseid;\n      this.songpurchaseService.pubSaveSongpurchasePayment(this.userObj.userid, payload)\n      .subscribe(data => {\n        if (data.success === true) {\n          this.songpendings.splice(idx, 1);\n          this.totalrows = this.totalrows - 1;\n          /* setTimeout(\n            this.router.navigate(['songpendingpurchase'],\n              {\n                queryParams: { \n                  artistname: this.qartistname,\n                  //albumname: this.qalbumname,\n                  buyername: this.qbuyername,\n                  songname: this.qsongname,\n                  rptype: this.qrptype,\n                  startdt: this.qstartdt,\n                  enddt: this.qenddt,\n                  page: this.qpage || 1, \n                  sortby: this.qsort }\n              }\n            ), 1000); */\n            this.loading = false;\n            //this.toastr.success(data.message);\n            this.toastr.success('Reject payment success !');\n        } else {\n          this.loading = false;\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message);\n        }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n/*   rejectPayment(songpurchaseid, songname): void {\n    if(confirm('Do you really want to reject this song payment: ' + songname + ' record?')){\n      this.loading = true;\n      let payload: any = {};\n      payload.status = 'STSRJCT';\n      this.songpurchaseService.updateStatuspurchase(songpurchaseid, payload)\n      .subscribe(data => {\n        if (data.success === true) {\n          this.loading = false;\n          this.toastr.success(data.message);\n          this.router.navigate(['songpendingpurchase'],\n              {\n                queryParams: { \n                  artistname: this.qartistname,\n                  //albumname: this.qalbumname,\n                  buyername: this.qbuyername,\n                  songname: this.qsongname,\n                  rptype: this.qrptype,\n                  startdt: this.qstartdt,\n                  enddt: this.qenddt,\n                  page: this.qpage || 1, \n                  sortby: this.qsort }\n              }\n          );\n        } else {\n          this.loading = false;\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message);\n        }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  } */\n/*   isValidDate2(s): boolean {\n    let input = <String>s;\n    var bits = input.split(\"-\");\n    var y = parseInt(bits[2]),\n      m = parseInt(bits[1]),\n      d = parseInt(bits[0]);\n    // Assume not leap year by default (note zero index for Jan)\n    var daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  \n    // If evenly divisible by 4 and not evenly divisible by 100,\n    // or is evenly divisible by 400, then a leap year\n    if ((!(y % 4) && y % 100) || !(y % 400)) {\n      daysInMonth[1] = 29;\n    }\n    return !(/\\D/.test(String(d))) && d > 0 && d <= daysInMonth[--m]\n  } */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/purchase/songpendingpurchase/songpendingpurchase.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/songpurchasestats/songpurchasestats.component.css\n// module id = ./src/app/components/purchase/songpurchasestats/songpurchasestats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Purchase Summary</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <!-- <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                        </div>\\n                    </div> -->         \\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"labelid\\\" class=\\\"col-sm-2 paddingsearch\\\">Label</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                            <option value=\\\"\\\">Select the label</option>\\n                            <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                          </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"songname\\\" class=\\\"col-sm-2 paddingsearch\\\">Song</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n                        </div>\\n                    </div>            \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"buyername\\\" class=\\\"col-sm-2 paddingsearch\\\">Buyer</label>\\n                        <div class=\\\"col-sm-10\\\">\\n                            <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"buyername\\\" [formControl]=\\\"buyername\\\" placeholder=\\\"Buyer Name\\\">\\n                        </div>\\n                      </div>\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                              <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                          </select>\\n                      </div>\\n                    </div>         \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label class=\\\"col-sm-6 paddingsearch\\\">Purchase Date</label>\\n                    </div>  \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-3 col-md-3\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt3\\\" [formControl]=\\\"rptype\\\" checked>\\n                                Today\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-3 col-md-3\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt1\\\" [formControl]=\\\"rptype\\\">\\n                                Current month\\n                            </label>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <div class=\\\"radio\\\">\\n                            <label>\\n                                <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt2\\\" [formControl]=\\\"rptype\\\">\\n                                Date Range (yyyy-mm-dd)\\n                            </label>\\n                        </div>\\n                        <div class=\\\"row\\\" style=\\\"padding: 8px\\\">\\n                            <div class=\\\"col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                        <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                                    </div>\\n                                    <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                                        <span class=\\\"col-sm-2\\\"></span>\\n                                        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid start date</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-6 col-md-6\\\">\\n                                <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                                    <div class=\\\"input-group\\\">\\n                                        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                        <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                                    </div>\\n                                    <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                                        <span class=\\\"col-sm-2\\\"></span>\\n                                        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid end date</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div> \\n\\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"paymentmtd\\\" class=\\\"col-sm-2 paddingsearch\\\">Payment</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"paymentmtd\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the method</option>\\n                            <option *ngFor=\\\"let pmt of pmtd\\\" [ngValue]=\\\"pmt.code\\\">{{pmt.value}}</option>\\n                        </select>\\n                      </div>\\n                    </div> \\n                    <div class=\\\"col-sm-6 col-md-6\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"this.loading == false && reportForm.invalid\\\">Submit</button>\\n                    </div>                  \\n                </div>\\n            </form>  \\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songpurchase && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">No song purchase found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n        There is NO song purchase found for the selected criteria.\\n      </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"songpurchase && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('label')\\\">Label</a></th>  \\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('purchasedt')\\\">Purchase Date</a></th>\\n                            <th width=\\\"5%\\\" scope=\\\"col\\\">Payment</th>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('listener')\\\">Buyer</a></th>\\n                            <th width=\\\"25%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('song')\\\">Song Title</a></th>\\n                            <!-- <th width=\\\"15%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('album')\\\">Album</a></th> -->                            \\n                            <th width=\\\"10%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('songprice')\\\">Price</a></th>\\n                            <th width=\\\"5%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('status')\\\">Status</a></th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSongpurchase('approvedt')\\\">Response date</a></th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let songpuritem of songpurchase; let songIndex = index'>\\n                            <td data-label=\\\"Label\\\">{{ songpuritem.label }}</td>  \\n                            <td data-label=\\\"Purchase Date\\\" scope=\\\"row\\\"><a style=\\\"font-size:12px;cursor:pointer\\\" (click)=\\\"showPurchase(songpuritem._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ songpuritem.purchasedt | date: 'd MMM y'}}</a></td>  \\n                            <td data-label=\\\"Payment\\\">{{ songpuritem.payment }}</td>\\n                            <td data-label=\\\"Buyer\\\">{{ songpuritem.listener }}</td>\\n                            <td data-label=\\\"Song Title\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showSong(songpuritem.songid)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Song\\\">{{ songpuritem.song}}</a></td>\\n                            <!-- <td style=\\\"font-size:12px\\\">{{ songpuritem.album }}</td> -->\\n                            <td data-label=\\\"Song Price\\\" class=\\\"text-right\\\">{{ songpuritem.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                            <td data-label=\\\"Status\\\">{{ songpuritem.stsvalue }}</td>\\n                            <td data-label=\\\"Response date\\\">{{ songpuritem.approvedt | date: 'd MMM y'}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"songpurchase && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n  \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/songpurchasestats/songpurchasestats.component.html\n// module id = ./src/app/components/purchase/songpurchasestats/songpurchasestats.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { SongpurchaseService } from '../../../services/songpurchase.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { IUserList } from '../../../interface/user';\nimport { UsermgtService } from '../../../services/admin/usermgt.service';\n\n@Component({\n  selector: 'app-songpurchasestats',\n  templateUrl: './songpurchasestats.component.html',\n  styleUrls: ['./songpurchasestats.component.css']\n})\nexport class SongpurchasestatsComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  userlist: IUserList[];\n  songpurchase: any[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qartistname: String;\n  //qalbumname: String;\n  qbuyername: String;\n  qsongname: String;\n  qstatus: String;\n  qpaymentmtd: String;\n  qrptype: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  pmtd: IMsconfigGroupList[];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private songpurchaseService: SongpurchaseService,\n    private msconfigService: MsconfigService,    \n    private labelmgtService: UsermgtService,\n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n  labelid = new FormControl('',[Validators.nullValidator]);\n  artistname = new FormControl('',[Validators.nullValidator]);\n  //albumname = new FormControl('',[Validators.nullValidator]);  \n  buyername = new FormControl('',[Validators.nullValidator]);  \n  songname = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('',[Validators.nullValidator]);\n  rptype = new FormControl('opt3');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});\n  paymentmtd = new FormControl('',[Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      labelid: this.labelid,\n      artistname: this.artistname,\n      //albumname: this.albumname,\n      buyername: this.buyername,\n      songname: this.songname,\n      status: this.status,\n      rptype: this.rptype,\n      startdt: this.startdt,\n      enddt: this.enddt,\n      paymentmtd: this.paymentmtd\n    });\n    this.getMsconfigGroupList('PMTSTATUS');\n    this.getMsconfigGroupList('PMTMETHOD');\n    this.getLabels();\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qartistname = params['artistname'] || '';\n      //this.qalbumname = params['albumname'] || '';\n      this.qbuyername = params['buyername'] || '';\n      this.qsongname = params['songname'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpaymentmtd = params['paymentmtd'] || '';\n      this.qrptype = params['rptype'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n      \n      if(this.qrptype !== '') {\n        let payload: any = {};\n        payload.labelid = this.qlabelid;\n        payload.artistname = this.qartistname;\n        //payload.albumname = this.qalbumname;\n        payload.buyername = this.qbuyername;\n        payload.songname = this.qsongname;\n        payload.status = this.qstatus;\n        payload.paymentmtd = this.qpaymentmtd;\n        payload.rptype = this.qrptype;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n  \n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n  \n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }       \n    })\n    this.reportForm.get('rptype').valueChanges\n    .subscribe(value => this.toggleDates(value));\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'PMTSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'PMTMETHOD') {\n            this.pmtd = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.pmtd = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.pmtd = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Error label list'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.userlist = [{_id:'', name:'Error label list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        if (this.reportForm.value.rptype === 'opt2'){\n          var pstartdt, penddt;\n            try {\n              pstartdt = this.datePipe.transform(this.reportForm.value.startdt, 'yyyy-MM-dd');  \n            } catch (error) {\n              pstartdt = this.qstartdt;\n            }\n            \n            try {\n              penddt = this.datePipe.transform(this.reportForm.value.enddt, 'yyyy-MM-dd');  \n            } catch (error) {\n              penddt = this.qenddt;  \n            }          \n\n          if (!pstartdt || !penddt) {\n            this.toastr.error('Date format is invalid.');\n          } else {\n            if (pstartdt > penddt) {    \n              this.toastr.error('Start date cannot be greater than end date.');\n            } else {\n              this.router.navigate(['songpurchasestats'],\n                  {\n                    queryParams: {\n                      labelid: this.reportForm.value.labelid,\n                      artistname: this.reportForm.value.artistname,\n                      //albumname: this.reportForm.value.albumname,\n                      buyername: this.reportForm.value.buyername,\n                      songname: this.reportForm.value.songname,\n                      status: this.reportForm.value.status,\n                      paymentmtd: this.reportForm.value.paymentmtd,\n                      rptype: this.reportForm.value.rptype,\n                      startdt: pstartdt,\n                      enddt: penddt,\n                      page: 1, \n                      sortby: null }\n                  }\n              );                  \n            }\n          }\n        } else {\n            this.router.navigate(['songpurchasestats'],\n                {\n                  queryParams: {\n                    labelid: this.reportForm.value.labelid,\n                    artistname: this.reportForm.value.artistname,\n                    //albumname: this.reportForm.value.albumname,\n                    buyername: this.reportForm.value.buyername,\n                    songname: this.reportForm.value.songname,\n                    status: this.reportForm.value.status,\n                    paymentmtd: this.reportForm.value.paymentmtd,\n                    rptype: this.reportForm.value.rptype,\n                    startdt: null,\n                    enddt: null,\n                    page: 1, \n                    sortby: null }\n                }\n            );\n        }    \n    }\n  }\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.songpurchaseService.getAdmSongpurchaseAggs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songpurchase = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qlabelid = formval.labelid;\n        this.qartistname = formval.artistname;\n        //this.qalbumname = formval.albumname;\n        this.qbuyername = formval.buyername;\n        this.qsongname = formval.songname;\n        this.qstatus = formval.status;\n        this.qpaymentmtd = formval.paymentmtd;\n        this.qrptype = formval.rptype;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n\n        /* if (formval.rptype === 'opt1') {\n          this.reportTitle = 'Song purchase for ' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.rptype === 'opt2') {\n            this.reportTitle = 'Song purchase between ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' and ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n            //this.reportTitle = 'Song purchase between ' + formval.startdt + ' and ' + formval.enddt;\n        } else if (formval.rptype === 'opt3') {\n          this.reportTitle = 'Song purchase for today'\n        } */\n        this.reportTitle = 'Search Result - ';\n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate(['songpurchasestats'],\n      {\n        queryParams: {\n          labelid: this.qlabelid,\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSongpurchase(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['songpurchasestats'],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showSong(songid): void {\n    this.router.navigate([`viewsongpurchase/${songid}`],\n      {\n        queryParams: { \n          srcpg:'stats',\n          labelid: this.qlabelid,\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showPurchase(songpurchaseid): void {\n    this.router.navigate([`viewpurchase/${songpurchaseid}`],\n      {\n        queryParams: { \n          srcpg:'stats',\n          labelid: this.qlabelid,\n          artistname: this.qartistname,\n          //albumname: this.qalbumname,\n          buyername: this.qbuyername,\n          songname: this.qsongname,\n          status: this.qstatus,\n          paymentmtd: this.qpaymentmtd,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/purchase/songpurchasestats/songpurchasestats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/viewpurchase/viewpurchase.component.css\n// module id = ./src/app/components/purchase/viewpurchase/viewpurchase.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Purchase Details</h3>\\n    </div>\\n    <form class=\\\"form-horizontal \\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"label\\\" class=\\\"col-sm-2 control-label\\\">Label</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ purchase?.label }}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"id\\\" class=\\\"col-sm-2 control-label\\\">Purchase Ref</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ purchase?._id }}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"purchasedate\\\" class=\\\"col-sm-2 control-label\\\">Purchase Date</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ purchase?.purchasedt | date: 'd MMM y'}}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"payment\\\" class=\\\"col-sm-2 control-label\\\">Payment Method</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ purchase?.payment }}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"listener\\\" class=\\\"col-sm-2 control-label\\\">Buyer</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ purchase?.listener }}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"song\\\" class=\\\"col-sm-2 control-label\\\">Song</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ purchase?.song }}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artist\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ purchase?.artist }}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ purchase?.stsvalue }}</div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"approvedt\\\" class=\\\"col-sm-2 control-label\\\">Response Date</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ purchase?.approvedt | date: 'd MMM y'}}</div>\\n        </div>\\n       \\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/viewpurchase/viewpurchase.component.html\n// module id = ./src/app/components/purchase/viewpurchase/viewpurchase.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute,Params } from '@angular/router';\nimport { SongpurchaseService } from '../../../services/songpurchase.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-viewpurchase',\n  templateUrl: './viewpurchase.component.html',\n  styleUrls: ['./viewpurchase.component.css']\n})\nexport class ViewpurchaseComponent implements OnInit {\n  userObj: any;\n  purchase: any;\n  purchaseForm: FormGroup;\n  private sub: Subscription;\n  qsrcpg: string;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private songpurchaseService: SongpurchaseService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let songpurchaseid = params['id'];\n        this.getSongpurchase(songpurchaseid);\n      });\n    this.route.queryParams.forEach((params: Params) => {\n        this.qsrcpg = params['srcpg'] || '';\n      });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getSongpurchase(id){\n    let payload: any = {};\n    payload.songpurchaseid = id;\n    this.songpurchaseService.getSongpurchaseAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.purchase = data.data[0];\n        } else {\n          this.toastr.error('Song purchase id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  onBack(): void {\n    if (this.qsrcpg === 'pend') {\n      this.router.navigate(['/songpendingpurchase'], { preserveQueryParams: true });\n    } else if (this.qsrcpg === 'comp') {\n      this.router.navigate(['/songcompletepurchase'], { preserveQueryParams: true });\n    } else if (this.qsrcpg === 'tranx') {\n      this.router.navigate(['/transaction'], { preserveQueryParams: true });\n    } else if (this.qsrcpg === 'stats') {\n      this.router.navigate(['/songpurchasestats'], { preserveQueryParams: true }); \n    } else if (this.qsrcpg === 'tranxstats') {\n      this.router.navigate(['/transactionstats'], { preserveQueryParams: true }); \n    } else {\n      this.authService.logout();\n      this.router.navigate(['login']);\n      this.toastr.error('Incorrect param in the URL');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/purchase/viewpurchase/viewpurchase.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.css\n// module id = ./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Song Details</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Title</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ song?.songname }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songname }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artist\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.artist }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.artist }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"album\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.album }} \\n<!--               <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.album }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            \\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songlyric }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songlyric }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list\\\"></i></div> -->\\n              <select disabled class=\\\"form-control selectfontsize\\\" [formControl]=\\\"songgenre\\\">\\n                  <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songgenre }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songprice | currency: 'IDR':'symbol-narrow' }}\\n                <!-- <div class=\\\"input-group-addon\\\">Rp</div> -->\\n                <!-- <div class=\\\"form-ele\\\">{{ song?.songprice | currency: 'IDR':true }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprvwpath\\\" class=\\\"col-sm-2 control-label\\\">Preview</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"border:1px\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n              <a href=\\\"{{ song?.songprvwpath }}\\\" style=\\\"cursor:pointer;padding-right:5px;float:center;color:#C92020\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Preview\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songprvwpath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songfilepath\\\" class=\\\"col-sm-2 control-label\\\">File</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"border:1px\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n                <a href=\\\"{{ song?.songfilepath }}\\\" style=\\\"cursor:pointer;float:center;color:#11DFDF\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Song\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a>\\n                <!-- <div class=\\\"form-ele\\\">{{ song?.songfilepath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Publish?</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songpublish }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songpublish }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songbuy }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songbuy }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list\\\"></i></div> -->\\n              <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.status }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.html\n// module id = ./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute,Params } from '@angular/router';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IAggSong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewsongpurchase',\n  templateUrl: './viewsongpurchase.component.html',\n  styleUrls: ['./viewsongpurchase.component.css']\n})\nexport class ViewsongpurchaseComponent implements OnInit {\n  userObj: any;\n  song: IAggSong;\n  genre: IMsconfigGroupList[];\n  sts: IMsconfigGroupList[];\n  songForm: FormGroup;\n  qsrcpg: string;\n\n  private sub: Subscription;\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,    \n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  songgenre = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let songid = params['id'];\n        this.getMsconfigGroupList('CSTATUS');\n        this.getMsconfigGroupList('GENRE');\n        this.getSong(songid);\n      });\n    this.route.queryParams.forEach((params: Params) => {\n        this.qsrcpg = params['srcpg'] || '';\n      });\n    this.songForm = this.fb.group({\n      songgenre: this.songgenre,\n      status: this.status\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getSong(id){\n    this.songService.getSongAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.song = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  populateForm(data): void {\n    this.songForm.patchValue({\n      songgenre: data.songgenre,\n      status: data.status\n    });\n  }\n\n  onBack(): void {\n    if (this.qsrcpg === 'pend') {\n      this.router.navigate(['/songpendingpurchase'], { preserveQueryParams: true });\n    } else if (this.qsrcpg === 'comp') {\n      this.router.navigate(['/songcompletepurchase'], { preserveQueryParams: true });\n    } else if (this.qsrcpg === 'tranx') {\n      this.router.navigate(['../transaction'], { preserveQueryParams: true });\n    } else if (this.qsrcpg === 'stats') {\n      this.router.navigate(['/songpurchasestats'], { preserveQueryParams: true });  \n    } else {\n      this.authService.logout();\n      this.router.navigate(['login']);\n      this.toastr.error('Incorrect param in the URL');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/purchase/viewsongpurchase/viewsongpurchase.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/addsong/addsong.component.css\n// module id = ./src/app/components/song/addsong/addsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Song</h3>\\n  </div>  \\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"addSongForm\\\" (ngSubmit)=\\\"addSong(addSongForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n      <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n      <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n   </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('artistid').invalid && addSongForm.get('artistid').dirty}\\\">\\n      <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select #inputartist [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n            <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('artistid').dirty && addSongForm.get('artistid').errors\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('artistid').errors.required\\\">\\n            Please enter the artist\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('albumid').invalid && addSongForm.get('albumid').dirty}\\\">\\n      <label for=\\\"albumid\\\" class=\\\"col-sm-2 control-label\\\">Album<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select #inputalbum [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the album</option>\\n            <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('albumid').dirty && addSongForm.get('albumid').errors\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('albumid').errors.required\\\">\\n            Please enter the album\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songname').invalid && addSongForm.get('songname').dirty}\\\">\\n      <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"songname\\\" id=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songname').dirty && addSongForm.get('songname').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songname').errors.required\\\">\\n              Please enter the song name\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <textarea [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" id=\\\"songlyric\\\" rows=\\\"10\\\" [formControl]=\\\"songlyric\\\" placeholder=\\\"Song Lyric\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songgenre').invalid && addSongForm.get('songgenre').dirty}\\\">\\n      <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n          <select #inputgenre [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n              <option *ngFor=\\\"let a of genre\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n          </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songgenre').dirty && addSongForm.get('songgenre').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songgenre').errors.required\\\">\\n              Please select song genre\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songprice').invalid && addSongForm.get('songprice').dirty}\\\">\\n      <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\">Rp</div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"songprice\\\" [formControl]=\\\"songprice\\\" placeholder=\\\"Song Price\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songprice').dirty && addSongForm.get('songprice').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songprice').errors.required\\\">\\n              Please enter price\\n          </span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songprice').errors.pattern\\\">\\n              Please enter a valid amount\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songprvw').invalid && addSongForm.get('songprvw').dirty}\\\">\\n      <label for=\\\"songprvw\\\" class=\\\"col-sm-2 control-label\\\">Song Preview<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" #inputprev type=\\\"file\\\" accept=\\\"audio/*,video/*\\\" (change)=\\\"prvwfileChangeEvent($event)\\\" name=\\\"songprvw\\\" id=\\\"songprvw\\\" placeholder=\\\"Song preview\\\">\\n          <span class=\\\"control-label\\\" style=\\\"text-align:bottom;font-size:10px;color:red;\\\">&nbsp;&nbsp;<u><b>( MAX {{ +this.maxfilesize?.value/1000000 }} MB )</b></u></span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songfile').invalid && addSongForm.get('songfile').dirty}\\\">\\n      <label for=\\\"songfile\\\" class=\\\"col-sm-2 control-label\\\">Song File<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" #inputsong type=\\\"file\\\" accept=\\\"audio/*,video/*\\\" (change)=\\\"songfileChangeEvent($event)\\\" name=\\\"songfile\\\" id=\\\"songfile\\\" placeholder=\\\"Song file\\\">\\n          <span class=\\\"control-label\\\" style=\\\"text-align:bottom;font-size:10px;color:red;\\\">&nbsp;&nbsp;<u><b>( MAX {{ +this.maxfilesize?.value/1000000 }} MB )</b></u></span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n      <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n      <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n   </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-sm-2 control-label\\\"></label>\\n      <div class=\\\"col-sm-5\\\" style=\\\"padding:0;margin:0;\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addSongForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n          <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n      </div>\\n      <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n          <sup>*</sup> required\\n      </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/addsong/addsong.component.html\n// module id = ./src/app/components/song/addsong/addsong.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\n\n@Component({\n  selector: 'app-addsong',\n  templateUrl: './addsong.component.html',\n  styleUrls: ['./addsong.component.css']\n})\nexport class AddsongComponent implements OnInit {\n  addSongForm: FormGroup;\n  userObj: any;\n  genre: IMsconfigGroupList[];\n  PrvwfilesToUpload: Array<File> = [];\n  SongfilesToUpload: Array<File> = [];\n  songid: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  loading = false;\n  progressvalue = 0;\n  @ViewChild('inputprev')inputpreVar: any;\n  @ViewChild('inputsong')inputsongVar: any;\n  @ViewChild('inputartist')artistVar: any;\n  @ViewChild('inputalbum')albumVar: any;\n  @ViewChild('inputgenre')genreVar: any;\n  prvwuploadpath: string;\n  songuploadpath: string;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n\n  artistid = new FormControl('', [Validators.required]);  \n  albumid = new FormControl('', [Validators.required]);  \n  songname = new FormControl('', [Validators.required]);\n  songlyric = new FormControl('', [Validators.required]);  \n  songgenre = new FormControl('', [Validators.required]);\n  songprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  songprvwpath: String;\n  songprvwname: String;\n  songfilepath: String;\n  songfilename: String;\n\n  ngOnInit() {\n    this.progressvalue = 0;\n    this.userObj =  this.authService.currentUser;\n    this.prvwuploadpath = this.globals.prvwuploadpath;\n    this.songuploadpath = this.globals.songuploadpath;\n    this.getMsconfigGroupList('GENRE');\n    this.getMsconfigVal('AVSIZE','FSIZE');\n    this.getArtistList(this.userObj.userid);\n    this.getAlbumList(this.userObj.userid);\n    this.songid = '';\n    this.addSongForm = this.fb.group({\n      artistid: this.artistid,\n      albumid: this.albumid,\n      songname: this.songname,\n      songlyric: this.songlyric,\n      songgenre: this.songgenre,\n      songprice: this.songprice,\n      songprvw: this.PrvwfilesToUpload,\n      songfile: this.SongfilesToUpload,\n      songprvwpath: this.songprvwpath,\n      songprvwname: this.songprvwname,\n      songfilepath: this.songfilepath,\n      songfilename: this.songfilename,\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.genre = data.data;\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.genre = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.maxfilesize = {code:'', value:'0'};\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.artistlist = [{_id:'', artistname:'Error artist list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getAlbumList(id){\n    this.albumService.getAlbumList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'Error album list'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.albumlist = [{_id:'', albumname:'Error album list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.albumlist = [{_id:'', albumname:'No album list available'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  addSong(formdata:any): void {\n    this.progressvalue = 0;\n    const prvwfiles: Array<File> = this.PrvwfilesToUpload;\n    const songfiles: Array<File> = this.SongfilesToUpload;\n    if (this.addSongForm.dirty && this.addSongForm.valid && prvwfiles[0] && songfiles[0]) {\n      this.progressvalue = 10;\n      //const prvwfiles: Array<File> = this.PrvwfilesToUpload;\n      let theForm = this.addSongForm.value;\n      this.progressvalue = 40;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ prvwfiles[0]['name']);\n      lformData.append('prvwfileinputsrc',prvwfiles[0],prvwfiles[0]['name']);\n      lformData.append('prvwuploadpath',this.prvwuploadpath);\n      lformData.append('songfileinputsrc',songfiles[0],songfiles[0]['name']);\n      lformData.append('songuploadpath',this.songuploadpath);\n      this.loading = true;\n      this.progressvalue = 70;\n      this.songService.uploadSongfiles(this.userObj.userid, lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 80;           \n              /* let sgformData: FormData = new FormData();\n              sgformData.append('fileinputsrc',songfiles[0],songfiles[0]['name']);\n              sgformData.append('uploadpath',this.songuploadpath);\n              sgformData.append('artistid',theForm.artistid);\n              sgformData.append('albumid',theForm.albumid);\n              sgformData.append('songname',theForm.songname);\n              sgformData.append('songlyric',theForm.songlyric);\n              sgformData.append('songgenre',theForm.songgenre);\n              sgformData.append('songprice',theForm.songprice);\n              sgformData.append('songprvwpath',data.filedata.filepath);\n              sgformData.append('songprvwname',data.filedata.filename);\n              sgformData.append('status','STSACT'); */\n              let payload:any = {};\n              payload.artistid = theForm.artistid;\n              payload.albumid = theForm.albumid;\n              payload.songname = theForm.songname;\n              payload.songlyric = theForm.songlyric;\n              payload.songgenre = theForm.songgenre;\n              payload.songprice = theForm.songprice;\n              payload.songprvwpath = data.preview.prvwfilepath;\n              payload.songprvwname = data.preview.prvwfilename;\n              payload.songfilepath = data.song.songfilepath;\n              payload.songfilename = data.song.songfilename;\n              payload.status = 'STSACT';\n              this.progressvalue = 90;    \n              this.songService.pubsaveSong(this.userObj.userid, payload)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.progressvalue = 0;\n                  this.toastr.error(data.message);\n                } else {\n                  this.loading = false;\n                  this.progressvalue = 100;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listsong']);\n                }\n                this.addSongForm.reset();\n                this.progressvalue = 0;\n                this.artistVar.nativeElement.selectedIndex = 0;\n                this.albumVar.nativeElement.selectedIndex = 0;\n                this.genreVar.nativeElement.selectedIndex = 0;\n                this.inputpreVar.nativeElement.value = \"\";\n                this.inputsongVar.nativeElement.value = \"\";\n              },\n              err => {\n                this.loading = false;\n                this.progressvalue = 0;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }   \n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n \n    } else {\n      this.toastr.error('Please provide BOTH Song Preview and Song File...');\n    }\n  }\n  /* addSong(formdata:any): void {\n    this.progressvalue = 0;\n    const prvwfiles: Array<File> = this.PrvwfilesToUpload;\n    const songfiles: Array<File> = this.SongfilesToUpload;\n    if (this.addSongForm.dirty && this.addSongForm.valid && prvwfiles[0] && songfiles[0]) {\n      this.progressvalue = 10;\n      //const prvwfiles: Array<File> = this.PrvwfilesToUpload;\n      let theForm = this.addSongForm.value;\n      this.progressvalue = 20;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ prvwfiles[0]['name']);\n      lformData.append('fileinputsrc',prvwfiles[0],prvwfiles[0]['name']);\n      lformData.append('uploadpath',this.prvwuploadpath);\n\n      this.loading = true;\n      this.progressvalue = 30;\n      this.ftService.uploadInputFile(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 40;\n              theForm.songprvwpath = data.filedata.filepath;\n              theForm.songprvwname = data.filedata.filename;\n              //const songfiles: Array<File> = this.SongfilesToUpload;\n              let lformData1: FormData = new FormData();\n              lformData1.append('fileinputsrc',songfiles[0],songfiles[0]['name']);\n              lformData1.append('uploadpath',this.songuploadpath);\n              //formdata.set is not supported in Safari and other browsers\n              //lformData.set('fileinputsrc',songfiles[0],songfiles[0]['name']);\n              //lformData.set('uploadpath',this.songuploadpath);\n              this.progressvalue = 50;\n              this.ftService.uploadInputFile(lformData1)\n              .subscribe(data => {\n                  if (data.success === false) {\n                    this.loading = false;\n                    this.progressvalue = 0;\n                    this.toastr.error(data.message);\n                  } else {\n                    this.progressvalue = 60;\n                    theForm.songfilepath = data.filedata.filepath;\n                    theForm.songfilename = data.filedata.filename;  \n                    theForm.status = 'STSACT';\n                    if (this.songid !== '') {\n                      theForm.songid = this.songid;\n                    }\n                    this.progressvalue = 80;\n                    this.songService.saveSong(this.userObj.userid, theForm.artistid, theForm.albumid, theForm)\n                    .subscribe(data => {\n                      if (data.success === false) {\n                        this.loading = false;\n                        this.progressvalue = 0;\n                        this.toastr.error(data.message);\n                      } else {\n                        this.loading = false;\n                        this.progressvalue = 100;\n                        this.toastr.success(data.message);\n                        //this.router.navigate(['listsong']);\n                      }\n                      this.addSongForm.reset();\n                      this.progressvalue = 0;\n                      this.artistVar.nativeElement.selectedIndex = 0;\n                      this.albumVar.nativeElement.selectedIndex = 0;\n                      this.genreVar.nativeElement.selectedIndex = 0;\n                      this.inputpreVar.nativeElement.value = \"\";\n                      this.inputsongVar.nativeElement.value = \"\";\n                    },\n                    err => {\n                      this.loading = false;\n                      this.progressvalue = 0;\n                      //console.log(err);\n                      this.toastr.error(err);\n                    });\n                  }      \n              },\n              err => {\n                this.loading = false;\n                this.progressvalue = 0;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n          }   \n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n \n    } else {\n      this.toastr.error('Please provide BOTH Song Preview and Song File...');\n    }\n  } */\n\n  prvwfileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"audio/\") || ~files[0].type.indexOf(\"video/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.PrvwfilesToUpload = <Array<File>>fileInput.target.files;\n      } else {\n        let mfsize = +this.maxfilesize.value/1000000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Mb');\n        this.inputpreVar.nativeElement.value = \"\";\n      }\n    } else  {\n      alert('Error file type. You must input audio/video file type.');\n      this.inputpreVar.nativeElement.value = \"\";\n    }    \n  }\n\n  songfileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"audio/\") || ~files[0].type.indexOf(\"video/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.SongfilesToUpload = <Array<File>>fileInput.target.files;\n      } else {\n        let mfsize = +this.maxfilesize.value/1000000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Mb');\n        this.inputsongVar.nativeElement.value = \"\";\n      }\n    } else  {\n      alert('Error file type. You must input audio/video file type.');\n      this.inputsongVar.nativeElement.value = \"\";\n    } \n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/addsong/addsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsong/editsong.component.css\n// module id = ./src/app/components/song/editsong/editsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Song</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"songForm\\\" (ngSubmit)=\\\"saveSong(songForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songname').invalid && songForm.get('songname').dirty}\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songname').dirty && songForm.get('songname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} song name</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('artistid').invalid && songForm.get('artistid').dirty}\\\">\\n            <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n                    <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('artistid').dirty && songForm.get('artistid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('artistid').errors.required\\\">\\n                    Please select artist\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('albumid').invalid && songForm.get('albumid').dirty}\\\">\\n            <label for=\\\"albumid\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n                    <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('albumid').dirty && songForm.get('albumid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('albumid').errors.required\\\">\\n                    Please select album song\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <textarea class=\\\"form-control\\\" [disabled]=\\\"this.loading == true\\\" id=\\\"songlyric\\\" rows=\\\"10\\\" [formControl]=\\\"songlyric\\\" placeholder=\\\"Song Lyric\\\"></textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songgenre').invalid && songForm.get('songgenre').dirty}\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Song Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                    <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songgenre').dirty && songForm.get('songgenre').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songgenre').errors.required\\\">\\n                    Please select song genre\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songprice').invalid && songForm.get('songprice').dirty}\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"songprice\\\" [formControl]=\\\"songprice\\\" placeholder=\\\"Enter price\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songprice').dirty && songForm.get('songprice').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songprice').errors.required\\\">\\n                    Please enter price\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songprice').errors.pattern\\\">\\n                    Please enter a valid amount\\n                </span>\\n            </div>\\n        </div>\\n<!--         <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songpublish').invalid && songForm.get('songpublish').dirty}\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Song Published?</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ this.songpublish }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n              <div class=\\\"form-ele\\\">{{ this.songbuy }}</div>\\n            </div>\\n        </div>\\n -->\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('status').invalid && songForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('status').dirty && songForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('status').errors.required\\\">\\n                    Please select song status\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"songForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsong/editsong.component.html\n// module id = ./src/app/components/song/editsong/editsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editsong',\n  templateUrl: './editsong.component.html',\n  styleUrls: ['./editsong.component.css']\n})\nexport class EditsongComponent implements OnInit {\n  songForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  songid: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  partistid: String;\n  btnLbl: String;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  artistid = new FormControl('', [Validators.required]);  \n  albumid = new FormControl('', [Validators.required]);  \n  songname = new FormControl('', [Validators.required]);\n  songlyric = new FormControl('', [Validators.required]);  \n  songgenre = new FormControl('', [Validators.required]);\n  songprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  status = new FormControl('', [Validators.required]);\n  songpublish : String;\n  songbuy : Number;\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.songid = params['id'];\n      this.btnLbl = \"Update\"\n    });\n    this.getSelectedSong(this.songid);\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.userObj =  this.authService.currentUser;\n    this.getArtistList(this.userObj.userid);\n\n    this.songForm = this.fb.group({\n      artistid: this.artistid,\n      albumid: this.albumid,\n      songname: this.songname,\n      songlyric: this.songlyric,\n      songgenre: this.songgenre,\n      songprice: this.songprice,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,         \n      status: this.status\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Empty list'}];\n          this.genre = [{code:'', value:'Empty list'}];\n        }\n      } else {\n        this.sts = [{code:'', value:'Error ms config list'}];\n        this.genre = [{code:'', value:'Error ms config list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Empty artist list'}];\n        }\n      } else {\n        this.artistlist = [{_id:'', artistname:'Error artist list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.artistlist = [{_id:'', artistname:'Error artist list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        //console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      } else {\n        this.albumlist = [{_id:'', albumname:'Error album list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.albumlist = [{_id:'', albumname:'Error album list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getAlbumListbyArtist2(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        //console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          this.songForm.patchValue({\n            albumid: this.albumlist[0]._id\n          });\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      } else {\n        this.albumlist = [{_id:'', albumname:'Error album list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.albumlist = [{_id:'', albumname:'Error album list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getSelectedSong(id){\n    this.songService.getSong(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.partistid = data.data[0].artistid;\n          this.getAlbumListbyArtist(this.userObj.userid, this.partistid)\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Empty song result');\n          this.router.navigate(['listsong']);\n        }\n      } else {\n        this.toastr.error('Song id is incorrect in the URL');\n        this.router.navigate(['listsong']);\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n      this.router.navigate(['listsong']);\n    });\n  }\n\n  populateForm(data): void {\n    this.songpublish = data.songpublish;\n    this.songbuy = data.songbuy;    \n    this.songForm.patchValue({\n      artistid: data.artistid,\n      albumid: data.albumid,\n      songname: data.songname,\n      songlyric: data.songlyric,\n      songgenre: data.songgenre,\n      songprice: data.songprice,\n      songpublish: data.songpublish,\n      songbuy: data.songbuy,         \n      status: data.status\n    });\n  }\n  \n  saveSong(formdata:any): void {\n    if (this.songForm.valid) {\n      const theForm:any = this.songForm.value;\n      if (this.songid !== '') {\n        theForm.songid = this.songid;\n      \n      }\n      this.loading = true;\n      this.songService.pubeditSong(this.userObj.userid, theForm)\n        .subscribe(data => {\n          this.loading = false;\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.songid) {\n            this.songForm.reset();\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n/*   saveSong(formdata:any): void {\n    if (this.songForm.valid) {\n      const theForm:any = this.songForm.value;\n      if (this.songid !== '') {\n        theForm.songid = this.songid;\n      \n      }\n      this.loading = true;\n      this.songService.saveSong(this.userObj.userid,theForm.artistid, theForm.albumid,theForm)\n        .subscribe(data => {\n          this.loading = false;\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.songid) {\n            this.songForm.reset();\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  } */\n\n  onBack(): void {\n    this.router.navigate(['/listsong'], { preserveQueryParams: true });\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.albumlist.length = 0;\n    this.getAlbumListbyArtist2(this.userObj.userid,res[1]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/editsong/editsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsongfiles/editsongfiles.component.css\n// module id = ./src/app/components/song/editsongfiles/editsongfiles.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Change Song Files</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"songForm\\\" (ngSubmit)=\\\"updateSong(songForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"songprvw\\\" class=\\\"col-sm-2 control-label\\\">Song Preview</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" accept=\\\"audio/*,video/*\\\" (change)=\\\"PrvwfileChangeEvent($event)\\\" name=\\\"songprvw\\\" id=\\\"songprvw\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newprvwfile }}\\\">  \\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <label class=\\\"col-sm-10\\\" style=\\\"margin:0;padding:0;color:red;\\\"><sup>* <u><b>FILE SIZE (MAX {{ +this.maxfilesize?.value/1000000 }} MB)</b></u></sup></label>    \\n      </div>\\n      <br>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"songfile\\\" class=\\\"col-sm-2 control-label\\\">Song File</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" accept=\\\"audio/*,video/*\\\" (change)=\\\"SongfileChangeEvent($event)\\\" name=\\\"songfile\\\" id=\\\"songfile\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newsongfile }}\\\">  \\n            </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <label class=\\\"col-sm-10\\\" style=\\\"margin:0;padding:0;color:red;\\\"><sup>* <u><b>FILE SIZE (MAX {{ +this.maxfilesize?.value/1000000 }} MB)</b></u></sup></label>    \\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n        <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n        <sup *ngIf=\\\"progressvalue > 0\\\">{{ this.progressvalue }} %</sup>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\">     </label>\\n          <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <br>\\n              <button type=\\\"button\\\" [disabled]=\\\"this.loading == true\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsongfiles/editsongfiles.component.html\n// module id = ./src/app/components/song/editsongfiles/editsongfiles.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ISong } from '../../../interface/song';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editsongfiles',\n  templateUrl: './editsongfiles.component.html',\n  styleUrls: ['./editsongfiles.component.css']\n})\nexport class EditsongfilesComponent implements OnInit {\n  songForm: FormGroup\n  userObj: any;\n  song: ISong;\n  songid: String;\n  PrvwfilesToUpload: Array<File> = [];\n  SongfilesToUpload: Array<File> = [];\n  loading = false;\n  prvwuploadpath: string;\n  songuploadpath: string;\n  progressvalue = 0;\n  maxfilesize: IMsconfigGroupList;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private ftService:FiletransferService,\n    private globals: Globals,\n    private msconfigService: MsconfigService,\n  ) { }\n\n  songprvwpath = new FormControl('', [Validators.nullValidator]);\n  songprvwname = new FormControl('', [Validators.nullValidator]);\n  songfilepath = new FormControl('', [Validators.nullValidator]);\n  songfilename = new FormControl('', [Validators.nullValidator]);\n  newprvwfile: String;\n  newsongfile: String;\n  deletedPrvwFile: String;\n  deletedSongFile: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.prvwuploadpath = this.globals.prvwuploadpath;\n    this.songuploadpath = this.globals.songuploadpath;\n    this.progressvalue = 0;\n    this.getMsconfigVal('AVSIZE','FSIZE');\n    this.songForm = this.fb.group({\n      songprvwpath: this.songprvwpath,\n      songprvwname: this.songprvwname,\n      songfilepath: this.songfilepath,\n      songfilename: this.songfilename,\n    });\n    this.route.params.subscribe((params: any) => {\n      this.songid = params['id'];\n      this.getSong(this.songid);\n    });\n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.maxfilesize = data.data[0];\n        } else {\n          this.maxfilesize = {code:'', value:'0'};\n        }\n      } else {\n        this.maxfilesize = {code:'', value:'0'};\n      }\n    },\n    err => {\n      this.loading = false;\n      this.maxfilesize = {code:'', value:'0'};\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getSong(id){\n    this.songService.getSong(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.song = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Empty Song result...');\n          this.router.navigate(['listsong']);\n        }\n      } else {\n        this.toastr.error('Song id is incorrect in the URL...');\n        this.router.navigate(['listsong']);\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n      this.router.navigate(['listsong']);\n    });\n  }\n  populateForm(data): void {\n    this.deletedPrvwFile = this.song.songprvwname;\n    this.deletedSongFile = this.song.songfilename;\n    this.songForm.patchValue({\n      songprvwpath: data.songprvwpath,\n      songprvwname: data.songprvwname,\n      songfilepath: data.songfilepath,\n      songfilename: data.songfilename\n    });\n  }\n\n  PrvwfileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"audio/\") || ~files[0].type.indexOf(\"video/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.PrvwfilesToUpload = <Array<File>>fileInput.target.files;\n        this.newprvwfile = this.PrvwfilesToUpload[0]['name'];\n        this.progressvalue = 0;\n        this.uploadNewPreview(this.PrvwfilesToUpload);  \n      } else {\n        let mfsize = +this.maxfilesize.value/1000000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Mb');\n      }\n    } else  {\n      alert('Error file type. You must input audio/video file type.');\n    }    \n  }\n\n  SongfileChangeEvent(fileInput:any): void {\n    const files: Array<File> = <Array<File>>fileInput.target.files;\n    //console.log('content file: ' + this.filesToUpload);\n    //alert('File size: ' + files[0].size + '. File type: '+ files[0].type + '. Max size: ' + this.maxfilesize.value);\n    if (~files[0].type.indexOf(\"audio/\") || ~files[0].type.indexOf(\"video/\")) {\n      if (files[0].size <= +this.maxfilesize.value) {\n        this.SongfilesToUpload = <Array<File>>fileInput.target.files;\n        this.newsongfile = this.SongfilesToUpload[0]['name'];\n        this.progressvalue = 0;\n        this.uploadNewSong(this.SongfilesToUpload);  \n      } else {\n        let mfsize = +this.maxfilesize.value/1000000 ;\n        alert('Error file size. File size is maximum ' + mfsize + ' Mb');\n      }\n    } else  {\n      alert('Error file type. You must input audio/video file type.');\n    }    \n  }\n  \n  uploadNewPreview(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    //lformData.append('songprvw',files[0],files[0]['name']);\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.prvwuploadpath);\n    this.loading = true;\n    this.progressvalue = 40;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        //let payloadData: any = this.songForm.value;\n        this.progressvalue = 60;\n        let payloadData: any = {};\n        payloadData.songprvwpath = data.filedata.filepath;\n        payloadData.songprvwname = data.filedata.filename;\n        payloadData.oldsongprvwname = this.songForm.value.songprvwname;\n        payloadData.uploadpath = this.prvwuploadpath;\n        payloadData.labelid = this.userObj.userid;\n        this.progressvalue = 80;\n        this.progressvalue = 90;\n          \n        this.songService.pubupdateSongPreview(this.songid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 100;\n            this.loading = false;\n            console.log('Success update song preview.');\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n        //this.songForm.value.songprvwpath = data.filedata.filepath;\n        //this.songForm.value.songprvwname = data.filedata.filename;\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  }\n/*   uploadNewPreview(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    //lformData.append('songprvw',files[0],files[0]['name']);\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.prvwuploadpath);\n    this.loading = true;\n    this.progressvalue = 40;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        //let payloadData: any = this.songForm.value;\n        this.progressvalue = 60;\n        let payloadData: any = {};\n        payloadData.uploadpath = this.prvwuploadpath;\n        payloadData.filename = this.songForm.value.songprvwname;\n        this.progressvalue = 80;\n        this.ftService.deleteInputFile(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error deleted ' + data.message);\n            } else {\n              if (payloadData) {\n                console.log('File deleted - ' + payloadData.filename);\n              }\n            }   \n          },\n          err => {\n            console.log('Error deleted ' + err);\n          });\n        this.progressvalue = 90;\n        this.songForm.value.songprvwpath = data.filedata.filepath;\n        this.songForm.value.songprvwname = data.filedata.filename;\n          \n        this.songService.updateSongPreview(this.songid, this.songForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 100;\n            this.loading = false;\n            console.log('Success update song preview.');\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  } */\n  \n  uploadNewSong(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    //lformData.append('songfile',files[0],files[0]['name']);\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.songuploadpath);\n    this.loading = true;\n    this.progressvalue = 40;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        //let payloadData: any = this.songForm.value;\n        this.progressvalue = 60;\n        let payloadData: any = {};\n        payloadData.songfilepath = data.filedata.filepath;\n        payloadData.songfilename = data.filedata.filename;\n        payloadData.oldsongfilename = this.songForm.value.songfilename;\n        payloadData.uploadpath = this.songuploadpath;\n        payloadData.labelid = this.userObj.userid;\n        this.progressvalue = 80;\n        this.progressvalue = 90;   \n        this.songService.pubupdateSongFile(this.songid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 100;\n            this.loading = false;\n            console.log('Success update song file.');\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n        //this.songForm.value.songfilepath = data.filedata.filepath;\n        //this.songForm.value.songfilename = data.filedata.filename;\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  }\n/*   uploadNewSong(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    this.progressvalue = 10;\n    //lformData.append('songfile',files[0],files[0]['name']);\n    lformData.append('fileinputsrc',files[0],files[0]['name']);\n    lformData.append('uploadpath',this.songuploadpath);\n    this.loading = true;\n    this.progressvalue = 40;\n    this.ftService.uploadInputFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.progressvalue = 0;\n        this.toastr.error(data.message);\n      } else {\n        //let payloadData: any = this.songForm.value;\n        this.progressvalue = 60;\n        let payloadData: any = {};\n        payloadData.uploadpath = this.songuploadpath;\n        payloadData.filename = this.songForm.value.songfilename;\n        this.progressvalue = 80;\n        this.ftService.deleteInputFile(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.filename);\n            }   \n          },\n          err => {\n            console.log('Error deleted ' + err);\n          });\n        this.progressvalue = 90;   \n        this.songForm.value.songfilepath = data.filedata.filepath;\n        this.songForm.value.songfilename = data.filedata.filename;\n\n        this.songService.updateSongFile(this.songid, this.songForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.progressvalue = 0;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 100;\n            this.loading = false;\n            console.log('Success update song file.');\n            this.toastr.success(data.message);\n            this.progressvalue = 0;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.progressvalue = 0;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      this.progressvalue = 0;\n      //console.log(err);\n      this.toastr.error(err);\n    });    \n  } */\n  onBack(): void {\n    this.router.navigate(['/listsong'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/editsongfiles/editsongfiles.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/listsong/listsong.component.css\n// module id = ./src/app/components/song/listsong/listsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>List Song</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"row rowmarginsearch\\\">\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label for=\\\"artistid\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                <div class=\\\"col-sm-10\\\">\\n                <!-- <div class=\\\"input-group col-sm-10\\\"> -->\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n                        <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                        <option value=\\\"\\\">Select the artist</option>\\n                        <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label for=\\\"albumid\\\" class=\\\"col-sm-2 paddingsearch\\\">Album</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n                        <option value=\\\"\\\">Select the album</option>\\n                        <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n\\n\\n          </div>\\n\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"songname\\\" class=\\\"col-sm-2 paddingsearch\\\">Title</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"albumyear\\\" class=\\\"col-sm-2 paddingsearch\\\">Year</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n                  </div>\\n              </div>\\n          </div>\\n          <div class=\\\"row rowmarginsearch\\\">\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"songgenre\\\" class=\\\"col-sm-2 paddingsearch\\\">Genre</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                            <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                        </select>\\n                    </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"songpublish\\\" class=\\\"col-sm-2 paddingsearch\\\">Publish?</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songpublish\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                        <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>  \\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">  \\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"songbuy\\\" class=\\\"col-sm-2 paddingsearch\\\">Buy?</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songbuy\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                        <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n                </div>  \\n              </div>\\n            <div class=\\\"row rowmarginsearch\\\">  \\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label class=\\\"col-sm-2 paddingsearch\\\"></label>\\n                  <div class=\\\"col-sm-10\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                  </div>\\n                </div>                  \\n          </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songs && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No song found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems like you havn't entered any songs for the selected criteria. Please add the song <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddSongs()\\\">here</a>.\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"songs && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-hover\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Title</a></th>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\">Artist</th>\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\">Album</th>\\n                          <!-- <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('albumyear')\\\">Year</a></th> -->\\n                          <th width=\\\"9%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songgenre')\\\">Genre</a></th>\\n                          <th width=\\\"10%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th width=\\\"20%\\\" scope=\\\"col\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let song of songs; let songIndex = index'>\\n                          <td scope=\\\"row\\\" data-label=\\\"Song Title\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showSong(song._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ song.songname}}</a></td>\\n                          <td data-label=\\\"Artist\\\">{{ song.artist }}</td>\\n                          <td data-label=\\\"Album\\\">{{ song.album }}</td>\\n                          <!-- <td>{{ song.albumyear}}</td> -->\\n                          <td data-label=\\\"Genre\\\">{{ song.genrevalue}}</td>\\n                          <td data-label=\\\"Price\\\" class=\\\"text-right\\\">{{ song.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td data-label=\\\"Action\\\">\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editSongFiles(song._id, song.songpublish, song.songbuy)\\\">\\n                                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Song File\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editSong(song._id, song.songpublish, song.songbuy)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Song Data\\\">\\n                                  <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(songIndex, song._id, song.songpublish, song.songbuy, song.songname, song.songprvwname, song.songfilename)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Song\\\">\\n                                  <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                          </td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div> \\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div> \\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/listsong/listsong.component.html\n// module id = ./src/app/components/song/listsong/listsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { IAggSong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { FiletransferService } from '../../../services/filetransfer.service';\nimport { Globals } from '../../../app.global';\n\n@Component({\n  selector: 'app-listsong',\n  templateUrl: './listsong.component.html',\n  styleUrls: ['./listsong.component.css']\n})\nexport class ListsongComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  songs: IAggSong[];\n  totalrows: number;\n  pgCounter: number;\n  qsongname: String;\n  qartistid: String;\n  qalbumid: String;\n  qalbumyear: String;\n  qsonggenre: String;\n  qsongpublish: String;\n  qsongbuy: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  ynlist: IMsconfigGroupList[];\n\n  currsongpublish: String;\n  currsongbuy: Number;\n  loading = false;\n  prvwuploadpath: string;\n  songuploadpath: string;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private ftService:FiletransferService,\n    private globals: Globals\n  ) { }\n\n  songname = new FormControl('',[Validators.nullValidator]);\n  artistid = new FormControl('',[Validators.nullValidator]);\n  albumid = new FormControl('',[Validators.nullValidator]);  \n  albumyear = new FormControl('',[Validators.nullValidator]);\n  songgenre = new FormControl('',[Validators.nullValidator]);\n  songpublish = new FormControl('',[Validators.nullValidator]);\n  songbuy = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.prvwuploadpath = this.globals.prvwuploadpath;\n    this.songuploadpath = this.globals.songuploadpath;\n    this.reportForm = this.fb.group({\n      songname: this.songname,\n      artistid: this.artistid,\n      albumid: this.albumid,\n      albumyear: this.albumyear,\n      songgenre: this.songgenre,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getMsconfigGroupList('YRN');\n    this.getArtistList(this.userObj.userid);\n    this.getAlbumList(this.userObj.userid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qsongname = params['songname'] || '';\n      this.qartistid = params['artistid'] || '';\n      this.qalbumid = params['albumid'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qsonggenre = params['songgenre'] || '';\n      this.qsongpublish = params['songpublish'] || '';\n      this.qsongbuy = params['songbuy'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistid = this.qartistid;\n      payload.albumid = this.qalbumid;\n      payload.songname = this.qsongname;\n      payload.albumyear = this.qalbumyear;\n      payload.songgenre = this.qsonggenre;\n      payload.songpublish = this.qsongpublish;\n      payload.songbuy = this.qsongbuy;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n\n      this.reportForm.patchValue({\n        songname: this.qsongname,\n        artistid: this.qartistid,\n        albumid: this.qalbumid,\n        albumyear: this.qalbumyear,\n        songgenre: this.qsonggenre,\n        songpublish: this.qsongpublish,\n        songbuy: this.qsongbuy,\n        status: this.qstatus\n      });\n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n          if (groupid == 'YRN') {\n            this.ynlist = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Empty list...'}];\n          this.genre = [{code:'', value:'Empty list...'}];\n          this.ynlist = [{code:'', value:'Empty list...'}];\n        }\n      } else {\n        this.sts = [{code:'', value:'Error ms config list'}];\n        this.ynlist = [{code:'', value:'Error ms config list'}];\n        this.genre = [{code:'', value:'Error ms config list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.ynlist = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Empty list...'}];\n        }\n      } else {\n        this.artistlist = [{_id:'', artistname:'Error artist list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.artistlist = [{_id:'', artistname:'Error artist list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getAlbumList(id){\n    this.albumService.getAlbumList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'Empty list...'}];\n        }\n      } else {\n        this.albumlist = [{_id:'', albumname:'Error album list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.albumlist = [{_id:'', albumname:'Error album list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        //console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      } else {\n        this.albumlist = [{_id:'', albumname:'Error album list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.albumlist = [{_id:'', albumname:'Error album list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['listsong'],\n        {\n          queryParams: {\n            songname: this.reportForm.value.songname,\n            artistid: this.reportForm.value.artistid,\n            albumid: this.reportForm.value.albumid,\n            albumyear: this.reportForm.value.albumyear,\n            songgenre: this.reportForm.value.songgenre,\n            songpublish: this.reportForm.value.songpublish,\n            songbuy: this.reportForm.value.songbuy,\n            status: this.reportForm.value.status,\n            page: 1, \n            sortby: null }\n        }\n      );\n\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.songService.getAggSongs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n\n        this.qsongname = formval.songname;\n        this.qartistid = formval.artistid;\n        this.qalbumid = formval.albumid;\n        this.qalbumyear = formval.albumyear;\n        this.qsonggenre = formval.songgenre;\n        this.qsongpublish = formval.songpublish;\n        this.qsongbuy = formval.songbuy;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Songs Result';\n        if (this.qartistid) {\n          this.getAlbumListbyArtist(this.userObj.userid, this.qartistid);\n        } else {\n          this.getAlbumList(this.userObj.userid);\n        }\n        \n        this.reportForm.patchValue({\n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listsong'],\n      {\n        queryParams: {\n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listsong'],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    if (res[1]) {\n      this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n    } else {\n      this.getAlbumList(this.userObj.userid);\n    }   \n  }\n\n  editSongFiles(songid, songpublish, songbuy): void {\n    if (songpublish == 'Y') {\n      this.toastr.warning(\"This song files has been published. The file can not be edited\");\n    } else {\n      //this.toastr.warning(\"This song id: \" + songid);      \n      this.router.navigate([`editsongfiles/${songid}`],\n        {\n          queryParams: { \n            songname: this.qsongname,\n            artistid: this.qartistid,\n            albumid: this.qalbumid,\n            albumyear: this.qalbumyear,\n            songgenre: this.qsonggenre,\n            songpublish: this.qsongpublish,\n            songbuy: this.qsongbuy,\n            status: this.qstatus,\n            page: this.qpage || 1, \n            sortby: this.qsort }\n        }\n      );\n    }\n\n  }\n\n  showSong(songid): void {\n    this.router.navigate([`viewsong/${songid}`],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  editSong(songid, songpublish, songbuy): void {\n\n    //if (songbuy > 0) {\n    if (songpublish == 'Y') {\n      this.toastr.warning(\"This song has been published. Data can not be edited\");\n    } else {\n      this.router.navigate([`editsong/${songid}`],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n        }\n      );\n    }\n  }\n  \n  confirmDel(idx: number, songid: string, songpublish, songbuy, songname, songprvwname, songfilename) {\n    \n    //if (songbuy > 0) {\n    if (songpublish == 'Y') {\n      this.toastr.warning(\"This song has been published. Data can not be deleted\");\n    } else {\n      if(confirm('Do you really want to delete this song: ' + songname + ' record?')){\n        this.loading = true;\n        let payloadData: any = {};\n        payloadData.labelid = this.userObj.userid;\n        payloadData.songprvwname = songprvwname;\n        payloadData.songfilename = songfilename;  \n        payloadData.prvwuploadpath = this.prvwuploadpath; \n        payloadData.songuploadpath = this.songuploadpath;  \n        this.songService.pubdeleteSong(songid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.songs.splice(idx, 1);\n            this.totalrows = this.totalrows - 1;\n            this.toastr.success(data.message);\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }\n    }\n  }\n/*   confirmDel(idx: number, songid: string, songpublish, songbuy, songname, songprvwname, songfilename) {\n    \n    //if (songbuy > 0) {\n    if (songpublish == 'Y') {\n      this.toastr.warning(\"This song has been published. Data can not be deleted\");\n    } else {\n      if(confirm('Do you really want to delete this song: ' + songname + ' record?')){\n        this.loading = true;\n        let payload: any = {};\n        payload.uploadpath = this.prvwuploadpath;\n        payload.filename = songprvwname;\n        //payload.songprvwname = songprvwname;\n        this.ftService.deleteInputFile(payload)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error delete preview' + data.message);\n            } else {\n              console.log('Success delete preview...');\n            }   \n          },\n          err => {\n            console.log('Error delete preview' + err);\n          });\n        let payloadData: any = {};\n        //payloadData.songfilename = songfilename;\n        payloadData.uploadpath = this.songuploadpath;\n        payloadData.filename = songfilename;\n        this.ftService.deleteInputFile(payloadData)\n        .subscribe(data => {\n            if (data.success === false) {\n              console.log('Error delete songfile' + data.message);\n            } else {\n              console.log('Success delete SongFile... ');\n            }   \n          },\n          err => {\n            console.log('Error delete songfile' + err);\n          });\n        this.songService.deleteSong(songid)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.songs.splice(idx, 1);\n            this.totalrows = this.totalrows - 1;\n            this.toastr.success(data.message);\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }\n    }\n  } */\n\n  toaddSongs(): void {\n    this.router.navigate(['/addsong']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/listsong/listsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/viewsong/viewsong.component.css\n// module id = ./src/app/components/song/viewsong/viewsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Song Details</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Title</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ song?.songname }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songname }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artist\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.artist }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.artist }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"album\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.album }} \\n<!--               <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.album }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            \\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songlyric }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songlyric }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list\\\"></i></div> -->\\n              <select disabled class=\\\"form-control selectfontsize\\\" [formControl]=\\\"songgenre\\\">\\n                  <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songgenre }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songprice | currency: 'IDR':'symbol-narrow' }}\\n                <!-- <div class=\\\"input-group-addon\\\">Rp</div> -->\\n                <!-- <div class=\\\"form-ele\\\">{{ song?.songprice | currency: 'IDR':true }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprvwpath\\\" class=\\\"col-sm-2 control-label\\\">Preview</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"border:1px\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n              <a href=\\\"{{ song?.songprvwpath }}\\\" style=\\\"cursor:pointer;padding-right:5px;float:center;color:#C92020\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Preview\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songprvwpath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songfilepath\\\" class=\\\"col-sm-2 control-label\\\">File</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"border:1px\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n                <a href=\\\"{{ song?.songfilepath }}\\\" style=\\\"cursor:pointer;float:center;color:#11DFDF\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Song\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a>\\n                <!-- <div class=\\\"form-ele\\\">{{ song?.songfilepath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Publish?</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songpublish }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songpublish }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songbuy }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songbuy }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list\\\"></i></div> -->\\n              <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.status }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/viewsong/viewsong.component.html\n// module id = ./src/app/components/song/viewsong/viewsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IAggSong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewsong',\n  templateUrl: './viewsong.component.html',\n  styleUrls: ['./viewsong.component.css']\n})\nexport class ViewsongComponent implements OnInit {\n  userObj: any;\n  song: IAggSong;\n  genre: IMsconfigGroupList[];\n  sts: IMsconfigGroupList[];\n  songForm: FormGroup;\n\n  private sub: Subscription;\n\n  constructor(    \n    private fb: FormBuilder,\n    private authService: AuthService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,    \n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  songgenre = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let songid = params['id'];\n        this.getMsconfigGroupList('CSTATUS');\n        this.getMsconfigGroupList('GENRE');\n        this.getSong(songid);\n      });\n    this.songForm = this.fb.group({\n      songgenre: this.songgenre,\n      status: this.status\n    });  \n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Empty list...'}];\n          this.genre = [{code:'', value:'Empty list...'}];\n        }\n      } else {\n        this.sts = [{code:'', value:'Error ms config list'}];\n        this.genre = [{code:'', value:'Error ms config list'}];\n      }\n    },\n    err => {\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getSong(id){\n    this.songService.getSongAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.song = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  populateForm(data): void {\n    this.songForm.patchValue({\n      songgenre: data.songgenre,\n      status: data.status\n    });\n  }\n\n  onBack(): void {\n    if (this.userObj.usertype === 'ADM') {\n      this.router.navigate(['/songmanagement'], { preserveQueryParams: true });\n    } else if (this.userObj.usertype === 'LBL') {\n      this.router.navigate(['/listsong'], { preserveQueryParams: true });\n    }  else {\n      this.authService.logout();\n      this.router.navigate(['login']);\n      this.toastr.error('Incorrect param in the URL');\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/viewsong/viewsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songmgt/songmgt.component.css\n// module id = ./src/app/components/songmgt/songmgt.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Publish Song</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"row rowmarginsearch\\\">\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label for=\\\"labelid\\\" class=\\\"col-sm-2 paddingsearch\\\">Label</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                        <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                        <option value=\\\"\\\">Select the label</option>\\n                        <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n            <div class=\\\"col-sm-6 col-md-6\\\">\\n              <label for=\\\"songname\\\" class=\\\"col-sm-2 paddingsearch\\\">Title</label>\\n              <div class=\\\"col-sm-10\\\">\\n                  <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n              </div>\\n            </div>            \\n        </div>\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label for=\\\"albumname\\\" class=\\\"col-sm-2 paddingsearch\\\">Album</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n                </div>\\n              </div>\\n          </div>\\n          <div class=\\\"row rowmarginsearch\\\">    \\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"albumyear\\\" class=\\\"col-sm-2 paddingsearch\\\">Year</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Year\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"songgenre\\\" class=\\\"col-sm-2 paddingsearch\\\">Genre</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                        <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>\\n           </div>\\n          <div class=\\\"row rowmarginsearch\\\">        \\n<!--               <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"songbuy\\\" class=\\\"col-sm-2 paddingsearch\\\">Buy?</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songbuy\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                        <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>   -->\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                          <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                          <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                        <label for=\\\"submit\\\" class=\\\"col-sm-2 paddingsearch\\\">     </label>\\n                        <div class=\\\"col-sm-5\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                        </div>\\n                </div>                  \\n            </div>\\n      </form>\\n    </div>\\n  </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songs && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No song found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            There is NO any songs found for the selected criteria.\\n        </div>\\n    </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"songs && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-hover\\\">\\n                  <thead>\\n                      <tr>\\n                          <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Title</a></th>\\n                          <th scope=\\\"col\\\" width=\\\"15%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('label')\\\">Label</a></th>\\n                          <th scope=\\\"col\\\" width=\\\"20%\\\">Artist</th>\\n                          <th scope=\\\"col\\\" width=\\\"20%\\\">Album</th>\\n                          <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songpublish')\\\">Publish?</a></th>\\n                          <th scope=\\\"col\\\" width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                          <th scope=\\\"col\\\" width=\\\"5%\\\">Preview</th>\\n                          <th scope=\\\"col\\\" width=\\\"5%\\\">Song</th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th scope=\\\"col\\\" width=\\\"5%\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let song of songs; let songIndex = index'>\\n                          <td scope=\\\"row\\\" data-label=\\\"Song Title\\\"><a style=\\\"font-size:12px;cursor:pointer\\\" (click)=\\\"showSong(song._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ song.songname}}</a></td>\\n                          <td data-label=\\\"Label\\\">{{ song.label }}</td>\\n                          <td data-label=\\\"Artist\\\">{{ song.artist }}</td>\\n                          <td data-label=\\\"Album\\\">{{ song.album }}</td>\\n                          <td data-label=\\\"Publish\\\">{{ song.songpublish }}</td>\\n                          <td class=\\\"text-right\\\" data-label=\\\"Song Price\\\">{{ song.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                          <td data-label=\\\"Song Preview\\\"><a href=\\\"{{ song.songprvwpath }}\\\" style=\\\"cursor:pointer;float:center;color:#C92020\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Preview\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a></td>\\n                          <td data-label=\\\"Song File\\\"><a href=\\\"{{ song.songfilepath }}\\\" style=\\\"cursor:pointer;float:center;color:#19663B\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Song\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a></td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td data-label=\\\"Action\\\">\\n                               <a alt=\\\"Publish\\\" style=\\\"cursor:pointer;float:center;color:#11DFDF\\\" (click)=\\\"publishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Publish\\\"><i class=\\\"fa fa-cloud-upload fa-2x\\\"></i></a>\\n                               <!-- <a alt=\\\"Unpublish\\\" style=\\\"cursor:pointer;float:center;color:grey\\\" (click)=\\\"unpublishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Unpublish\\\"><i class=\\\"fa fa-cloud-download fa-2x\\\"></i></a> -->\\n<!--                               <button type=\\\"button\\\" class=\\\"btn-xs btn-success\\\" aria-label=\\\"Publish\\\" (click)=\\\"publishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Publish Song\\\">\\n                                  <span class=\\\"glyphicon glyphicon-ok\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"UnPublish\\\" (click)=\\\"unpublishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Cancel Publish Song\\\">\\n                                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button> -->\\n                          </td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div> \\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div> \\n      </div>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songmgt/songmgt.component.html\n// module id = ./src/app/components/songmgt/songmgt.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { SongadminService } from '../../services/admin/songadmin.service';\nimport { IAggSong } from '../../interface/song';\nimport { IUserList } from '../../interface/user';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\n\n\n@Component({\n  selector: 'app-songmgt',\n  templateUrl: './songmgt.component.html',\n  styleUrls: ['./songmgt.component.css']\n})\nexport class SongmgtComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  userlist: IUserList[];\n  songs: IAggSong[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qsongname: String;\n  qartistname: String;\n  qalbumname: String;\n  qalbumyear: String;\n  qsonggenre: String;\n  //qsongbuy: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  ynlist: IMsconfigGroupList[];\n\n  currsongpublish: String;\n  //currsongbuy: Number;\n  loading = false;\n\n  constructor(    \n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private songadminService: SongadminService,\n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n\n  songname = new FormControl('',[Validators.nullValidator]);\n  labelid = new FormControl('',[Validators.nullValidator]);\n  artistname = new FormControl('',[Validators.nullValidator]);\n  albumname = new FormControl('',[Validators.nullValidator]);  \n  albumyear = new FormControl('',[Validators.nullValidator]);\n  songgenre = new FormControl('',[Validators.nullValidator]);\n  //songbuy = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      labelid: this.labelid,\n      songname: this.songname,\n      artistname: this.artistname,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      songgenre: this.songgenre,\n      //songbuy: this.songbuy,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getMsconfigGroupList('YRN');\n    this.getLabels();\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qsongname = params['songname'] || '';\n      this.qartistname = params['artistname'] || '';\n      this.qalbumname = params['albumname'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qsonggenre = params['songgenre'] || '';\n      //this.qsongbuy = params['songbuy'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.labelid = this.qlabelid;\n      payload.artistname = this.qartistname;\n      payload.albumname = this.qalbumname;\n      payload.songname = this.qsongname;\n      payload.albumyear = this.qalbumyear;\n      payload.songgenre = this.qsonggenre;\n      //payload.songbuy = this.qsongbuy;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(payload);\n\n      this.reportForm.patchValue({\n        labelid: this.qlabelid,\n        songname: this.qsongname,\n        artistname: this.qartistname,\n        albumname: this.qalbumname,\n        albumyear: this.qalbumyear,\n        songgenre: this.qsonggenre,\n        //songbuy: this.qsongbuy,\n        status: this.qstatus\n      });\n    })\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n          if (groupid == 'YRN') {\n            this.ynlist = data.data;\n          }\n        } else {\n          if (groupid == 'CSTATUS') this.sts = [{code:'', value:'Empty list...'}];\n          if (groupid == 'GENRE') this.genre = [{code:'', value:'Empty list...'}];\n          if (groupid == 'YRN') this.ynlist = [{code:'', value:'Empty list...'}];\n        }\n      } else {\n        this.sts = [{code:'', value:'Error ms config list'}];\n        this.genre = [{code:'', value:'Error ms config list'}];\n        this.ynlist = [{code:'', value:'Error ms config list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.sts = [{code:'', value:'Error ms config list'}];\n      this.genre = [{code:'', value:'Error ms config list'}];\n      this.ynlist = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Empty list...'}];\n        }\n      } else {\n        this.userlist = [{_id:'', name:'Error label list'}];\n      }\n    },\n    err => {\n      this.loading = false;\n      this.userlist = [{_id:'', name:'Error label list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        this.router.navigate(['songmanagement'],\n        {\n          queryParams: {\n            labelid: this.reportForm.value.labelid,\n            songname: this.reportForm.value.songname,\n            artistname: this.reportForm.value.artistname,\n            albumname: this.reportForm.value.albumname,\n            albumyear: this.reportForm.value.albumyear,\n            songgenre: this.reportForm.value.songgenre,\n            //songbuy: this.reportForm.value.songbuy,\n            status: this.reportForm.value.status,\n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(formval) {\n    this.loading = true;\n    this.songadminService.getAggSongsnonpublish(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qlabelid = formval.labelid;\n        this.qsongname = formval.songname;\n        this.qartistname = formval.artistname;\n        this.qalbumname = formval.albumname;\n        this.qalbumyear = formval.albumyear;\n        this.qsonggenre = formval.songgenre;\n        //this.qsongbuy = formval.songbuy;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Songs Result';\n        \n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          //songbuy: this.qsongbuy,\n          status: this.qstatus\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['songmanagement'],\n      {\n        queryParams: {\n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          //songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['songmanagement'],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          //songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  showSong(songid): void {\n    this.router.navigate([`viewsong/${songid}`],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          //songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  publishSong(songid, songname, songpublish): void {\n    \n    this.loading = true;\n    if (songpublish === 'Y') {\n      this.loading = false;\n      this.toastr.warning('This song has already been published.');\n    } else {\n      if(confirm('Do you really want to publish this song: ' + songname + ' record?')){\n        let payload: any = {};\n        payload.status = 'STSACT';\n        this.songadminService.publishSong(songid, payload)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n  }\n\n  unpublishSong(songid, songname, songpublish): void {\n    \n    this.loading = true;\n    if (songpublish === 'N') {\n      this.loading = false;\n      this.toastr.warning('This song is already still unpublished.');\n    } else {\n      if(confirm('Do you really want to unpublish this song: ' + songname + ' record?')){\n        let payload: any = {};\n        payload.status = 'STSACT';\n        this.songadminService.cancelpublishSong(songid, payload)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/songmgt/songmgt.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songstats/songstats.component.css\n// module id = ./src/app/components/songstats/songstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Songs</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"labelid\\\" class=\\\"col-sm-2 paddingsearch\\\">Label</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                          <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                          <option value=\\\"\\\">Select the label</option>\\n                          <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                      </select>\\n                    </div>\\n              </div>\\n              <div class=\\\"col-sm-6 col-md-6\\\">\\n                <label for=\\\"songname\\\" class=\\\"col-sm-2 paddingsearch\\\">Title</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n                </div>\\n              </div>            \\n          </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"artistname\\\" class=\\\"col-sm-2 paddingsearch\\\">Artist</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"albumname\\\" class=\\\"col-sm-2 paddingsearch\\\">Album</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n                  </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">    \\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"albumyear\\\" class=\\\"col-sm-2 paddingsearch\\\">Year</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Year\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"songgenre\\\" class=\\\"col-sm-2 paddingsearch\\\">Genre</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                          <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                          <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n             </div>\\n            <div class=\\\"row rowmarginsearch\\\">        \\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"songpublish\\\" class=\\\"col-sm-2 paddingsearch\\\">Publish?</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"songpublish\\\">\\n                          <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                          <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>  \\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"songbuy\\\" class=\\\"col-sm-2 paddingsearch\\\">Buy?</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"songbuy\\\">\\n                          <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                          <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>  \\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"status\\\" class=\\\"col-sm-2 paddingsearch\\\">Status</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                          <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                          <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"submit\\\" class=\\\"col-sm-2 paddingsearch\\\">     </label>\\n                    <div class=\\\"col-sm-5\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                    </div>\\n                </div>                  \\n            </div>\\n        </form>\\n      </div>\\n    </div>\\n      <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songs && totalrows < 1\\\">\\n          <div class=\\\"panel-heading\\\">\\n              <h3 class=\\\"panel-title\\\">No song found</h3> \\n          </div>\\n    \\n          <div class=\\\"panel-body\\\">\\n              There is NO any songs found for the selected criteria.\\n          </div>\\n      </div>\\n  \\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"songs && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Title</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('label')\\\">Label</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"10%\\\">Artist</th>\\n                            <th scope=\\\"col\\\" width=\\\"20%\\\">Album</th>\\n                            <th scope=\\\"col\\\" width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songbuy')\\\">Purchase</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                            <th scope=\\\"col\\\" width=\\\"10%\\\">Publish?</th>\\n                            <!-- <th width=\\\"5%\\\">Preview</th> -->\\n                            <th scope=\\\"col\\\" width=\\\"5%\\\">Song</th>\\n                            <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                            <th scope=\\\"col\\\" width=\\\"5%\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let song of songs; let songIndex = index'>\\n                            <td scope=\\\"row\\\" data-label=\\\"Song Title\\\"><a style=\\\"font-size:12px;cursor:pointer\\\" (click)=\\\"showSong(song._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ song.songname}}</a></td>\\n                            <td data-label=\\\"Label\\\">{{ song.label }}</td>\\n                            <td data-label=\\\"Artist\\\">{{ song.artist }}</td>\\n                            <td data-label=\\\"Album\\\">{{ song.album }}</td>\\n                            <td class=\\\"text-right\\\" data-label=\\\"Purchase\\\">{{ song.songbuy}}</td>\\n                            <td class=\\\"text-right\\\" data-label=\\\"Price\\\">{{ song.songprice | currency: 'IDR':'symbol-narrow' }}</td>\\n                            <td data-label=\\\"Publish?\\\">{{ song.songpublish }}</td>\\n                            <!-- <td><a href=\\\"{{ song.songprvwpath }}\\\" style=\\\"cursor:pointer;float:center;color:#C92020\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Preview\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a></td> -->\\n                            <td data-label=\\\"Song\\\"><a href=\\\"{{ song.songfilepath }}\\\" style=\\\"cursor:pointer;float:center;color:#19663B\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Song\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a></td>\\n                            <!-- <td>{{ albm.status}}</td> -->\\n                            <td data-label=\\\"Action\\\">\\n                                <a *ngIf=\\\"song.songpublish === 'Y' && song.songbuy === 0\\\" alt=\\\"Unpublish\\\" style=\\\"cursor:pointer;float:center;color:grey\\\" (click)=\\\"unpublishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Unpublish\\\"><i class=\\\"fa fa-cloud-download fa-2x\\\"></i></a>\\n                                <span *ngIf=\\\"song.songpublish !== 'Y' || song.songbuy !== 0\\\" style=\\\"color:#eee\\\">No Action</span>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n  \\n    </div>\\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songstats/songstats.component.html\n// module id = ./src/app/components/songstats/songstats.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { SongadminService } from '../../services/admin/songadmin.service';\nimport { IAggSong } from '../../interface/song';\nimport { IUserList } from '../../interface/user';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\n\n@Component({\n  selector: 'app-songstats',\n  templateUrl: './songstats.component.html',\n  styleUrls: ['./songstats.component.css']\n})\nexport class SongstatsComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  userlist: IUserList[];\n  songs: IAggSong[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qsongname: String;\n  qartistname: String;\n  qalbumname: String;\n  qalbumyear: String;\n  qsonggenre: String;\n  qsongpublish: String;\n  qsongbuy: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  ynlist: IMsconfigGroupList[];\n\n  currsongpublish: String;\n  currsongbuy: Number;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private songadminService: SongadminService\n  ) { }\n  songname = new FormControl('',[Validators.nullValidator]);\n  labelid = new FormControl('',[Validators.nullValidator]);\n  artistname = new FormControl('',[Validators.nullValidator]);\n  albumname = new FormControl('',[Validators.nullValidator]);  \n  albumyear = new FormControl('',[Validators.nullValidator]);\n  songgenre = new FormControl('',[Validators.nullValidator]);\n  songpublish = new FormControl('',[Validators.nullValidator]);\n  songbuy = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      labelid: this.labelid,\n      songname: this.songname,\n      artistname: this.artistname,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      songgenre: this.songgenre,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getMsconfigGroupList('YRN');\n    this.getLabels();\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qsongname = params['songname'] || '';\n      this.qartistname = params['artistname'] || '';\n      this.qalbumname = params['albumname'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qsonggenre = params['songgenre'] || '';\n      this.qsongpublish = params['songpublish'] || '';\n      this.qsongbuy = params['songbuy'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.labelid = this.qlabelid;\n      payload.artistname = this.qartistname;\n      payload.albumname = this.qalbumname;\n      payload.songname = this.qsongname;\n      payload.albumyear = this.qalbumyear;\n      payload.songgenre = this.qsonggenre;\n      payload.songpublish = this.qsongpublish;\n      payload.songbuy = this.qsongbuy;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(payload);\n\n      this.reportForm.patchValue({\n        labelid: this.qlabelid,\n        songname: this.qsongname,\n        artistname: this.qartistname,\n        albumname: this.qalbumname,\n        albumyear: this.qalbumyear,\n        songgenre: this.qsonggenre,\n        songpublish: this.qsongpublish,\n        songbuy: this.qsongbuy,\n        status: this.qstatus\n      });\n    })\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n          if (groupid == 'YRN') {\n            this.ynlist = data.data;\n          }\n        } \n      } \n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Empty list...'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.userlist = [{_id:'', name:'Error label list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        this.router.navigate(['songstats'],\n        {\n          queryParams: {\n            labelid: this.reportForm.value.labelid,\n            songname: this.reportForm.value.songname,\n            artistname: this.reportForm.value.artistname,\n            albumname: this.reportForm.value.albumname,\n            albumyear: this.reportForm.value.albumyear,\n            songgenre: this.reportForm.value.songgenre,\n            songpublish: this.reportForm.value.songpublish,\n            songbuy: this.reportForm.value.songbuy,\n            status: this.reportForm.value.status,\n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n  fetchReport(formval) {\n    this.loading = true;\n    this.songadminService.getAggSongs(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qlabelid = formval.labelid;\n        this.qsongname = formval.songname;\n        this.qartistname = formval.artistname;\n        this.qalbumname = formval.albumname;\n        this.qalbumyear = formval.albumyear;\n        this.qsonggenre = formval.songgenre;\n        this.qsongpublish = formval.songpublish;\n        this.qsongbuy = formval.songbuy;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Songs Result';\n        \n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate(['songstats'],\n      {\n        queryParams: {\n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['songstats'],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showSong(songid): void {\n    this.router.navigate([`viewsongstats/${songid}`],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  unpublishSong(songid, songname, songpublish): void {\n    \n    this.loading = true;\n    if (songpublish === 'N') {\n      this.loading = false;\n      this.toastr.warning('This song is already still unpublished.');\n    } else {\n      if(confirm('Do you really want to unpublish this song: ' + songname + ' record?')){\n        let payload: any = {};\n        payload.status = 'STSACT';\n        this.songadminService.cancelpublishSong(songid, payload)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/songstats/songstats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songstats/viewsongstats/viewsongstats.component.css\n// module id = ./src/app/components/songstats/viewsongstats/viewsongstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Song Details</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Title</label>\\n            <div class=\\\"form-ele col-sm-10\\\"> {{ song?.songname }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songname }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artist\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.artist }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.artist }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"album\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.album }} \\n<!--               <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.album }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            \\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songlyric }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songlyric }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list\\\"></i></div> -->\\n              <select disabled class=\\\"form-control selectfontsize\\\" [formControl]=\\\"songgenre\\\">\\n                  <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songgenre }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songprice | currency: 'IDR':'symbol-narrow' }}\\n                <!-- <div class=\\\"input-group-addon\\\">Rp</div> -->\\n                <!-- <div class=\\\"form-ele\\\">{{ song?.songprice | currency: 'IDR':true }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprvwpath\\\" class=\\\"col-sm-2 control-label\\\">Preview</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"border:1px\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n              <a href=\\\"{{ song?.songprvwpath }}\\\" style=\\\"cursor:pointer;padding-right:5px;float:center;color:#C92020\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Preview\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songprvwpath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songfilepath\\\" class=\\\"col-sm-2 control-label\\\">File</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\" style=\\\"border:1px\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n                <a href=\\\"{{ song?.songfilepath }}\\\" style=\\\"cursor:pointer;float:center;color:#11DFDF\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Play Song\\\"><i class=\\\"fa fa-play-circle fa-2x\\\"></i></a>\\n                <!-- <div class=\\\"form-ele\\\">{{ song?.songfilepath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Publish?</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songpublish }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songpublish }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ song?.songbuy }}\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songbuy }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list\\\"></i></div> -->\\n              <select class=\\\"form-control selectfontsize\\\" [formControl]=\\\"status\\\" disabled>\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.status }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songstats/viewsongstats/viewsongstats.component.html\n// module id = ./src/app/components/songstats/viewsongstats/viewsongstats.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IAggSong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewsongstats',\n  templateUrl: './viewsongstats.component.html',\n  styleUrls: ['./viewsongstats.component.css']\n})\nexport class ViewsongstatsComponent implements OnInit {\n  userObj: any;\n  song: IAggSong;\n  genre: IMsconfigGroupList[];\n  sts: IMsconfigGroupList[];\n  songForm: FormGroup;\n  private sub: Subscription;\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,    \n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  songgenre = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let songid = params['id'];\n        this.getMsconfigGroupList('CSTATUS');\n        this.getMsconfigGroupList('GENRE');\n        this.getSong(songid);\n      });\n    this.songForm = this.fb.group({\n      songgenre: this.songgenre,\n      status: this.status\n    });  \n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } \n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getSong(id){\n    this.songService.getSongAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.song = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n        }\n      }\n    },\n    err => {\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  populateForm(data): void {\n    this.songForm.patchValue({\n      songgenre: data.songgenre,\n      status: data.status\n    });\n  }\n  onBack(): void {\n    this.router.navigate(['../songstats'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/songstats/viewsongstats/viewsongstats.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/transaction/transaction.component.css\n// module id = ./src/app/components/transaction/transaction.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Transactions</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n              <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"purchaseid\\\" class=\\\"col-sm-2 paddingsearch\\\">Payment Ref</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"purchaseid\\\" [formControl]=\\\"purchaseid\\\" placeholder=\\\"Payment Ref\\\">\\n                    </div>\\n                </div>         \\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"buyername\\\" class=\\\"col-sm-2 paddingsearch\\\">Buyer</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"buyername\\\" [formControl]=\\\"buyername\\\" placeholder=\\\"Buyer Name\\\">\\n                  </div>\\n                </div>            \\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"productname\\\" class=\\\"col-sm-2 paddingsearch\\\">Product Name</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productname\\\" [formControl]=\\\"productname\\\" placeholder=\\\"Product Name\\\">\\n                      </div>\\n                  </div>         \\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"dbcr\\\" class=\\\"col-sm-2 paddingsearch\\\">IN/OUT</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"dbcr\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                            <option *ngFor=\\\"let a of dc\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                      </div>\\n                    </div>             \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"fromamt\\\" class=\\\"col-sm-2 paddingsearch\\\">From Amount</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromamt\\\" [formControl]=\\\"fromamt\\\" placeholder=\\\"From Amount\\\">\\n                      </div>\\n                  </div>         \\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"toamt\\\" class=\\\"col-sm-2 paddingsearch\\\">To Amount</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toamt\\\" [formControl]=\\\"toamt\\\" placeholder=\\\"To Amount\\\">\\n                    </div>\\n                  </div>            \\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label class=\\\"col-sm-6 paddingsearch\\\">Transaction Date</label>\\n                  </div>  \\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-3 col-md-3\\\">\\n                      <div class=\\\"radio\\\">\\n                          <label>\\n                              <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt3\\\" [formControl]=\\\"rptype\\\" checked>\\n                              Today\\n                          </label>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-3 col-md-3\\\">\\n                      <div class=\\\"radio\\\">\\n                          <label>\\n                              <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt1\\\" [formControl]=\\\"rptype\\\">\\n                              Current month\\n                          </label>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <div class=\\\"radio\\\">\\n                          <label>\\n                              <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt2\\\" [formControl]=\\\"rptype\\\">\\n                              Date Range (yyyy-mm-dd)\\n                          </label>\\n                      </div>\\n                      <div class=\\\"row\\\" style=\\\"padding: 8px\\\">\\n                          <div class=\\\"col-sm-6 col-md-6\\\">\\n                              <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                                  <div class=\\\"input-group\\\">\\n                                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                      <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                                  </div>\\n                                  <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                                      <span class=\\\"col-sm-2\\\"></span>\\n                                      <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid start date</span>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"col-sm-6 col-md-6\\\">\\n                              <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                                  <div class=\\\"input-group\\\">\\n                                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                      <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                                  </div>\\n                                  <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                                      <span class=\\\"col-sm-2\\\"></span>\\n                                      <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid end date</span>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div> \\n\\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <div class=\\\"col-sm-6\\\" style=\\\"margin:0;padding:0\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"this.loading == false && reportForm.invalid\\\">Submit</button>\\n                      </div>\\n                  </div>                  \\n              </div>\\n            </form>\\n        </div>    \\n    </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"transactions && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No transaction found</h3> \\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n          There is NO transaction found for the selected criteria.\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"transactions && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortTransaction('transactiondt')\\\">Transaction Date</a></th>\\n                            <th width=\\\"40%\\\" scope=\\\"col\\\">Remarks</th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\">Payment</th>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortTransaction('amount')\\\">Amount</a></th>\\n                            <th width=\\\"5%\\\" scope=\\\"col\\\">In/Out</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let trx of transactions; let trxIndex = index'>\\n                            <!-- <td data-label=\\\"Transaction Date\\\" scope=\\\"row\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showTransaction(trx._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ trx.transactiondt | date: 'd MMM y'}}</a></td>   -->\\n                            <td data-label=\\\"Transaction Date\\\" scope=\\\"row\\\">{{ trx.transactiondt | date: 'd MMM y'}}</td>\\n                            <td data-label=\\\"Remarks\\\">payment ref: {{ trx.purchaseid }} ; <br> buyer: {{ trx.listener }} ;<br> product: {{ trx.producttype}} &nbsp; {{ trx.product}}</td>\\n                            <td data-label=\\\"Payment\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showPurchase(trx.purchaseid)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Payment\\\">{{ trx.payment }}</a></td>\\n                            <td data-label=\\\"Amount\\\" class=\\\"text-right\\\">{{ trx.amount | currency: 'IDR':'symbol-narrow' }}</td>\\n                            <td data-label=\\\"In/Out\\\">{{ trx.dbcr }}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"transactions && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n  \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/transaction/transaction.component.html\n// module id = ./src/app/components/transaction/transaction.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\nimport { TransactionService } from '../../services/transaction.service';\n//import { SongService } from '../../services/song.service';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  transactions: any[];\n  totalrows: number;\n  pgCounter: number;\n  qproductname: String;\n  qpurchaseid: String;\n  qbuyername: String;\n  qdbcr: String;\n  qfromamt: String;\n  qtoamt: String;\n  qrptype: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: String;\n  dc = [{code: '-', value: 'OUT'},\n        {code: '+', value: 'IN'}];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private transactionService: TransactionService,\n    private msconfigService: MsconfigService,    \n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n\n  productname = new FormControl('',[Validators.nullValidator]);\n  purchaseid = new FormControl('',[Validators.nullValidator]);  \n  buyername = new FormControl('',[Validators.nullValidator]);  \n  dbcr = new FormControl('',[Validators.nullValidator]);\n  fromamt = new FormControl('',[Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  toamt = new FormControl('',[Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  rptype = new FormControl('opt3');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      productname: this.productname,\n      purchaseid: this.purchaseid,\n      buyername: this.buyername,\n      dbcr: this.dbcr,\n      fromamt: this.fromamt,\n      toamt: this.toamt,\n      rptype: this.rptype,\n      startdt: this.startdt,\n      enddt: this.enddt\n    });\n\n    this.route.queryParams.forEach((params: Params) => {\n      this.qproductname = params['productname'] || '';\n      this.qpurchaseid = params['purchaseid'] || '';\n      this.qbuyername = params['buyername'] || '';\n      this.qdbcr = params['dbcr'] || '';\n      this.qfromamt = params['fromamt'] || '';\n      this.qtoamt = params['toamt'] || '';\n      this.qrptype = params['rptype'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n      \n      if(this.qrptype !== '') {\n        let payload: any = {};\n        payload.productname = this.qproductname;\n        payload.purchaseid = this.qpurchaseid;\n        payload.buyername = this.qbuyername;\n        payload.dbcr = this.qdbcr;\n        payload.fromamt = this.qfromamt;\n        payload.toamt = this.qtoamt;\n        payload.rptype = this.qrptype;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n  \n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n  \n        this.reportForm.patchValue({\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }       \n    })\n    this.reportForm.get('rptype').valueChanges\n    .subscribe(value => this.toggleDates(value));\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        if (this.reportForm.value.rptype === 'opt2'){\n          var pstartdt, penddt;\n            try {\n              pstartdt = this.datePipe.transform(this.reportForm.value.startdt, 'yyyy-MM-dd');  \n            } catch (error) {\n              pstartdt = this.qstartdt;\n            }\n            \n            try {\n              penddt = this.datePipe.transform(this.reportForm.value.enddt, 'yyyy-MM-dd');  \n            } catch (error) {\n              penddt = this.qenddt;  \n            }          \n\n          if (!pstartdt || !penddt) {\n            this.toastr.error('Date format is invalid.');\n          } else {\n            if (pstartdt > penddt) {    \n              this.toastr.error('Start date cannot be greater than end date.');\n            } else {\n              this.router.navigate(['transaction'],\n                  {\n                    queryParams: {\n                      productname: this.reportForm.value.productname,\n                      purchaseid: this.reportForm.value.purchaseid,\n                      buyername: this.reportForm.value.buyername,\n                      dbcr: this.reportForm.value.dbcr,\n                      fromamt: this.reportForm.value.fromamt,\n                      toamt: this.reportForm.value.toamt,\n                      rptype: this.reportForm.value.rptype,\n                      startdt: pstartdt,\n                      enddt: penddt,\n                      page: 1, \n                      sortby: null }\n                  }\n              );                  \n            }\n          }\n        } else {\n            this.router.navigate(['transaction'],\n                {\n                  queryParams: {\n                    productname: this.reportForm.value.productname,\n                    purchaseid: this.reportForm.value.purchaseid,\n                    buyername: this.reportForm.value.buyername,\n                    dbcr: this.reportForm.value.dbcr,\n                    fromamt: this.reportForm.value.fromamt,\n                    toamt: this.reportForm.value.toamt,\n                    rptype: this.reportForm.value.rptype,\n                    startdt: null,\n                    enddt: null,\n                    page: 1, \n                    sortby: null }\n                }\n            );\n        }    \n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.transactionService.getTransactionAggs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.transactions = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qproductname = formval.productname;\n        this.qpurchaseid = formval.purchaseid;\n        this.qbuyername = formval.buyername;\n        this.qdbcr = formval.dbcr;\n        this.qfromamt = formval.fromamt;\n        this.qtoamt = formval.toamt;\n        this.qrptype = formval.rptype;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n\n        /* if (formval.rptype === 'opt1') {\n          this.reportTitle = 'Song purchase for ' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.rptype === 'opt2') {\n            this.reportTitle = 'Song purchase between ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' and ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n            //this.reportTitle = 'Song purchase between ' + formval.startdt + ' and ' + formval.enddt;\n        } else if (formval.rptype === 'opt3') {\n          this.reportTitle = 'Song purchase for today'\n        } */\n        this.reportTitle = 'Search Result - ';\n        this.reportForm.patchValue({\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  setPage(page): void {\n    this.router.navigate(['transaction'],\n      {\n        queryParams: {\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortTransaction(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['transaction'],\n      {\n        queryParams: { \n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  showSong(songid): void {\n    this.router.navigate([`viewsongpurchase/${songid}`],\n      {\n        queryParams: { \n          srcpg:'tranx',\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showPurchase(songpurchaseid): void {\n    this.router.navigate([`viewpurchase/${songpurchaseid}`],\n      {\n        queryParams: { \n          srcpg:'tranx',\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/transaction/transaction.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/transactionstats/transactionstats.component.css\n// module id = ./src/app/components/transactionstats/transactionstats.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Transactions</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n              <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"purchaseid\\\" class=\\\"col-sm-2 paddingsearch\\\">Payment Ref</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"purchaseid\\\" [formControl]=\\\"purchaseid\\\" placeholder=\\\"Payment Ref\\\">\\n                    </div>\\n                </div>         \\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"buyername\\\" class=\\\"col-sm-2 paddingsearch\\\">Buyer</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"buyername\\\" [formControl]=\\\"buyername\\\" placeholder=\\\"Buyer Name\\\">\\n                  </div>\\n                </div>            \\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"productname\\\" class=\\\"col-sm-2 paddingsearch\\\">Product Name</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"productname\\\" [formControl]=\\\"productname\\\" placeholder=\\\"Product Name\\\">\\n                      </div>\\n                  </div>         \\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"dbcr\\\" class=\\\"col-sm-2 paddingsearch\\\">IN/OUT</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"dbcr\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                            <option *ngFor=\\\"let a of dc\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                        </select>\\n                      </div>\\n                    </div>             \\n                </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"fromamt\\\" class=\\\"col-sm-2 paddingsearch\\\">From Amount</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromamt\\\" [formControl]=\\\"fromamt\\\" placeholder=\\\"From Amount\\\">\\n                      </div>\\n                  </div>         \\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"toamt\\\" class=\\\"col-sm-2 paddingsearch\\\">To Amount</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toamt\\\" [formControl]=\\\"toamt\\\" placeholder=\\\"To Amount\\\">\\n                    </div>\\n                  </div>            \\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label class=\\\"col-sm-6 paddingsearch\\\">Transaction Date</label>\\n                  </div>  \\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-3 col-md-3\\\">\\n                      <div class=\\\"radio\\\">\\n                          <label>\\n                              <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt3\\\" [formControl]=\\\"rptype\\\" checked>\\n                              Today\\n                          </label>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-3 col-md-3\\\">\\n                      <div class=\\\"radio\\\">\\n                          <label>\\n                              <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt1\\\" [formControl]=\\\"rptype\\\">\\n                              Current month\\n                          </label>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <div class=\\\"radio\\\">\\n                          <label>\\n                              <input type=\\\"radio\\\" name=\\\"rptype\\\" value=\\\"opt2\\\" [formControl]=\\\"rptype\\\">\\n                              Date Range (yyyy-mm-dd)\\n                          </label>\\n                      </div>\\n                      <div class=\\\"row\\\" style=\\\"padding: 8px\\\">\\n                          <div class=\\\"col-sm-6 col-md-6\\\">\\n                              <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('startdt').invalid && reportForm.get('startdt').dirty}\\\">\\n                                  <div class=\\\"input-group\\\">\\n                                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                      <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"startdt\\\" placeholder=\\\"Start Date\\\">\\n                                  </div>\\n                                  <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('startdt').dirty && reportForm.get('startdt').invalid\\\">\\n                                      <span class=\\\"col-sm-2\\\"></span>\\n                                      <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid start date</span>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                          <div class=\\\"col-sm-6 col-md-6\\\">\\n                              <div class=\\\"form-group\\\" style=\\\"margin-right:0\\\" [ngClass]=\\\"{'has-error': reportForm.get('enddt').invalid && reportForm.get('enddt').dirty}\\\">\\n                                  <div class=\\\"input-group\\\">\\n                                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-calendar\\\"></i></div>\\n                                      <input type=\\\"text\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD', containerClass: 'theme-red', showWeekNumbers: false }\\\" class=\\\"form-control\\\" [formControl]=\\\"enddt\\\" placeholder=\\\"End Date\\\">\\n                                  </div>\\n                                  <div class=\\\"text-danger\\\" *ngIf=\\\"reportForm.get('enddt').dirty && reportForm.get('enddt').invalid\\\">\\n                                      <span class=\\\"col-sm-2\\\"></span>\\n                                      <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter valid end date</span>\\n                                  </div>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </div> \\n\\n              </div>\\n              <div class=\\\"row rowmarginsearch\\\">\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                  <label for=\\\"labelid\\\" class=\\\"col-sm-2 paddingsearch\\\">Label</label>\\n                  <div class=\\\"col-sm-10\\\">\\n                      <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div> -->\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                          <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                          <option value=\\\"\\\">Select the label</option>\\n                          <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                      </select>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"this.loading == false && reportForm.invalid\\\">Submit</button>\\n                </div>                  \\n              </div>\\n            </form>\\n        </div>    \\n    </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"transactions && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No transaction found</h3> \\n        </div>\\n\\n        <div class=\\\"panel-body\\\">\\n          There is NO transaction found for the selected criteria.\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"transactions && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortTransaction('transactiondt')\\\">Transaction Date</a></th>\\n                            <th width=\\\"40%\\\" scope=\\\"col\\\">Remarks</th>\\n                            <th width=\\\"20%\\\" scope=\\\"col\\\">Payment</th>\\n                            <th width=\\\"15%\\\" scope=\\\"col\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortTransaction('amount')\\\">Amount</a></th>\\n                            <th width=\\\"5%\\\" scope=\\\"col\\\">In/Out</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let trx of transactions; let trxIndex = index'>\\n                            <!-- <td data-label=\\\"Transaction Date\\\" scope=\\\"row\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showTransaction(trx._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ trx.transactiondt | date: 'd MMM y'}}</a></td>   -->\\n                            <td data-label=\\\"Transaction Date\\\" scope=\\\"row\\\">{{ trx.transactiondt | date: 'd MMM y'}}</td>\\n                            <td data-label=\\\"Remarks\\\">payment ref: {{ trx.purchaseid }} ; <br> buyer: {{ trx.listener }} ;<br> product: {{ trx.producttype}} &nbsp; {{ trx.product}}</td>\\n                            <td data-label=\\\"Payment\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showPurchase(trx.purchaseid)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Payment\\\">{{ trx.payment }}</a></td>\\n                            <td data-label=\\\"Amount\\\" class=\\\"text-right\\\">{{ trx.amount | currency: 'IDR':'symbol-narrow' }}</td>\\n                            <td data-label=\\\"In/Out\\\">{{ trx.dbcr }}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"transactions && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n  \\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/transactionstats/transactionstats.component.html\n// module id = ./src/app/components/transactionstats/transactionstats.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params,NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\nimport { TransactionService } from '../../services/transaction.service';\n//import { SongService } from '../../services/song.service';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { IUserList } from '../../interface/user';\n\n@Component({\n  selector: 'app-transactionstats',\n  templateUrl: './transactionstats.component.html',\n  styleUrls: ['./transactionstats.component.css']\n})\nexport class TransactionstatsComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  userlist: IUserList[];\n  transactions: any[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qproductname: String;\n  qpurchaseid: String;\n  qbuyername: String;\n  qdbcr: String;\n  qfromamt: String;\n  qtoamt: String;\n  qrptype: string;\n  qstartdt: string;\n  qenddt: string;\n  qpage: number;\n  qsort: String;\n  dc = [{code: '-', value: 'OUT'},\n        {code: '+', value: 'IN'}];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private transactionService: TransactionService,\n    private msconfigService: MsconfigService,\n    private labelmgtService: UsermgtService \n  ) { \n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n  labelid = new FormControl('',[Validators.nullValidator]);\n  productname = new FormControl('',[Validators.nullValidator]);\n  purchaseid = new FormControl('',[Validators.nullValidator]);  \n  buyername = new FormControl('',[Validators.nullValidator]);  \n  dbcr = new FormControl('',[Validators.nullValidator]);\n  fromamt = new FormControl('',[Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  toamt = new FormControl('',[Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  rptype = new FormControl('opt3');\n  startdt = new FormControl({value: '', disabled: true});\n  enddt = new FormControl({value: '', disabled: true});\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      labelid : this.labelid,\n      productname: this.productname,\n      purchaseid: this.purchaseid,\n      buyername: this.buyername,\n      dbcr: this.dbcr,\n      fromamt: this.fromamt,\n      toamt: this.toamt,\n      rptype: this.rptype,\n      startdt: this.startdt,\n      enddt: this.enddt\n    });\n    this.getLabels();\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qproductname = params['productname'] || '';\n      this.qpurchaseid = params['purchaseid'] || '';\n      this.qbuyername = params['buyername'] || '';\n      this.qdbcr = params['dbcr'] || '';\n      this.qfromamt = params['fromamt'] || '';\n      this.qtoamt = params['toamt'] || '';\n      this.qrptype = params['rptype'] || '';\n      this.qstartdt = params['startdt'] || '';\n      this.qenddt = params['enddt'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n      \n      if(this.qrptype !== '') {\n        let payload: any = {};\n        payload.labelid = this.qlabelid;\n        payload.productname = this.qproductname;\n        payload.purchaseid = this.qpurchaseid;\n        payload.buyername = this.qbuyername;\n        payload.dbcr = this.qdbcr;\n        payload.fromamt = this.qfromamt;\n        payload.toamt = this.qtoamt;\n        payload.rptype = this.qrptype;\n        if( (this.qstartdt !== '' && this.qenddt !== '')){\n          payload.startdt = this.qstartdt;\n          payload.enddt = this.qenddt;\n  \n          this.reportForm.get('startdt').enable();\n          this.reportForm.get('enddt').enable();\n        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n  \n        this.reportForm.patchValue({\n          labelid : this.qlabelid,\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt\n        });\n      } else {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n      }       \n    })\n    this.reportForm.get('rptype').valueChanges\n    .subscribe(value => this.toggleDates(value));\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  toggleDates(opt: string): void {\n    const dt1Control = this.reportForm.get('startdt');\n    const dt2Control = this.reportForm.get('enddt');\n    if (opt === 'opt2') {\n      dt1Control.setValidators(Validators.required);\n      dt2Control.setValidators(Validators.required);\n      dt1Control.enable();\n      dt2Control.enable();\n    } else {\n      dt1Control.clearValidators();\n      dt2Control.clearValidators();\n      dt1Control.disable();\n      dt2Control.disable();\n      dt1Control.setValue('');\n      dt2Control.setValue('');\n    }\n    dt1Control.updateValueAndValidity();\n    dt2Control.updateValueAndValidity();\n  }\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Empty list...'}];\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      this.userlist = [{_id:'', name:'Error label list'}];\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        if (this.reportForm.value.rptype === 'opt2'){\n          var pstartdt, penddt;\n            try {\n              pstartdt = this.datePipe.transform(this.reportForm.value.startdt, 'yyyy-MM-dd');  \n            } catch (error) {\n              pstartdt = this.qstartdt;\n            }\n            \n            try {\n              penddt = this.datePipe.transform(this.reportForm.value.enddt, 'yyyy-MM-dd');  \n            } catch (error) {\n              penddt = this.qenddt;  \n            }          \n\n          if (!pstartdt || !penddt) {\n            this.toastr.error('Date format is invalid.');\n          } else {\n            if (pstartdt > penddt) {    \n              this.toastr.error('Start date cannot be greater than end date.');\n            } else {\n              this.router.navigate(['transactionstats'],\n                  {\n                    queryParams: {\n                      labelid : this.reportForm.value.labelid,\n                      productname: this.reportForm.value.productname,\n                      purchaseid: this.reportForm.value.purchaseid,\n                      buyername: this.reportForm.value.buyername,\n                      dbcr: this.reportForm.value.dbcr,\n                      fromamt: this.reportForm.value.fromamt,\n                      toamt: this.reportForm.value.toamt,\n                      rptype: this.reportForm.value.rptype,\n                      startdt: pstartdt,\n                      enddt: penddt,\n                      page: 1, \n                      sortby: null }\n                  }\n              );                  \n            }\n          }\n        } else {\n            this.router.navigate(['transactionstats'],\n                {\n                  queryParams: {\n                    labelid : this.reportForm.value.labelid,\n                    productname: this.reportForm.value.productname,\n                    purchaseid: this.reportForm.value.purchaseid,\n                    buyername: this.reportForm.value.buyername,\n                    dbcr: this.reportForm.value.dbcr,\n                    fromamt: this.reportForm.value.fromamt,\n                    toamt: this.reportForm.value.toamt,\n                    rptype: this.reportForm.value.rptype,\n                    startdt: null,\n                    enddt: null,\n                    page: 1, \n                    sortby: null }\n                }\n            );\n        }    \n    }\n  }\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.transactionService.getAdmTransactionAggs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.transactions = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qlabelid = formval.labelid,\n        this.qproductname = formval.productname;\n        this.qpurchaseid = formval.purchaseid;\n        this.qbuyername = formval.buyername;\n        this.qdbcr = formval.dbcr;\n        this.qfromamt = formval.fromamt;\n        this.qtoamt = formval.toamt;\n        this.qrptype = formval.rptype;\n        if (formval.startdt){\n          this.qstartdt = formval.startdt;\n          this.qenddt = formval.enddt;\n        }\n\n        /* if (formval.rptype === 'opt1') {\n          this.reportTitle = 'Song purchase for ' + this.datePipe.transform(new Date(), 'MMM y');\n        } else if (formval.rptype === 'opt2') {\n            this.reportTitle = 'Song purchase between ' + this.datePipe.transform(new Date(formval.startdt), 'd MMM y') + ' and ' + this.datePipe.transform(new Date(formval.enddt), 'd MMM y');\n            //this.reportTitle = 'Song purchase between ' + formval.startdt + ' and ' + formval.enddt;\n        } else if (formval.rptype === 'opt3') {\n          this.reportTitle = 'Song purchase for today'\n        } */\n        this.reportTitle = 'Search Result - ';\n        this.reportForm.patchValue({\n          labelid : this.qlabelid,\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['transactionstats'],\n      {\n        queryParams: {\n          labelid : this.qlabelid,\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortTransaction(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['transactionstats'],\n      {\n        queryParams: { \n          labelid : this.qlabelid,\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  showPurchase(songpurchaseid): void {\n    this.router.navigate([`viewpurchase/${songpurchaseid}`],\n      {\n        queryParams: { \n          srcpg:'tranxstats',\n          labelid : this.qlabelid,\n          productname: this.qproductname,\n          purchaseid: this.qpurchaseid,\n          buyername: this.qbuyername,\n          dbcr: this.qdbcr,\n          fromamt: this.qfromamt,\n          toamt: this.qtoamt,\n          rptype: this.qrptype,\n          startdt: this.qstartdt,\n          enddt: this.qenddt,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/transactionstats/transactionstats.component.ts","module.exports = \"\\n/* Base ------------------------------ */\\n\\n*:not(br):not(tr):not(html) {\\n  font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif;\\n  -webkit-box-sizing: border-box;\\n          box-sizing: border-box;\\n}\\n\\nbody {\\n  width: 100% !important;\\n  height: 100%;\\n  margin: 0;\\n  line-height: 1.4;\\n  background-color: #F2F4F6;\\n  color: #74787E;\\n  -webkit-text-size-adjust: none;\\n}\\n\\np,\\nul,\\nol,\\nblockquote {\\n  line-height: 1.4;\\n  text-align: left;\\n}\\n\\na {\\n  color: #3869D4;\\n}\\n\\na img {\\n  border: none;\\n}\\n\\ntd {\\n  word-break: break-word;\\n}\\n\\n/* Layout ------------------------------ */\\n\\n.email-wrapper {\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n  background-color: #F2F4F6;\\n}\\n\\n.email-content {\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n}\\n\\n/* Masthead ----------------------- */\\n\\n.email-masthead {\\n  padding: 25px 0;\\n  text-align: center;\\n}\\n\\n.email-masthead_logo {\\n  width: 94px;\\n}\\n\\n.email-masthead_name {\\n  font-size: 16px;\\n  font-weight: bold;\\n  color: #bbbfc3;\\n  text-decoration: none;\\n  text-shadow: 0 1px 0 white;\\n}\\n\\n/* Body ------------------------------ */\\n\\n.email-body {\\n  width: 100%;\\n  margin: 0;\\n  padding: 0;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n  border-top: 1px solid #EDEFF2;\\n  border-bottom: 1px solid #EDEFF2;\\n  background-color: #FFFFFF;\\n}\\n\\n.email-body_inner {\\n  width: 570px;\\n  margin: 0 auto;\\n  padding: 0;\\n  -premailer-width: 570px;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n  background-color: #FFFFFF;\\n}\\n\\n.email-footer {\\n  width: 570px;\\n  margin: 0 auto;\\n  padding: 0;\\n  -premailer-width: 570px;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n  text-align: center;\\n}\\n\\n.email-footer p {\\n  color: #AEAEAE;\\n}\\n\\n.body-action {\\n  width: 100%;\\n  margin: 30px auto;\\n  padding: 0;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n  text-align: center;\\n}\\n\\n.body-sub {\\n  margin-top: 25px;\\n  padding-top: 25px;\\n  border-top: 1px solid #EDEFF2;\\n}\\n\\n.content-cell {\\n  padding: 35px;\\n}\\n\\n.preheader {\\n  display: none !important;\\n  visibility: hidden;\\n  mso-hide: all;\\n  font-size: 1px;\\n  line-height: 1px;\\n  max-height: 0;\\n  max-width: 0;\\n  opacity: 0;\\n  overflow: hidden;\\n}\\n\\n/* Attribute list ------------------------------ */\\n\\n.attributes {\\n  margin: 0 0 21px;\\n}\\n\\n.attributes_content {\\n  background-color: #EDEFF2;\\n  padding: 16px;\\n}\\n\\n.attributes_item {\\n  padding: 0;\\n}\\n\\n/* Related Items ------------------------------ */\\n\\n.related {\\n  width: 100%;\\n  margin: 0;\\n  padding: 25px 0 0 0;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n}\\n\\n.related_item {\\n  padding: 10px 0;\\n  color: #74787E;\\n  font-size: 15px;\\n  line-height: 18px;\\n}\\n\\n.related_item-title {\\n  display: block;\\n  margin: .5em 0 0;\\n}\\n\\n.related_item-thumb {\\n  display: block;\\n  padding-bottom: 10px;\\n}\\n\\n.related_heading {\\n  border-top: 1px solid #EDEFF2;\\n  text-align: center;\\n  padding: 25px 0 10px;\\n}\\n\\n/* Discount Code ------------------------------ */\\n\\n.discount {\\n  width: 100%;\\n  margin: 0;\\n  padding: 24px;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n  background-color: #EDEFF2;\\n  border: 2px dashed #9BA2AB;\\n}\\n\\n.discount_heading {\\n  text-align: center;\\n}\\n\\n.discount_body {\\n  text-align: center;\\n  font-size: 15px;\\n}\\n\\n/* Social Icons ------------------------------ */\\n\\n.social {\\n  width: auto;\\n}\\n\\n.social td {\\n  padding: 0;\\n  width: auto;\\n}\\n\\n.social_icon {\\n  height: 20px;\\n  margin: 0 8px 10px 8px;\\n  padding: 0;\\n}\\n\\n/* Data table ------------------------------ */\\n\\n.purchase {\\n  width: 100%;\\n  margin: 0;\\n  padding: 35px 0;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n}\\n\\n.purchase_content {\\n  width: 100%;\\n  margin: 0;\\n  padding: 25px 0 0 0;\\n  -premailer-width: 100%;\\n  -premailer-cellpadding: 0;\\n  -premailer-cellspacing: 0;\\n}\\n\\n.purchase_item {\\n  padding: 10px 0;\\n  color: #74787E;\\n  font-size: 15px;\\n  line-height: 18px;\\n}\\n\\n.purchase_heading {\\n  padding-bottom: 8px;\\n  border-bottom: 1px solid #EDEFF2;\\n}\\n\\n.purchase_heading p {\\n  margin: 0;\\n  color: #9BA2AB;\\n  font-size: 12px;\\n}\\n\\n.purchase_footer {\\n  padding-top: 15px;\\n  border-top: 1px solid #EDEFF2;\\n}\\n\\n.purchase_total {\\n  margin: 0;\\n  text-align: right;\\n  font-weight: bold;\\n  color: #2F3133;\\n}\\n\\n.purchase_total--label {\\n  padding: 0 15px 0 0;\\n}\\n\\n/* Utilities ------------------------------ */\\n\\n.align-right {\\n  text-align: right;\\n}\\n\\n.align-left {\\n  text-align: left;\\n}\\n\\n.align-center {\\n  text-align: center;\\n}\\n\\n/*Media Queries ------------------------------ */\\n\\n@media only screen and (max-width: 600px) {\\n  .email-body_inner,\\n  .email-footer {\\n    width: 100% !important;\\n  }\\n}\\n\\n@media only screen and (max-width: 500px) {\\n  .button {\\n    width: 100% !important;\\n  }\\n}\\n\\n/* Buttons ------------------------------ */\\n\\n.button {\\n  background-color: #3869D4;\\n  border-top: 10px solid #3869D4;\\n  border-right: 18px solid #3869D4;\\n  border-bottom: 10px solid #3869D4;\\n  border-left: 18px solid #3869D4;\\n  display: inline-block;\\n  color: #FFF;\\n  text-decoration: none;\\n  border-radius: 3px;\\n  -webkit-box-shadow: 0 2px 3px rgba(0, 0, 0, 0.16);\\n          box-shadow: 0 2px 3px rgba(0, 0, 0, 0.16);\\n  -webkit-text-size-adjust: none;\\n}\\n\\n.button--green {\\n  background-color: #22BC66;\\n  border-top: 10px solid #22BC66;\\n  border-right: 18px solid #22BC66;\\n  border-bottom: 10px solid #22BC66;\\n  border-left: 18px solid #22BC66;\\n}\\n\\n.button--red {\\n  background-color: #FF6136;\\n  border-top: 10px solid #FF6136;\\n  border-right: 18px solid #FF6136;\\n  border-bottom: 10px solid #FF6136;\\n  border-left: 18px solid #FF6136;\\n}\\n\\n/* Type ------------------------------ */\\n\\nh1 {\\n  margin-top: 0;\\n  color: #2F3133;\\n  font-size: 19px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\nh2 {\\n  margin-top: 0;\\n  color: #2F3133;\\n  font-size: 16px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\nh3 {\\n  margin-top: 0;\\n  color: #2F3133;\\n  font-size: 14px;\\n  font-weight: bold;\\n  text-align: left;\\n}\\n\\np {\\n  margin-top: 0;\\n  color: #74787E;\\n  font-size: 16px;\\n  line-height: 1.5em;\\n  text-align: left;\\n}\\n\\np.sub {\\n  font-size: 12px;\\n}\\n\\np.center {\\n  text-align: center;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/emailverification/emailverification.component.css\n// module id = ./src/app/components/user/emailverification/emailverification.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <table class=\\\"email-wrapper\\\" width=\\\"100%\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n    <tr>\\n      <td align=\\\"center\\\">\\n        <table class=\\\"email-content\\\" width=\\\"100%\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n          <!-- Email Body -->\\n          <tr>\\n            <td class=\\\"email-body\\\" width=\\\"100%\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n              <table class=\\\"email-body_inner\\\" align=\\\"center\\\" width=\\\"570\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n                <!-- Body content -->\\n                <tr>\\n                  <td class=\\\"content-cell\\\">\\n                    <h1>Hi, {{name}}!</h1>\\n                    <p><strong>Thanks for the email confirmation !</strong></p>\\n                    <p>{{ this.remarks1?.value }}</p>\\n                    <p>{{ this.remarks2?.value }} <a href=\\\"mailto:{{ this.csemail?.value }}\\\">{{ this.csemail?.value }}</a></p>\\n                    <p>For reference, here's your account information:</p>\\n                    <table class=\\\"attributes\\\" width=\\\"100%\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n                      <tr>\\n                        <td class=\\\"attributes_content\\\">\\n                          <table width=\\\"100%\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\">\\n                            <tr>\\n                              <td class=\\\"attributes_item\\\"><strong>Username:</strong> {{this.username}}</td>\\n                            </tr>\\n                                                          <tr>\\n                              <td class=\\\"attributes_item\\\"><strong>Name:</strong> {{this.name}}</td>\\n                            </tr>\\n                                                          <tr>\\n                              <td class=\\\"attributes_item\\\"><strong>Email:</strong> {{ this.email }}</td>\\n                            </tr>\\n                              <tr>\\n                              <td class=\\\"attributes_item\\\"><strong>Usertype:</strong> label</td>\\n                            </tr>\\n                          </table>\\n                        </td>\\n                      </tr>\\n                    </table>\\n                    <!-- Sub copy -->\\n                  </td>\\n                </tr>\\n              </table>\\n            </td>\\n          </tr>\\n        </table>\\n      </td>\\n    </tr>\\n  </table>\\n </div> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/emailverification/emailverification.component.html\n// module id = ./src/app/components/user/emailverification/emailverification.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-emailverification',\n  templateUrl: './emailverification.component.html',\n  styleUrls: ['./emailverification.component.css']\n})\nexport class EmailverificationComponent implements OnInit {\n  private sub: Subscription;\n  remarks: IMsconfigGroupList[];\n  csemail: IMsconfigGroupList;\n  username: string;\n  name: string;\n  email: string;\n  utype: string;\n  remarks1: IMsconfigGroupList;\n  remarks2: IMsconfigGroupList;\n  loading = false;\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private notifService: NotifService,\n              private msconfigService: MsconfigService,\n              private toastr: ToastrService,) \n              { }\n\n  ngOnInit() {\n    this.loading = true;\n    this.sub = this.route.queryParams.subscribe(\n      params => {\n        let hash = params['id'];\n        let postind = params['post'];\n        //this.getMsconfigGroupList('REMARKS');\n        this.notifService.recvemailverification(hash)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.router.navigate(['login']);\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.username = data.message.username;\n            this.name = data.message.name;\n            this.email = data.message.email;\n            this.utype = data.message.usertype;\n            if (postind === 'Y') {\n              this.remarks1 = {code:'0', value:\"Your email has been verified.\"};\n              this.remarks2 = {code:'0', value:\"If you have any queries, please send email to \"};\n            } else {\n              this.getMsconfigVal('REMARKS1','REMARKS');\n              this.getMsconfigVal('REMARKS2','REMARKS');\n            }\n          }\n        },\n        err => {\n          this.loading = false;\n          this.router.navigate(['login']);\n          //console.log(err);\n          this.toastr.error(err);\n        });    \n      });\n\n    this.getMsconfigVal('CSEML','EMAIL');\n\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  /* getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.remarks = data.data;\n        } else {\n          this.remarks = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n    \n  } */\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (code === 'CSEML') {\n            this.csemail = data.data[0];\n          } else if (code === 'REMARKS1') {\n            this.remarks1 = data.data[0];\n          } else if (code === 'REMARKS2') {\n            this.remarks2 = data.data[0];\n          }\n          \n        } else {\n          this.csemail = {code:'', value:'Error ms config list'};\n          this.remarks1 = {code:'', value:'Error ms config list'};\n          this.remarks2 = {code:'', value:'Error ms config list'};\n        }\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n  /* getremarksvalue(premarks) : String {\n    var result: String = '';\n\n    for (let oremark of this.remarks) {\n      if (premarks === oremark.code){\n        result = oremark.value;\n     }\n    }\n    return result;\n  } */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/emailverification/emailverification.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/forgotpassword/forgotpassword.component.css\n// module id = ./src/app/components/user/forgotpassword/forgotpassword.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Reset Password</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  \\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"sendEmail(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <p style=\\\"margin:0;padding-right:20px;\\\" class=\\\"col-sm-12\\\">\\n                If you forgot your password, we can help you reset your password using your email address link to your account.\\n            </p>\\n        </div>        \\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('email').invalid && profileForm.get('email').dirty}\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">@</div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('email').dirty && profileForm.get('email').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"profileForm.get('email').invalid\\\">\\n                    Please enter a valid email\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-5\\\" style=\\\"margin:0;padding:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"profileForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n            </div>\\n            <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n                <sup>*</sup> required\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/forgotpassword/forgotpassword.component.html\n// module id = ./src/app/components/user/forgotpassword/forgotpassword.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { IUser } from '../../../interface/user';\nimport { MatDialog } from '@angular/material';\nimport { KxInfoDialogComponent } from '../../kx-info-dialog/kx-info-dialog.component';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-forgotpassword',\n  templateUrl: './forgotpassword.component.html',\n  styleUrls: ['./forgotpassword.component.css']\n})\nexport class ForgotpasswordComponent implements OnInit {\n  profileForm: FormGroup\n  user: IUser;\n  loading = false;\n\n  constructor(private fb: FormBuilder,\n    private userService: UserService,\n    private notifService: NotifService,\n    private router: Router,\n    private toastr: ToastrService,\n    private dialog: MatDialog\n  ) { }\n  email = new FormControl('', [Validators.email]);\n\n  ngOnInit() {\n    this.profileForm = this.fb.group({\n      email: this.email,\n    });\n  }\n\n  sendEmail(formdata:any): void {\n    let payload: any = {};\n    payload.email = this.profileForm.value.email;\n    this.loading = true;\n    this.userService.resetPasswd(payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n          disableClose: true,\n          width: '400px',\n          data: 'Email to reset password has been sent to ' + this.profileForm.value.email + '. Please follow the instruction in the email.'\n        });    \n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  sendEmail_OLD(formdata:any): void {\n    let payload: any = {};\n    payload.email = this.profileForm.value.email;\n    this.loading = true;\n    this.userService.resetPasswd(payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        let payload1: any = {};\n        payload1.emailto = this.profileForm.value.email;\n        payload1.vlink = data.vlink;\n        this.notifService.sendresetpasswd(payload1)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n              disableClose: true,\n              width: '400px',\n              data: 'Hi, We are sorry to inform that the email to reset password failed to be sent to ' + this.profileForm.value.email + '. Please try again in few minutes.'\n            });\n            //below code is to get result from modal dialog\n      /*       dialogRef.afterClosed().subscribe(result => {\n              console.log(`Dialog closed: ${result}`);\n              this.dialogResult = result;\n            }); */\n          } else {\n            this.loading = false;\n            let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n              disableClose: true,\n              width: '400px',\n              data: 'Email to reset password has been sent to ' + this.profileForm.value.email + '. Please follow the instruction in the email.'\n            });\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n            disableClose: true,\n            width: '400px',\n            data: err\n          });\n        });  \n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/forgotpassword/forgotpassword.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.css\n// module id = ./src/app/components/user/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginUser(loginForm.value)\\\" class=\\\"form-signin\\\" novalidate autocomplete=\\\"off\\\">\\n      <h3>Please sign in</h3>\\n      <label for=\\\"inputUser\\\" class=\\\"sr-only\\\">Username</label>\\n      <input type=\\\"text\\\" id=\\\"inputUser\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" placeholder=\\\"Username\\\" autofocus>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('username').dirty && loginForm.get('username').invalid\\\">\\n          Please enter username\\n      </div>\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" placeholder=\\\"Password\\\">\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('password').dirty && loginForm.get('password').invalid\\\">\\n          Please enter password\\n      </div>\\n      <br><br>\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" >Sign In</button>\\n      <br>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 col-sm-6 col-xs-6\\\"><a [routerLink]=\\\"['/forgotpassword']\\\">Forgot Password  <i class=\\\"fa fa-question fa-lg\\\"></i></a></div>\\n          <div class=\\\"col-md-6 col-sm-6 col-xs-6\\\" style=\\\"text-align: right\\\"><a [routerLink]=\\\"['/register']\\\"><i class=\\\"fa fa-user fa-lg\\\"></i>  Register</a></div>\\n      </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.html\n// module id = ./src/app/components/user/login/login.component.html\n// module chunks = main","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loading = false;\n  navigationSubscription;\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService) { \n      this.navigationSubscription = this.router.events.subscribe((e: any) => {\n        // If it is a NavigationEnd event re-initalise the component\n        if (e instanceof NavigationEnd) {\n          this.ngOnInit();\n        }\n      });\n\n    }\n\n    username = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.authService.logout();\n  }\n  \n  loginForm: FormGroup = this.fb.group({\n    username: this.username,\n    password: this.password,\n  });\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n  loginUser(formdata:any): void {\n    this.authService.logout();\n    if (this.loginForm.dirty && this.loginForm.valid) {\n      this.loading = true;\n      this.authService.login(this.loginForm.value)\n        .subscribe(data => {\n          if (data.json().success === false) {\n            this.loading = false;\n            this.toastr.error(data.json().message);\n          } else {\n            this.loading = false;\n            this.toastr.success('Login successful.');\n            this.router.navigate(['report']);\n          }\n          this.loginForm.reset();\n        },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/login/login.component.ts","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  template: ''\n})\n\nexport class LogoutComponent implements OnInit {\n    navigationSubscription;\n    constructor(private authService: AuthService,\n        private router: Router,\n        private toastr: ToastrService) { \n            this.navigationSubscription = this.router.events.subscribe((e: any) => {\n                // If it is a NavigationEnd event re-initalise the component\n                if (e instanceof NavigationEnd) {\n                  this.ngOnInit();\n                }\n              });\n    }\n\n    ngOnInit(){\n        this.authService.logout();\n        this.toastr.success('You have been logged out.');\n        this.router.navigate(['login']);\n    }\n    ngOnDestroy() {\n        if (this.navigationSubscription) {\n          this.navigationSubscription.unsubscribe();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/logout.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/password/password.component.css\n// module id = ./src/app/components/user/password/password.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Change Password</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"updatePassword(passwordForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('oldpassword').invalid && passwordForm.get('oldpassword').dirty}\\\">\\n            <label for=\\\"oldpassword\\\" class=\\\"col-sm-3 control-label\\\">Existing Password</label>\\n            <div class=\\\"input-group col-sm-9\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-lock\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"oldpassword\\\" [formControl]=\\\"oldpassword\\\" placeholder=\\\"Existing Password\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"passwordForm.get('oldpassword').dirty && passwordForm.get('oldpassword').errors\\\">\\n                <span class=\\\"col-sm-3\\\"></span>\\n                <span class=\\\"col-sm-9\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('oldpassword').errors.required\\\">\\n                    Please enter existing password\\n                </span>\\n            </div>\\n        </div>\\n  \\n        <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup').errors }\\\">\\n  \\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.password').invalid && passwordForm.get('passwordGroup.password').dirty}\\\">\\n                <label for=\\\"password\\\" class=\\\"col-sm-3 control-label\\\">New Password</label>\\n                <div class=\\\"input-group col-sm-9\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [formControl]=\\\"password\\\" placeholder=\\\"New Pasword\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\"  *ngIf=\\\"passwordForm.get('passwordGroup.password').dirty && passwordForm.get('passwordGroup.password').errors\\\">\\n                    <span class=\\\"col-sm-3\\\"></span>\\n                    <span class=\\\"col-sm-9\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.required\\\">\\n                        Please enter password\\n                    </span>\\n                    <span class=\\\"col-sm-9\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.pattern\\\">\\n                        Password must be minimum 6 and maximum 12 characters AND contain one letter, number & special characters\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.retypepass').invalid && passwordForm.get('passwordGroup.retypepass').dirty}\\\">\\n                <label for=\\\"retypepass\\\" class=\\\"col-sm-3 control-label\\\">Retype Password <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-9\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"(passwordForm.get('passwordGroup.retypepass').touched || passwordForm.get('passwordGroup.retypepass').dirty) && (passwordForm.get('passwordGroup.retypepass').errors || passwordForm.get('passwordGroup').errors)\\\">\\n                    <span class=\\\"col-sm-3\\\"></span>\\n                    <span class=\\\"col-sm-9\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                        Please confirm your password\\n                    </span>\\n                    <span class=\\\"col-sm-9\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                        Password do not match\\n                    </span>\\n                </div>\\n            </div>\\n  \\n        </div>\\n    \\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-3 control-label\\\"></label>\\n            <div class=\\\"col-sm-9\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"passwordForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n  \\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/password/password.component.html\n// module id = ./src/app/components/user/password/password.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent implements OnInit {\n\n  passwordForm: FormGroup;\n  userObj: any;\n  loading = false;\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n    oldpassword = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n    retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.passwordForm = this.fb.group({\n      oldpassword: this.oldpassword,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n  \n  updatePassword(formdata:any): void {\n    if (this.passwordForm.dirty && this.passwordForm.valid) {\n      let theForm = this.passwordForm.value;\n      const thePass = this.passwordForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n      this.loading = true;\n      this.userService.updatePassword(this.userObj.userid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n          }\n          this.passwordForm.reset();\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n  onBack(): void {\n    this.router.navigate(['/report']);\n  }\n}\n\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n  let passwordControl = c.get('password');\n  let confirmControl = c.get('retypepass');\n\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n      return null;\n  }\n  return { 'mismatchedPassword': true };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/password/password.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/postregistered/postregistered.component.css\n// module id = ./src/app/components/user/postregistered/postregistered.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Confirmation</h3>\\n  </div>\\n  <div *ngIf=\\\"this.uname != 'err'\\\" class=\\\"panel panel-success\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Success</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <h4>Thank You !</h4>\\n          <!-- <p>{{ this.remarks3.value }}</p> -->\\n          <p>An email has been sent to your email address. Please access your email account and do verification.</p>\\n          <p>Below is the account information for your reference,</p>\\n          <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-xs-3 col-sm-2\\\" style=\\\"text-align:right;\\\">Label:</div>\\n              <div class=\\\"col-xs-9 col-sm-10\\\" style=\\\"padding:0;\\\">{{ this.uname }}</div>\\n            </div>\\n            <div class=\\\"row rowmarginsearch\\\">\\n              <div class=\\\"col-xs-3 col-sm-2\\\" style=\\\"text-align:right;\\\">Email:</div>\\n              <div class=\\\"col-xs-9 col-sm-10\\\" style=\\\"padding:0;\\\">{{ this.qemailto }}</div>\\n            </div>\\n          <br>\\n          <div class=\\\"col-sm-12\\\" style=\\\"margin:0;padding:0;\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onLogin()\\\" class=\\\"btn btn-info\\\">Back to Login</button>\\n          </div>  \\n      </div>\\n  </div>\\n  <div *ngIf=\\\"this.uname == 'err'\\\" class=\\\"panel panel-danger\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Error</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <!-- <p>Oops, Sorry.. {{ this.remarks4.value }}</p> -->\\n          <p>Oops, Sorry.. There is failure while our system process the registration. Please try again later.</p>\\n          <br>\\n          <div class=\\\"col-sm-12\\\" style=\\\"margin:0;padding:0;\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onLogin()\\\" class=\\\"btn btn-info\\\">Back to Login</button>\\n          </div>  \\n      </div>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/postregistered/postregistered.component.html\n// module id = ./src/app/components/user/postregistered/postregistered.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-postregistered',\n  templateUrl: './postregistered.component.html',\n  styleUrls: ['./postregistered.component.css']\n})\nexport class PostregisteredComponent implements OnInit {\n  private sub: Subscription;\n  uname: String;\n  //remarks: IMsconfigGroupList[];\n  csemail: IMsconfigGroupList;\n  remarks3: IMsconfigGroupList;\n  remarks4: IMsconfigGroupList;\n  qemailto: String;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private msconfigService: MsconfigService\n              ) { }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(\n      params => {\n        let param = params['nm'];\n        let strlist = param.split(\"?\");\n        this.uname = strlist[0];\n        this.qemailto = strlist[1];\n      });\n    //this.getMsconfigGroupList('REMARKS');\n    this.getMsconfigVal('REMARKS3','REMARKS');\n    this.getMsconfigVal('REMARKS4','REMARKS');\n    this.getMsconfigVal('CSEML','EMAIL');\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n/*   getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.remarks = data.data;\n        } else {\n          this.remarks = [{code:'', value:'Empty list...'}];\n        }\n      }\n    },\n    err => {\n      this.remarks = [{code:'', value:'Error ms config list'}];\n      //console.log(err);\n    });\n    \n  } */\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (code === 'CSEML') {\n            this.csemail = data.data[0];\n          } else if (code === 'REMARKS3') {\n            this.remarks3 = data.data[0];\n          } else if (code === 'REMARKS4') {\n            this.remarks4 = data.data[0];\n          }\n        } else {\n          this.csemail = {code:'', value:'Empty list...'};\n          this.remarks3 = {code:'', value:'Empty list...'};\n          this.remarks4 = {code:'', value:'Empty list...'};\n        }\n      }\n    },\n    err => {\n      this.csemail = {code:'', value:'Error ms config list'};\n      this.remarks3 = {code:'', value:'Error ms config list'};\n      this.remarks4 = {code:'', value:'Error ms config list'};\n      //console.log(err);\n    });\n  }\n/*   getremarksvalue(premarks) : String {\n    var result: String = '';\n\n    for (let oremark of this.remarks) {\n      if (premarks === oremark.code){\n        result = oremark.value;\n     }\n    }\n    return result;\n  } */\n\n  onLogin(): void {\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/postregistered/postregistered.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.css\n// module id = ./src/app/components/user/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>My Profile</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div class=\\\"clearfix\\\">\\n      <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUser(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.username }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('name').invalid && profileForm.get('name').dirty}\\\">\\n              <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [formControl]=\\\"name\\\" placeholder=\\\"Name\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('name').dirty && profileForm.get('name').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} name</span>\\n              </div>\\n          </div>\\n<!--           <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('email').invalid && profileForm.get('email').dirty}\\\">\\n              <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\">@</div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [formControl]=\\\"email\\\" placeholder=\\\"Email\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('email').dirty && profileForm.get('email').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter a valid email</span>\\n              </div>\\n          </div> -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">@</div>\\n                <div class=\\\"form-ele\\\">{{ userObj.email }}</div>\\n            </div>\\n            <div class=\\\"text-warning\\\" *ngIf=\\\"authService.currentUser.verified_email == 'N'\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Email is not verified yet. Please verify by clicking <a style=\\\"cursor:pointer\\\" (click)=\\\"verifyEmail(userObj.username, userObj.name, userObj.email)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Verify\\\">HERE</a> !</span>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('contactno').invalid && profileForm.get('contactno').dirty}\\\">\\n              <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-pencil\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactno\\\" [formControl]=\\\"contactno\\\" placeholder=\\\"Contact No\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('contactno').dirty && profileForm.get('contactno').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Contact Number</span>\\n              </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('bankaccno').invalid && profileForm.get('bankaccno').dirty}\\\">\\n              <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-pencil\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankaccno\\\" [formControl]=\\\"bankaccno\\\" placeholder=\\\"Bank Account No\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('bankaccno').dirty && profileForm.get('bankaccno').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Bank Account Number</span>\\n              </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\">\\n            <label for=\\\"bankcode\\\" class=\\\"col-sm-2 control-label\\\">Bank Code</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankcode\\\" id=\\\"bankcode\\\" placeholder=\\\"Bank Code\\\">\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('bankname').invalid && profileForm.get('bankname').dirty}\\\">\\n              <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-pencil\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankname\\\" [formControl]=\\\"bankname\\\" placeholder=\\\"Bank Name\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('bankname').dirty && profileForm.get('bankname').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Bank Name</span>\\n              </div>\\n          </div>\\n<!--           <div class=\\\"form-group\\\">\\n              <label for=\\\"usertype\\\" class=\\\"col-sm-2 control-label\\\">User Type</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.usertype }}</div>\\n              </div>\\n          </div> -->\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"lastlogin\\\" class=\\\"col-sm-2 control-label\\\">Last Login</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-calendar\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.lastlogin | date:'medium' }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-sm-2 control-label\\\"></label>\\n              <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"profileForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                  <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Cancel</button>\\n              </div>\\n          </div>\\n      </form>                \\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.html\n// module id = ./src/app/components/user/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\nimport { MatDialog } from '@angular/material';\nimport { KxInfoDialogComponent } from '../../kx-info-dialog/kx-info-dialog.component';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  profileForm: FormGroup\n  userObj: any;\n  user: IUser;\n  loading = false;\n//  dialogResult = \"\";\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private notifService: NotifService,\n    private router: Router,\n    private toastr: ToastrService,\n    private dialog: MatDialog) { }\n\n  name = new FormControl('', [Validators.required]);\n  //email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankcode = new FormControl('', [Validators.nullValidator]);\n  bankname = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.profileForm = this.fb.group({\n      name: this.name,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankcode: this.bankcode,\n      bankname: this.bankname\n    });\n\n    this.userService.getUser(this.userObj.userid).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.populateForm(this.user);\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  populateForm(data): void {\n    this.profileForm.patchValue({\n      name: data.name,\n      //email: data.email,\n      contactno: data.contactno,\n      bankaccno: data.bankaccno,\n      bankcode: data.bankcode,\n      bankname: data.bankname\n    });\n  }\n\n  updateUser(formdata:any): void {\n    if (this.profileForm.dirty && this.profileForm.valid) {\n        this.loading = true;\n        this.userService.updateUser(this.userObj.userid, this.profileForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n            let theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n            theUser.user.name = this.profileForm.value.name;\n            localStorage.setItem('currentUser', JSON.stringify(theUser));\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      }\n    }\n    \n    verifyEmail(username, name, email) {\n      let payload: any = {};\n      payload.userid = this.userObj.userid;\n      payload.email = email;\n      payload.name = name;\n      payload.username = username;\n      this.loading = true;\n      this.userService.pubemailVerify(payload)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n            disableClose: true,\n            width: '400px',\n            data: 'Hi ' + name + ', We are sorry to inform that the email verification failed to be sent to ' + email + '. Please try again in few minutes.'\n          });\n          //this.toastr.error(data.message);\n        } else {\n          this.loading = false;\n          let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n            disableClose: true,\n            width: '400px',\n            data: 'Hi ' + name + ', email verification has been sent to ' + email + '. Please follow the instruction in the email.'\n          });   \n        }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n/*  verifyEmail(username, name, email) {\n      let payload: any = {};\n      payload.email = email;\n      payload.name = name;\n      payload.username = username;\n      this.loading = true;\n      this.userService.emailVerify(payload)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          this.toastr.error(data.message);\n        } else {\n          const nm = data.name;\n          let payload1: any = {};\n          payload1.emailto = email;\n          payload1.vlink = data.vlink;\n          this.notifService.sendemailverification(payload1)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n                disableClose: true,\n                width: '400px',\n                data: 'Hi ' + name + ', We are sorry to inform that the email verification failed to be sent to ' + email + '. Please try again in few minutes.'\n              });\n              //below code is to get result from modal dialog\n              // dialogRef.afterClosed().subscribe(result => {\n              //  console.log(`Dialog closed: ${result}`);\n              //  this.dialogResult = result;\n              //}); \n            } else {\n              this.loading = false;\n              let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n                disableClose: true,\n                width: '400px',\n                data: 'Hi ' + name + ', email verification has been sent to ' + email + '. Please follow the instruction in the email.'\n              });\n            }\n          },\n          err => {\n            this.loading = false;\n            let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n              disableClose: true,\n              width: '400px',\n              data: err\n            });\n            //console.log(err);\n          });   \n        }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    } */\n\n    onBack(): void {\n      this.router.navigate(['/report']);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/profile/profile.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.css\n// module id = ./src/app/components/user/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Register Label</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser(registerForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('name').invalid && registerForm.get('name').dirty}\\\">\\n          <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Label Name <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Label Name\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('name').dirty && registerForm.get('name').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('name').errors.required\\\">\\n                  Please enter your label name\\n              </span>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('email').invalid && registerForm.get('email').dirty}\\\">\\n          <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\">@</div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('email').invalid\\\">\\n                  Please enter a valid email\\n              </span>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('contactno').invalid && registerForm.get('contactno').dirty}\\\">\\n        <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-earphone\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"contactno\\\" id=\\\"contactno\\\" placeholder=\\\"Contact No\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('contactno').dirty && registerForm.get('contactno').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('contactno').errors.required\\\">\\n                Please enter your contact no\\n            </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('bankaccno').invalid && registerForm.get('bankaccno').dirty}\\\">\\n        <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankaccno\\\" id=\\\"bankaccno\\\" placeholder=\\\"Bank Account No\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('bankaccno').dirty && registerForm.get('bankaccno').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('bankaccno').errors.required\\\">\\n                Please enter your bank account no\\n            </span>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"bankcode\\\" class=\\\"col-sm-2 control-label\\\">Bank Code</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankcode\\\" id=\\\"bankcode\\\" placeholder=\\\"Bank Code\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('bankname').invalid && registerForm.get('bankname').dirty}\\\">\\n        <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-pencil\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankname\\\" id=\\\"bankname\\\" placeholder=\\\"Bank Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('bankname').dirty && registerForm.get('bankname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('bankname').errors.required\\\">\\n                Please enter your bank name\\n            </span>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('username').invalid && registerForm.get('username').dirty}\\\">\\n          <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('username').dirty && registerForm.get('username').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.required\\\">\\n                  Please enter username\\n              </span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.minlength\\\">\\n                  Username must be longer than 3 characters.\\n              </span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.maxlength\\\">\\n                  Username cannot be longer than 16 characters.\\n              </span>\\n          </div>\\n      </div>\\n\\n       <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup').errors }\\\">\\n           \\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.password').invalid && registerForm.get('passwordGroup.password').dirty}\\\">\\n              <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">Password <sup>*</sup></label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Pasword\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\"  *ngIf=\\\"registerForm.get('passwordGroup.password').dirty && registerForm.get('passwordGroup.password').errors\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.required\\\">\\n                      Please enter password\\n                  </span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.pattern\\\">\\n                      Password must be minimum 6 and maximum 12 characters AND contain capital letter, number or special characters\\n                  </span>\\n              </div>\\n          \\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.retypepass').invalid && registerForm.get('passwordGroup.retypepass').dirty}\\\">\\n              <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\">Retype Password <sup>*</sup></label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"(registerForm.get('passwordGroup.retypepass').touched || registerForm.get('passwordGroup.retypepass').dirty) && (registerForm.get('passwordGroup.retypepass').errors || registerForm.get('passwordGroup').errors)\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                      Please confirm your password\\n                  </span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                      Password do not match\\n                  </span>\\n              </div>\\n          </div>\\n       </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\"></label>\\n          <div class=\\\"col-sm-5\\\" style=\\\"padding:0;margin:0;\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n              <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n          </div>\\n          <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n              <sup>*</sup> required\\n          </div>\\n      </div>\\n  </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.html\n// module id = ./src/app/components/user/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private userService: UserService,\n    private notifService: NotifService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  \n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankcode = new FormControl('', [Validators.nullValidator]);\n  bankname = new FormControl('', [Validators.required]);\n  username = new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]);\n  password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n  retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      name: this.name,\n      email: this.email,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankcode: this.bankcode,\n      bankname: this.bankname,\n      username: this.username,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n/*   registerUser(formdata:any): void {\n    if (this.registerForm.dirty && this.registerForm.valid) {\n      let theForm = this.registerForm.value;      \n      const thePass = this.registerForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n      this.loading = true;\n      this.userService.register(theForm)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          this.registerForm.reset();\n          this.toastr.error(data.message);\n        } else {\n          //this.toastr.success(data.message);\n          //this.loading = false;\n          const nm = data.name;\n          let payload: any = {};\n          payload.emailto = theForm.email;\n          payload.vlink = data.vlink;\n          this.notifService.sendemailverification(payload)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              this.router.navigate([`postregistered/err?${theForm.email}`]);\n            } else {\n              this.loading = false;\n              this.router.navigate([`postregistered/${nm}?${theForm.email}`]);\n            }\n          },\n          err => {\n            this.loading = false;\n            this.toastr.error(err);\n            //console.log(err);\n          });   \n          this.registerForm.reset();\n        }\n        //this.registerForm.reset();\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n\n    }\n  } */\n  registerUser(formdata:any): void {\n    if (this.registerForm.dirty && this.registerForm.valid) {\n      let theForm = this.registerForm.value;      \n      const thePass = this.registerForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n      this.loading = true;\n      this.userService.registerlabel(theForm)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          this.toastr.error(data.message);\n          this.router.navigate([`postregistered/err?${theForm.email}`]);\n        } else {\n          //this.toastr.success(data.message);\n          //this.loading = false;\n          const nm = data.name;\n          this.loading = false;\n          this.router.navigate([`postregistered/${nm}?${theForm.email}`]);\n        }\n        this.registerForm.reset();\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n}\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n  let passwordControl = c.get('password');\n  let confirmControl = c.get('retypepass');\n\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n      return null;\n  }\n  return { 'mismatchedPassword': true };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/register/register.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/resetuserpasswd/resetuserpasswd.component.css\n// module id = ./src/app/components/user/resetuserpasswd/resetuserpasswd.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Reset Password</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"resetPassword(passwordForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n  \\n        <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup').errors }\\\">\\n  \\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.password').invalid && passwordForm.get('passwordGroup.password').dirty}\\\">\\n                <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">New Password</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [formControl]=\\\"password\\\" placeholder=\\\"New Pasword\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\"  *ngIf=\\\"passwordForm.get('passwordGroup.password').dirty && passwordForm.get('passwordGroup.password').errors\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.required\\\">\\n                        Please enter password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.pattern\\\">\\n                        Password must be minimum 6 and maximum 12 characters AND contain one letter, number & special characters\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.retypepass').invalid && passwordForm.get('passwordGroup.retypepass').dirty}\\\">\\n                <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\">Retype Password <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"(passwordForm.get('passwordGroup.retypepass').touched || passwordForm.get('passwordGroup.retypepass').dirty) && (passwordForm.get('passwordGroup.retypepass').errors || passwordForm.get('passwordGroup').errors)\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                        Please confirm your password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                        Password do not match\\n                    </span>\\n                </div>\\n            </div>\\n  \\n        </div>\\n    \\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"passwordForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            </div>\\n        </div>\\n    </form>\\n  \\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/resetuserpasswd/resetuserpasswd.component.html\n// module id = ./src/app/components/user/resetuserpasswd/resetuserpasswd.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { UserService } from '../../../services/user.service';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-resetuserpasswd',\n  templateUrl: './resetuserpasswd.component.html',\n  styleUrls: ['./resetuserpasswd.component.css']\n})\nexport class ResetuserpasswdComponent implements OnInit {\n  private sub: Subscription;\n  passwordForm: FormGroup;\n  loading = false;\n\n  constructor(private fb: FormBuilder, \n    private route: ActivatedRoute,\n    private router: Router,\n    private notifService: NotifService,\n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private userService: UserService\n  ) { }\n    vhash: String;\n    password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n    retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.loading = true;\n    this.sub = this.route.queryParams.subscribe(\n      params => {\n        let hash = params['id'];\n        this.notifService.pageverification(hash)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.router.navigate(['login']);\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.vhash = data.hash;\n          }\n        },\n        err => {\n          this.loading = false;\n          this.router.navigate(['login']);\n          //console.log(err);\n          this.toastr.error(err);\n        }); \n      });\n    this.passwordForm = this.fb.group({\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  resetPassword(formdata:any): void {\n    if (this.passwordForm.dirty && this.passwordForm.valid) {\n      let theForm = this.passwordForm.value;\n      const thePass = this.passwordForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      theForm.hash = this.vhash;\n      delete theForm.passwordGroup;\n      this.loading = true;\n      this.userService.doResetPasswd(theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n          }\n          this.passwordForm.reset();\n          this.router.navigate(['login']);\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n\n}\n\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n  let passwordControl = c.get('password');\n  let confirmControl = c.get('retypepass');\n\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n      return null;\n  }\n  return { 'mismatchedPassword': true };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/resetuserpasswd/resetuserpasswd.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/updateemail/updateemail.component.css\n// module id = ./src/app/components/user/updateemail/updateemail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Change email</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div class=\\\"clearfix\\\">\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateEmail(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"oldemail\\\" class=\\\"col-sm-2 control-label\\\">Existing Email</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\">@</div>\\n                <div class=\\\"form-ele\\\">{{ userObj.email }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('email').invalid && profileForm.get('email').dirty}\\\">\\n          <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">New Email</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-pencil\\\"></i></div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [formControl]=\\\"email\\\" placeholder=\\\"New Email\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\"  *ngIf=\\\"profileForm.get('email').dirty && profileForm.get('email').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">\\n                  Please enter email\\n              </span>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\"></label>\\n          <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"profileForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Update</button>\\n              <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Cancel</button>\\n          </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/updateemail/updateemail.component.html\n// module id = ./src/app/components/user/updateemail/updateemail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\n\n@Component({\n  selector: 'app-updateemail',\n  templateUrl: './updateemail.component.html',\n  styleUrls: ['./updateemail.component.css']\n})\nexport class UpdateemailComponent implements OnInit {\n  profileForm: FormGroup\n  userObj: any;\n  user: IUser;\n  loading = false;\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  email = new FormControl('', [Validators.email]);\n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.profileForm = this.fb.group({\n      email: this.email\n    });\n  }\n\n  updateEmail(formdata:any): void {\n    if (this.profileForm.dirty && this.profileForm.valid) {\n        this.loading = true;\n        this.userService.updateEmail(this.userObj.userid, this.profileForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n            let theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n            theUser.user.email = this.profileForm.value.email;\n            theUser.user.verified_email = \"N\";\n            localStorage.setItem('currentUser', JSON.stringify(theUser));\n          }\n      },\n      err => {\n        this.loading = false;\n        //console.log(err);\n        this.toastr.error(err);\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/report']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/updateemail/updateemail.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/usermgt.component.css\n// module id = ./src/app/components/usermgt/usermgt.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>LABEL APPROVAL</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    \\n              <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label for=\\\"username\\\" class=\\\"col-sm-2 paddingsearch\\\">Username</label>\\n                      <div class=\\\"col-sm-10\\\">\\n                          <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [formControl]=\\\"username\\\" placeholder=\\\"User Name\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                    <label for=\\\"name\\\" class=\\\"col-sm-2 paddingsearch\\\">Name</label>\\n                    <div class=\\\"col-sm-10\\\">\\n                        <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div> -->\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [formControl]=\\\"name\\\" placeholder=\\\"Label Name\\\">\\n                    </div>\\n                  </div>\\n              </div>\\n                <div class=\\\"row rowmarginsearch\\\">\\n                  <div class=\\\"col-sm-6 col-md-6\\\">\\n                      <label class=\\\"col-sm-2 paddingsearch\\\">      </label>\\n                      <div class=\\\"col-sm-5\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                      </div>\\n                  </div>                  \\n              </div>\\n          </form>\\n        </div>\\n    </div>\\n\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"this.loading == false && labellist && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Pending Approval List</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            No Pending Labels found.\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"this.loading == false && labellist && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">{{reportTitle}} <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n                <div class=\\\"table-responsive\\\"> \\n                        <table class=\\\"table table-hover\\\">\\n                            <thead>\\n                                    <tr>\\n                                        <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('username')\\\">User Name</a></th>\\n                                        <th scope=\\\"col\\\" width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('name')\\\">Label Name</a></th>\\n                                        <th scope=\\\"col\\\" width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('email')\\\">Email</a></th>\\n                                        <!-- <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('verified_email')\\\">Email Verified?</a></th> -->\\n                                        <th scope=\\\"col\\\" width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('status')\\\">Status</a></th>\\n                                        <th scope=\\\"col\\\" width=\\\"20%\\\">Action</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor='let lbl of labellist; let lblIndex = index'>\\n                                        <td scope=\\\"row\\\" data-label=\\\"Username\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"showLabel(lbl._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ lbl.username}}</a></td>\\n                                        <td data-label=\\\"Name\\\">{{ lbl.name}}</td>\\n                                        <td data-label=\\\"Email\\\">{{ lbl.email}}</td>\\n                                        <!-- <td>{{ lbl.verified_email }}</td> -->\\n                                        <td data-label=\\\"Status\\\">{{ lbl.stsvalue}}</td>\\n                                        <td data-label=\\\"Action\\\">\\n                                            <!-- <button type=\\\"button\\\" class=\\\"btn-xs btn-success\\\" aria-label=\\\"Activate\\\" (click)=\\\"activateLabel(lbl._id, lbl.name, lbl.status)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Activate Label\\\">\\n                                                <span class=\\\"glyphicon glyphicon-ok\\\" aria-hidden=\\\"true\\\"></span>\\n                                            </button> -->\\n                                            <a style=\\\"cursor:pointer;color:darkgreen\\\" aria-label=\\\"Approve\\\" (click)=\\\"activateLabel(lblIndex, lbl._id, lbl.name, lbl.status, lbl.email,lbl.username)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Approve Label\\\"><i class=\\\"fa fa-check fa-2x\\\"></i></a>\\n                                            <!-- <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Deactivate\\\" (click)=\\\"deactivateLabel(lbl._id, lbl.name, lbl.status)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Deactivate Label\\\">\\n                                                <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                                            </button> -->\\n                                            &nbsp;&nbsp;&nbsp;\\n                                            <a style=\\\"cursor:pointer;color:red\\\" aria-label=\\\"Reject\\\" (click)=\\\"deactivateLabel(lblIndex, lbl._id, lbl.name, lbl.status, lbl.email, lbl.username)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Reject Label\\\"><i class=\\\"fa fa-times fa-2x\\\"></i></a>\\n                                        </td>\\n                                    </tr>     \\n                                </tbody>    \\n                        </table>\\n                </div>\\n                <div style=\\\"text-align:center\\\" *ngIf=\\\"labellist && totalrows > 10\\\">\\n                        <nav aria-label=\\\"Page navigation\\\">\\n                            <ul class=\\\"pagination\\\">\\n                                <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                    <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                                </li>\\n                            </ul>\\n                        </nav>\\n                </div> \\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/usermgt.component.html\n// module id = ./src/app/components/usermgt/usermgt.component.html\n// module chunks = main","import { Component, OnInit,OnDestroy } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params, NavigationEnd } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service';\nimport { AuthService } from '../../services/auth.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { IUser } from '../../interface/user';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\nimport { NotifService } from '../../services/notif.service';\nimport { Globals } from '../../app.global';\n\n@Component({\n  selector: 'app-usermgt',\n  templateUrl: './usermgt.component.html',\n  styleUrls: ['./usermgt.component.css']\n})\nexport class UsermgtComponent implements OnInit {\n  navigationSubscription;\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  labellist: IUser[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelname: String;\n  qusername: String;\n  qpage: number;\n  qsort: String;\n  loading = false;\n  urlkaxet: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private notifService: NotifService,\n    private globals: Globals,\n  ) { \n    // subscribe to the router events. Store the subscription so we can\n    // unsubscribe later.\n    this.navigationSubscription = this.router.events.subscribe((e: any) => {\n      // If it is a NavigationEnd event re-initalise the component\n      if (e instanceof NavigationEnd) {\n        this.ngOnInit();\n      }\n    });\n  }\n  name = new FormControl('',[Validators.nullValidator]);\n  username = new FormControl('',[Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      name: this.name,\n      username: this.username,\n    });\n    this.urlkaxet = this.globals.kaxeturl;\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelname = params['name'] || '';\n      this.qusername = params['username'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.name = this.qlabelname;\n      payload.username = this.qusername;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n      this.reportForm.patchValue({\n        name: this.qlabelname,\n        username: this.qusername\n      });\n    })\n  }\n  ngOnDestroy() {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['usermanagement'],\n        {\n          queryParams: {\n            name: this.reportForm.value.name,\n            username: this.reportForm.value.username,\n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.labelmgtService.getPendingUserLabels(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.labellist = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n\n        this.qlabelname = formval.name;\n        this.qusername = formval.username;\n        this.reportTitle = 'Pending Approval List ';\n        this.reportForm.patchValue({\n          name: this.qlabelname,\n          username: this.qusername\n        });\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['usermanagement'],\n      {\n        queryParams: {\n          name: this.qlabelname,\n          username: this.qusername,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortLabel(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['usermanagement'],\n      {\n        queryParams: { \n          name: this.qlabelname,\n          username: this.qusername,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  \n  activateLabel(idx, userid: string, labelname: string, status: string, email: string, username: string) {\n    \n    this.loading = true;\n    if (status == 'STSACT') {\n      this.loading = false;\n      this.toastr.warning('The label is already active.');\n    } else {\n      if (status === 'STSRJCT') {\n        this.loading = false;\n        this.toastr.warning('The label is already rejected.');\n      } else {\n        if(confirm('Do you really want to activate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.labelid = userid;\n          payloadData.emailto = email;\n          payloadData.vlink = this.urlkaxet;\n          payloadData.username = username;\n          payloadData.status = 'STSACT';\n          this.labelmgtService.pubupdateLabelstatus(this.userObj.userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              this.loading = false;\n              this.labellist.splice(idx, 1);\n              this.totalrows = this.totalrows - 1;\n              this.toastr.success(data.message);\n              /* this.router.navigate(['usermanagement'],\n                {\n                  queryParams: { \n                    name: this.qlabelname,\n                    username: this.qusername,\n                    page: this.qpage || 1, \n                    sortby: this.qsort }\n                }\n              ); */\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  }\n/*   activateLabel(userid: string, labelname: string, status: string, email: string, username: string) {\n\n    this.loading = true;\n    if (status == 'STSACT') {\n      this.loading = false;\n      this.toastr.warning('The label is already active.');\n    } else {\n      if (status === 'STSRJCT') {\n        this.loading = false;\n        this.toastr.warning('The label is already rejected.');\n      } else {\n        if(confirm('Do you really want to activate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.status = 'STSACT';\n          this.labelmgtService.updateLabelStatus(userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              let payload: any = {};\n              payload.emailto = email;\n              payload.vlink = this.urlkaxet;\n              payload.username = username;\n              let successmsg = data.message;\n              this.notifService.sendemailwelcome(payload)\n              .subscribe(data => {\n                this.loading = false;\n                if (data.success === true) {\n                  this.toastr.success(successmsg);\n                } else {\n                  this.toastr.warning(successmsg + '. However welcome email not send. ' + data.message);\n                }\n                this.router.navigate(['usermanagement'],\n                  {\n                    queryParams: { \n                      name: this.qlabelname,\n                      username: this.qusername,\n                      page: this.qpage || 1, \n                      sortby: this.qsort }\n                  }\n                );\n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  } */\n  \n  deactivateLabel(idx, userid: string, labelname: string, status: string, email: string, username: string) {\n    \n    this.loading = true;\n    if (status === 'STSPEND') {\n      if(confirm('Do you really want to reject this label: ' + labelname + ' record?')){\n        let payloadData: any = {};\n        payloadData.labelid = userid;\n        payloadData.username = username;\n        payloadData.status = 'STSRJCT';\n        this.labelmgtService.pubupdateLabelstatus(this.userObj.userid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.labellist.splice(idx, 1);\n            this.totalrows = this.totalrows - 1;\n            this.toastr.success(data.message);\n            /* this.router.navigate(['usermanagement'],\n                {\n                  queryParams: { \n                    name: this.qlabelname,\n                    username: this.qusername,\n                    page: this.qpage || 1, \n                    sortby: this.qsort }\n                }\n            ); */\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      } else {\n        this.loading = false;\n      }\n    } else {\n      if (status != 'STSACT') {\n        this.loading = false;\n        this.toastr.warning('The label is already NOT active.');\n      } else {\n        if(confirm('Do you really want to deactivate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.labelid = userid;\n          payloadData.emailto = email;\n          payloadData.username = username;\n          payloadData.status = 'STSINACT';\n          this.labelmgtService.pubupdateLabelstatus(this.userObj.userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              this.loading = false;\n              this.labellist.splice(idx, 1);\n              this.totalrows = this.totalrows - 1;\n              this.toastr.success(data.message);\n/*               this.router.navigate(['usermanagement'],\n                  {\n                    queryParams: { \n                      name: this.qlabelname,\n                      username: this.qusername,\n                      page: this.qpage || 1, \n                      sortby: this.qsort }\n                  }\n              ); */\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  }\n/*   deactivateLabel(userid: string, labelname: string, status: string, email: string, username: string) {\n    \n    this.loading = true;\n    if (status === 'STSPEND') {\n      if(confirm('Do you really want to reject this label: ' + labelname + ' record?')){\n        let payloadData: any = {};\n        payloadData.status = 'STSRJCT';\n        this.labelmgtService.updateLabelStatus(userid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n            this.router.navigate(['usermanagement'],\n                {\n                  queryParams: { \n                    name: this.qlabelname,\n                    username: this.qusername,\n                    page: this.qpage || 1, \n                    sortby: this.qsort }\n                }\n            );\n          }\n        },\n        err => {\n          this.loading = false;\n          //console.log(err);\n          this.toastr.error(err);\n        });\n      } else {\n        this.loading = false;\n      }\n    } else {\n      if (status != 'STSACT') {\n        this.loading = false;\n        this.toastr.warning('The label is already NOT active.');\n      } else {\n        if(confirm('Do you really want to deactivate this label: ' + labelname + ' record?')){\n          let payloadData: any = {};\n          payloadData.status = 'STSINACT';\n          this.labelmgtService.updateLabelStatus(userid, payloadData)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              if (data.errcode){\n                this.authService.logout();\n                this.router.navigate(['login']);\n              }\n              this.toastr.error(data.message);\n            } else {\n              let payload: any = {};\n              payload.emailto = email;\n              payload.username = username;\n              let successmsg = data.message;\n              this.notifService.senddeactivation(payload)\n              .subscribe(data => {\n                this.loading = false;\n                if (data.success === true) {\n                  this.toastr.success(successmsg);\n                } else {\n                  this.toastr.warning(successmsg + '. However welcome email not send. ' + data.message);\n                }\n                this.router.navigate(['usermanagement'],\n                    {\n                      queryParams: { \n                        name: this.qlabelname,\n                        username: this.qusername,\n                        page: this.qpage || 1, \n                        sortby: this.qsort }\n                    }\n                );\n              },\n              err => {\n                this.loading = false;\n                //console.log(err);\n                this.toastr.error(err);\n              });\n            }\n          },\n          err => {\n            this.loading = false;\n            //console.log(err);\n            this.toastr.error(err);\n          });\n        } else {\n          this.loading = false;\n        }\n      }\n    }\n  } */\n  \n  showLabel(userid): void {\n    this.router.navigate([`viewlabel/${userid}`],\n      {\n        queryParams: { \n          name: this.qlabelname,\n          username: this.qusername,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usermgt/usermgt.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/viewlabel/viewlabel.component.css\n// module id = ./src/app/components/usermgt/viewlabel/viewlabel.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>LABEL DETAILS</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div class=\\\"clearfix\\\">\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUser(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.username }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.username }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.name }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.name }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.email }}\\n                <!-- <div class=\\\"input-group-addon\\\">@</div>\\n                <div class=\\\"form-ele\\\">{{ user.email }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.contactno }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.contactno }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.bankaccno }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.bankaccno }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.bankname }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.bankname }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastlogin\\\" class=\\\"col-sm-2 control-label\\\">Last Login</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.lastlogin | date:'medium' }}\\n                <!-- <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-calendar\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.lastlogin | date:'medium' }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"balance\\\" class=\\\"col-sm-2 control-label\\\">Balance</label>\\n            <div class=\\\"form-ele col-sm-10\\\">{{ user.balance | currency:'IDR'}}\\n                <!-- <div class=\\\"input-group-addon\\\">Rp</div>\\n                <div class=\\\"form-ele\\\">{{ user.balance }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">       </label>\\n            <div class=\\\"col-sm-10\\\" style=\\\"padding:0;margin:0;\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>                \\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/viewlabel/viewlabel.component.html\n// module id = ./src/app/components/usermgt/viewlabel/viewlabel.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\n\n@Component({\n  selector: 'app-viewlabel',\n  templateUrl: './viewlabel.component.html',\n  styleUrls: ['./viewlabel.component.css']\n})\nexport class ViewlabelComponent implements OnInit {\n  profileForm: FormGroup\n  user: IUser;\n  loading = false;\n  private sub: Subscription;\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankname = new FormControl('', [Validators.required]);\n  lastlogin = new FormControl('', [Validators.required]);\n  balance = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(\n      params => {\n        let labelid = params['id'];\n        this.getLabel(labelid);\n      });\n    this.profileForm = this.fb.group({\n      name: this.name,\n      email: this.email,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankname: this.bankname,\n      lastlogin: this.lastlogin,\n      balance: this.balance\n    });\n  }\n  \n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLabel(id){\n    this.userService.getUser(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.populateForm(this.user);\n      }\n    },\n    err => {\n      this.loading = false;\n      //console.log(err);\n      this.toastr.error(err);\n    });   \n  }\n\n  populateForm(data): void {\n    this.profileForm.patchValue({\n      name: data.name,\n      email: data.email,\n      contactno: data.contactno,\n      bankaccno: data.bankaccno,\n      bankname: data.bankname,\n      lastlogin: this.lastlogin,\n      balance: this.balance\n    });\n  }\n  onBack(): void {\n    this.router.navigate(['../usermanagement'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usermgt/viewlabel/viewlabel.component.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivate } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\nimport { ToastrService } from '../common/toastr.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n        private router: Router,\n        private toastr: ToastrService) { }\n    \n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n        return this.checkLoggedIn(state.url);\n    }\n\n    checkLoggedIn(url: string): boolean {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        }\n\n        this.toastr.info(\"Please login to access this page.\")\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class ActivitylogService {\n  public jwtToken: String;\n  constructor(private http: Http) { \n    //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    var theUser: any;\n    setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  getActivitylogAggs(userid, oActivitylog) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/activitylogagg/${userid}`, JSON.stringify(oActivitylog), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAdmActivitylogAggs(userid, oActivitylog) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/admactivitylogagg/${userid}`, JSON.stringify(oActivitylog), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/activitylog.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class MsconfigService {\n  public jwtToken: string;\n  public adminurl: String;\n\n  constructor(private http: Http, private globals: Globals) {\n      this.adminurl = globals.adminurl;\n      //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      var theUser: any;\n      setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n      if (theUser) {\n        this.jwtToken = theUser.token;\n      }            \n   }\n\n  uploadGenrephoto(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(`${this.adminurl}/api/genrephotoupload`, oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  \n  deleteGenrephoto(oGenre){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(`${this.adminurl}/api/genrephotodelete`, oGenre, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  saveMsconfig(userid, oMsconfig){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/msconfig/${userid}`, JSON.stringify(oMsconfig), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteMsconfig(msconfigid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`${this.adminurl}/api/msconfig/${msconfigid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateMsconfigfile(userid, oMsconfig){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/msconfig/${userid}`, JSON.stringify(oMsconfig), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggMsconfig(oMsconfig) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/mscfgaggreport`, JSON.stringify(oMsconfig), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfigAgg(msconfigid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/msconfigagg/${msconfigid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfig(msconfigid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/msconfig/${msconfigid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfigbygroup(msconfiggroup) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/msconfigbygroup/${msconfiggroup}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfigvalue(msconfigcode, msconfiggroup) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/msconfigvalue/${msconfigcode}?group=${msconfiggroup}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  getMsconfiggroup() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/msconfiggroup`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/admin/msconfig.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class SongadminService {\n  public jwtToken: string;\n  public adminurl: String;\n  \n  constructor(private http: Http, private globals: Globals) {\n      this.adminurl = globals.adminurl;\n      //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      var theUser: any;\n      setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n      if (theUser) {\n        this.jwtToken = theUser.token;\n      }        \n   }\n  \n  publishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/publishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  cancelpublishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/cancelpublishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getAggSongs(oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/songadm/aggreport`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getAggSongsnonpublish(oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/songadm/aggreportnonpublish`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getPendingSongCount(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/songadm/pendingsongcount/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  getSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/songadm/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongAgg(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/songaggregate/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/admin/songadmin.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class UsermgtService {\n  public jwtToken: string;\n  public adminurl: String;\n\n  constructor(private http: Http, private globals: Globals) {\n      this.adminurl = globals.adminurl;\n      //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      var theUser: any;\n      setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n      if (theUser) {\n        this.jwtToken = theUser.token;\n      }    \n   }\n\n   registerAdmin(oUser) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post(`${this.adminurl}/registerAdmin`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  } \n\n  getUserLabels(oLabels) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/userlabelreport`, JSON.stringify(oLabels), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getPendingUserLabels(oLabels) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/pendinglabelreport`, JSON.stringify(oLabels), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getPendingLabelCount(userid, oLabels) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/pendinglabelcount/${userid}`, JSON.stringify(oLabels), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateLabelStatus(labelid, oLabel){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/changelabelstatus/${labelid}`, JSON.stringify(oLabel), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubupdateLabelstatus(userid, oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubchangelabelstatus/${userid}`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  updateLabelBalance(labelid, oLabel){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/changelabelbalance/${labelid}`, JSON.stringify(oLabel), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getLabelList() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/labellist`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/admin/usermgt.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class AlbumService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    var theUser: any;\n    setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  saveAlbum(userid, artistid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/${userid}?artistid=${artistid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateAlbumphoto(albumid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updatealbumphoto/${albumid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/report/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbumCount(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/albumcount/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtistAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/artistalbumreport/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getArtistAlbumsStats(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/artistalbumreportstats/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/aggreport/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggAlbumstats(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/aggstats/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  getAlbum(albumid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/album/${albumid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbumList(userid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/albumlist/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbumListbyArtist(userid,artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/albumlistbyartist/${userid}?artistid=${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteAlbum(albumid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`api/album/${albumid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  pubsaveAlbum(userid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubaddalbum/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  pubupdateAlbumphoto(albumid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubeditalbumphoto/${albumid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubdeleteAlbum(albumid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubdeletealbum/${albumid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/album.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class ArtistService {\n  public jwtToken: String;\n\n  constructor(private http: Http) {\n    var theUser: any;\n    setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  saveArtist(userid, oArtist){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artist/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubsaveArtist(userid, oArtist){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubartist/${userid}`, oArtist, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  updateArtistphoto(artistid, oArtist){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updateartistphoto/${artistid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubupdateArtistphoto(artistid, oArtist){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubupdateartistphoto/${artistid}`, oArtist, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtists(userid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artist/report/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtistCount(userid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artistcount/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggArtists(userid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artist/aggreport/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getAggArtiststats(userid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artist/aggstats/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  getArtist(artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/artist/${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtistList(userid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/artistlist/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteArtist(artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`api/artist/${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubdeleteArtist(artistid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubdelartist/${artistid}`,JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/artist.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nimport { IUser } from '../interface/user';\n\n@Injectable()\nexport class AuthService {\n\n  public currentUser: IUser;\n  \n  constructor(private http: Http) { }\n\n  isLoggedIn(): boolean {\n    try {\n        //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n        var theUser: any;\n        setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n        if (theUser) {\n            this.currentUser = theUser.user;\n        }\n    } catch (e) {\n        return false;\n    }\n    return !!this.currentUser;\n  }\n\n  login(oUser) {\n    let headers = new Headers({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n\n    return this.http.post('api/login', JSON.stringify(oUser), options)\n    .do((response: Response) => {\n        if (response.json().success) {\n            this.currentUser = <IUser>response.json().message;\n            let userObj: any = {};\n            userObj.user = response.json().message;\n            userObj.token = response.json().token;\n\n            localStorage.setItem('currentUser', JSON.stringify(userObj)); \n        }\n        response.json();\n    })\n    .catch(this.handleError);\n  }\n\n  logout(): void {\n    this.currentUser = null;\n    setTimeout(localStorage.removeItem('currentUser'),100);\n    //Clear storage after specific time\n    var logoutTimer = setTimeout(localStorage.clear(), 100);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class FiletransferService {\n  public jwtToken: string;\n  public filetransferurl: String;\n\n  constructor(private http: Http, private globals: Globals) { \n    this.filetransferurl = globals.filetransferurl;\n    //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    var theUser: any;\n    setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n    if (theUser) {  \n      this.jwtToken = theUser.token;\n    }    \n  }\n  uploadInputFile(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    //console.log(oFile.getAll('artistimage'));\n    return this.http.post(`${this.filetransferurl}/api/inputfileupload`, oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  deleteInputFile(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(`${this.filetransferurl}/api/inputfiledelete`, oFile, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/filetransfer.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class NotifService {\n  public jwtToken: string;\n  public notifurl: String;\n\n  constructor(private http: Http, private globals: Globals) { \n    this.notifurl = globals.notifurl;\n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {  \n      this.jwtToken = theUser.token;\n    }    \n  }\n\n  sendemailverification(oLink) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post(`${this.notifurl}/sendverification`,JSON.stringify(oLink), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  sendresetpasswd(oLink) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post(`${this.notifurl}/sendresetpassword`,JSON.stringify(oLink), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  recvemailverification(hash) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.get(`${this.notifurl}/verify?id=${hash}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  pageverification(hash) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.get(`${this.notifurl}/pgverify?id=${hash}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  sendemailwelcome(oLink) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post(`${this.notifurl}/welcomemail`,JSON.stringify(oLink), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  senddeactivation(oLink) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post(`${this.notifurl}/deactivationemail`,JSON.stringify(oLink), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/notif.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class SongService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    var theUser: any;\n    setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  saveSong(userid, artistid, albumid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/${userid}?artistid=${artistid}&albumid=${albumid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  pubsaveSong(userid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubsong/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubeditSong(userid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubeditsong/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  uploadSongfiles(userid, oSong){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/uploadsong/${userid}`, oSong, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  publishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/publishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  cancelPublishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/cancelpublishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateSongPreview(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updatesongpreview/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubupdateSongPreview(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubeditsongprvw/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  updateSongFile(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updatesongfile/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubupdateSongFile(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubeditsongfile/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/song/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongAgg(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/songaggregate/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`api/song/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubdeleteSong(songid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pubdeletesong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggSongs(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/aggreport/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongs(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/report/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getSongCount(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/songcount/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongList(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/list/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getSongListstats(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/stats/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  songbuyincrement(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/songbuyincrement/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/song.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class SongpurchaseService {\n  public jwtToken: String;\n  constructor(private http: Http) { \n    //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    var theUser: any;\n    setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n  saveSongpurchase(userid, oSongpurchase){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/songpurchase/${userid}`, JSON.stringify(oSongpurchase), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  getSongpurchase(songpurchaseid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/songpurchase/${songpurchaseid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteSongpurchase(songpurchaseid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`api/songpurchase/${songpurchaseid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateStatuspurchase(songpurchaseid, oSongpurchase){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/songpurchase/${songpurchaseid}`, JSON.stringify(oSongpurchase), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getSongpurchaseAggs(userid, oSongpurchase) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/songpurchaseagg/${userid}`, JSON.stringify(oSongpurchase), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongpurchaseAgg(songpurchaseid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/songpurchaseagg/${songpurchaseid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getPendingsongpurchaseAggs(userid, oSongpurchase) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pendingsongpurchaseagg/${userid}`, JSON.stringify(oSongpurchase), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getPendingSongpurchaseCount(userid, oSongpurchase) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/pendingsongpurchasecount/${userid}`, JSON.stringify(oSongpurchase), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getAdmSongpurchaseAggs(userid, oSongpurchase) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/admsongpurchaseagg/${userid}`, JSON.stringify(oSongpurchase), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  pubSaveSongpurchasePayment(userid, oSongpurchase) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/actionpmtpurchase/${userid}`, JSON.stringify(oSongpurchase), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/songpurchase.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class TransactionService {\n  public jwtToken: String;\n  constructor(private http: Http) { \n    //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    var theUser: any;\n    setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  saveTransaction(userid, oTransaction){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/transaction/${userid}`, JSON.stringify(oTransaction), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getTransactionAggs(userid, oTransaction) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/transactionagg/${userid}`, JSON.stringify(oTransaction), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  getAdmTransactionAggs(userid, oTransaction) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/admtransactionagg/${userid}`, JSON.stringify(oTransaction), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getLabelbalance(userid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/labelbalance/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/transaction.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class UserService {\n  public jwtToken: string;\n\n  constructor(private http: Http) {\n      //const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      var theUser: any;\n      setTimeout( theUser = JSON.parse(localStorage.getItem('currentUser')), 100); \n      if (theUser) {  \n        this.jwtToken = theUser.token;\n      }    \n  }\n\n/*   uploadpreview(oFile){\n    console.log(oFile.getAll('usrimage'));\n    return this.http.post('http://localhost:2000/flupload', oFile)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n */\n  register(oUser) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post('register', JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  registerlabel(oUser) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post('registerlabel', JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getUser(userid) {\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.get(`api/user/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateUser(userid, oUser){\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.put(`api/user/${userid}`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n/*   updatePhoto(userid, oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/editphoto/${userid}`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n \n  deletePhoto(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post('http://localhost:2000/api/delphoto', JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n*/\n\n  updatePassword(userid, oUser){\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.put(`api/password/${userid}`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateEmail(userid, oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/email/${userid}`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  \n  emailVerify(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/emailverify`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  pubemailVerify(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/pubemailverify`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  resetPasswd(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`resetpwd`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  doResetPasswd(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`doresetpwd`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  private handleError(error: Response) {\n    let errMsg = error.status ? `${error.status} - ${error.statusText}`:'Ooops sorry...a server error occured. Please try again shortly.';\n    //console.error(errMsg);\n    return Observable.throw( errMsg );\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}