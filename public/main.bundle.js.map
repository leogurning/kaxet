{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.global.ts","./src/app/app.module.ts","./src/app/common/toastr.service.ts","./src/app/components/about/about.component.css","./src/app/components/about/about.component.html","./src/app/components/about/about.component.ts","./src/app/components/album/addalbum/addalbum.component.css","./src/app/components/album/addalbum/addalbum.component.html","./src/app/components/album/addalbum/addalbum.component.ts","./src/app/components/album/editalbum/editalbum.component.css","./src/app/components/album/editalbum/editalbum.component.html","./src/app/components/album/editalbum/editalbum.component.ts","./src/app/components/album/editalbumphoto/editalbumphoto.component.css","./src/app/components/album/editalbumphoto/editalbumphoto.component.html","./src/app/components/album/editalbumphoto/editalbumphoto.component.ts","./src/app/components/album/listalbum/listalbum.component.css","./src/app/components/album/listalbum/listalbum.component.html","./src/app/components/album/listalbum/listalbum.component.ts","./src/app/components/album/viewalbum/viewalbum.component.css","./src/app/components/album/viewalbum/viewalbum.component.html","./src/app/components/album/viewalbum/viewalbum.component.ts","./src/app/components/artist/addartist/addartist.component.css","./src/app/components/artist/addartist/addartist.component.html","./src/app/components/artist/addartist/addartist.component.ts","./src/app/components/artist/editartist/editartist.component.css","./src/app/components/artist/editartist/editartist.component.html","./src/app/components/artist/editartist/editartist.component.ts","./src/app/components/artist/editartistphoto/editartistphoto.component.css","./src/app/components/artist/editartistphoto/editartistphoto.component.html","./src/app/components/artist/editartistphoto/editartistphoto.component.ts","./src/app/components/artist/listartist/listartist.component.css","./src/app/components/artist/listartist/listartist.component.html","./src/app/components/artist/listartist/listartist.component.ts","./src/app/components/artist/viewartist/viewartist.component.css","./src/app/components/artist/viewartist/viewartist.component.html","./src/app/components/artist/viewartist/viewartist.component.ts","./src/app/components/dashboard/dashboard.component.css","./src/app/components/dashboard/dashboard.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/kx-info-dialog/kx-info-dialog.component.css","./src/app/components/kx-info-dialog/kx-info-dialog.component.html","./src/app/components/kx-info-dialog/kx-info-dialog.component.ts","./src/app/components/msconfig/addconfig/addconfig.component.css","./src/app/components/msconfig/addconfig/addconfig.component.html","./src/app/components/msconfig/addconfig/addconfig.component.ts","./src/app/components/msconfig/addgroup/addgroup.component.css","./src/app/components/msconfig/addgroup/addgroup.component.html","./src/app/components/msconfig/addgroup/addgroup.component.ts","./src/app/components/msconfig/editconfig/editconfig.component.css","./src/app/components/msconfig/editconfig/editconfig.component.html","./src/app/components/msconfig/editconfig/editconfig.component.ts","./src/app/components/msconfig/editconfigfile/editconfigfile.component.css","./src/app/components/msconfig/editconfigfile/editconfigfile.component.html","./src/app/components/msconfig/editconfigfile/editconfigfile.component.ts","./src/app/components/msconfig/listconfig/listconfig.component.css","./src/app/components/msconfig/listconfig/listconfig.component.html","./src/app/components/msconfig/listconfig/listconfig.component.ts","./src/app/components/msconfig/viewconfig/viewconfig.component.css","./src/app/components/msconfig/viewconfig/viewconfig.component.html","./src/app/components/msconfig/viewconfig/viewconfig.component.ts","./src/app/components/navbar/navbar.component.css","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/song/addsong/addsong.component.css","./src/app/components/song/addsong/addsong.component.html","./src/app/components/song/addsong/addsong.component.ts","./src/app/components/song/editsong/editsong.component.css","./src/app/components/song/editsong/editsong.component.html","./src/app/components/song/editsong/editsong.component.ts","./src/app/components/song/editsongfiles/editsongfiles.component.css","./src/app/components/song/editsongfiles/editsongfiles.component.html","./src/app/components/song/editsongfiles/editsongfiles.component.ts","./src/app/components/song/listsong/listsong.component.css","./src/app/components/song/listsong/listsong.component.html","./src/app/components/song/listsong/listsong.component.ts","./src/app/components/song/viewsong/viewsong.component.css","./src/app/components/song/viewsong/viewsong.component.html","./src/app/components/song/viewsong/viewsong.component.ts","./src/app/components/songmgt/songmgt.component.css","./src/app/components/songmgt/songmgt.component.html","./src/app/components/songmgt/songmgt.component.ts","./src/app/components/user/emailverification/emailverification.component.css","./src/app/components/user/emailverification/emailverification.component.html","./src/app/components/user/emailverification/emailverification.component.ts","./src/app/components/user/login/login.component.css","./src/app/components/user/login/login.component.html","./src/app/components/user/login/login.component.ts","./src/app/components/user/logout.component.ts","./src/app/components/user/password/password.component.css","./src/app/components/user/password/password.component.html","./src/app/components/user/password/password.component.ts","./src/app/components/user/postregistered/postregistered.component.css","./src/app/components/user/postregistered/postregistered.component.html","./src/app/components/user/postregistered/postregistered.component.ts","./src/app/components/user/profile/profile.component.css","./src/app/components/user/profile/profile.component.html","./src/app/components/user/profile/profile.component.ts","./src/app/components/user/register/register.component.css","./src/app/components/user/register/register.component.html","./src/app/components/user/register/register.component.ts","./src/app/components/user/updateemail/updateemail.component.css","./src/app/components/user/updateemail/updateemail.component.html","./src/app/components/user/updateemail/updateemail.component.ts","./src/app/components/usermgt/usermgt.component.css","./src/app/components/usermgt/usermgt.component.html","./src/app/components/usermgt/usermgt.component.ts","./src/app/components/usermgt/viewlabel/viewlabel.component.css","./src/app/components/usermgt/viewlabel/viewlabel.component.html","./src/app/components/usermgt/viewlabel/viewlabel.component.ts","./src/app/guards/auth.guard.ts","./src/app/services/admin/msconfig.service.ts","./src/app/services/admin/songadmin.service.ts","./src/app/services/admin/usermgt.service.ts","./src/app/services/album.service.ts","./src/app/services/artist.service.ts","./src/app/services/auth.service.ts","./src/app/services/notif.service.ts","./src/app/services/song.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,mB;;;;;;;ACAA,+MAA+M,qD;;;;;;;;;;;;;;;;ACArK;AAO1C;IALA;QAME,UAAK,GAAG,OAAO,CAAC;IAClB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;ACPkB;AAG3C;IADA;QAEI,6CAA6C;QAC7C,aAAQ,GAAW,2CAA2C,CAAC;QAC/D,6CAA6C;QAC7C,aAAQ,GAAW,2CAA2C,CAAC;IACnE,CAAC;IALY,OAAO;QADnB,yEAAU,EAAE;OACA,OAAO,CAKnB;IAAD,cAAC;CAAA;AALmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHsC;AACjB;AACwB;AACtB;AACY;AACM;AACkB;AAC3B;AACA;AACkB;AAEtE,sBAAsB;AACe;AAErC,sBAAsB;AACgC;AACN;AACM;AACI;AACF;AACF;AACY;AACI;AACF;AACZ;AAExD,oBAAoB;AACoC;AACb;AAEI;AACwB;AACE;AACS;AACA;AACH;AACV;AACD;AACY;AACU;AACA;AACA;AACH;AACkB;AACtB;AACG;AACA;AACA;AACe;AACtB;AACG;AACe;AACf;AACA;AACkB;AAC1B;AACc;AACG;AACkB;AACnC;AACe;AACH;AACM;AACA;AACY;AACZ;AACC;AAE7F,IAAM,SAAS,GAAW;IACxB,EAAC,IAAI,EAAE,EAAE,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC;IAC9C,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,wGAAiB,EAAC;IAC9C,EAAC,IAAI,EAAC,oBAAoB,EAAE,SAAS,EAAC,0HAAuB,EAAC;IAC9D,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,+FAAc,EAAC;IACxC,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,0FAAc,EAAC;IACxC,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,2FAAe,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IACnE,EAAC,IAAI,EAAC,SAAS,EAAE,SAAS,EAAC,qGAAgB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IACrE,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,wGAAiB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IACvE,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,sGAAkB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IACtE,EAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,6GAAkB,EAAE;IAC9E,EAAC,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,gHAAmB,EAAE;IACpF,EAAC,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,gHAAmB,EAAE;IAChF,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAC,+HAAwB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IAC1F,EAAC,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,gHAAmB,EAAE;IACpF,EAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,yGAAiB,EAAE;IAC5E,EAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,4GAAkB,EAAE;IAC9E,EAAC,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,4GAAkB,EAAE;IAClF,EAAC,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,4GAAkB,EAAE;IAClF,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAC,2HAAuB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IACxF,EAAC,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,qGAAgB,EAAE;IAC1E,EAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,wGAAiB,EAAE;IAC5E,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAC,uHAAsB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IACtF,EAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,wGAAiB,EAAE;IAChF,EAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,wGAAiB,EAAE;IAChF,EAAC,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,gGAAgB,EAAE;IACjF,EAAC,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,8GAAkB,EAAE;IAClF,EAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,iHAAoB,EAAE;IAClF,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mIAA0B,EAAE;IACxD,EAAC,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,gGAAgB,EAAE;IACjF,EAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,+GAAkB,EAAE;IAC9E,EAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,4GAAiB,EAAE;IAC5E,EAAC,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,kHAAmB,EAAE;IAChF,EAAC,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAE,sEAAS,CAAC,EAAE,SAAS,EAAE,kHAAmB,EAAE;IACpF,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAC,8HAAuB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;IACxF,EAAC,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAC,kHAAmB,EAAE,WAAW,EAAC,CAAC,sEAAS,CAAC,EAAC;CACjF,CAAC;AA+EF;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7ErB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,qEAAY;gBACZ,6FAAe;gBACf,+FAAc;gBACd,wGAAiB;gBACjB,wGAAiB;gBACjB,qGAAgB;gBAChB,2FAAe;gBACf,0FAAc;gBACd,sGAAkB;gBAClB,gHAAmB;gBACnB,gHAAmB;gBACnB,gHAAmB;gBACnB,6GAAkB;gBAClB,+HAAwB;gBACxB,yGAAiB;gBACjB,4GAAkB;gBAClB,4GAAkB;gBAClB,4GAAkB;gBAClB,2HAAuB;gBACvB,qGAAgB;gBAChB,wGAAiB;gBACjB,uHAAsB;gBACtB,wGAAiB;gBACjB,wGAAiB;gBACjB,0HAAuB;gBACvB,gGAAgB;gBAChB,8GAAkB;gBAClB,iHAAoB;gBACpB,mIAA0B;gBAC1B,gGAAgB;gBAChB,+GAAkB;gBAClB,4GAAiB;gBACjB,kHAAmB;gBACnB,kHAAmB;gBACnB,8HAAuB;gBACvB,kHAAmB;gBACnB,mHAAqB;aACtB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,2EAAmB;gBACnB,iEAAU;gBACV,0EAAe;gBACf,0EAAe;gBACf,4FAAoB;gBACpB,qGAAuB;gBACvB,kEAAa,CAAC,OAAO,CAAC;oBACpB,aAAa,EAAE,oEAAe,CAAC,WAAW;oBAC1C,wBAAwB,EAAE,iBAAiB;oBAC3C,oBAAoB,EAAE,KAAK;oBAC3B,aAAa,EAAE,SAAS;oBACxB,eAAe,EAAE,SAAS;oBAC1B,cAAc,EAAE,SAAS;iBAC5B,CAAC;gBACA,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;aAChC;YACD,eAAe,EAAE;gBACf,mHAAqB;aACtB;YACD,SAAS,EAAE,CAAE,4DAAO;gBAClB,8EAAa;gBACb,4EAAW;gBACX,sEAAS;gBACT,4EAAW;gBACX,gFAAa;gBACb,8EAAY;gBACZ,4EAAW;gBACX,kEAAQ;gBACR,wFAAc;gBACd,4FAAgB;gBAChB,0FAAe;gBACf,8EAAY,CAAC;YACf,SAAS,EAAE,CAAC,qEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;ACvLqB;AAI3C;IAEE;IAAgB,CAAC;IACjB,+BAAO,GAAP,UAAQ,OAAe,EAAE,KAAc;QACrC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;IAChC,CAAC;IACD,4BAAI,GAAJ,UAAK,OAAe,EAAE,KAAc;QAClC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;IAC7B,CAAC;IACD,+BAAO,GAAP,UAAQ,OAAe,EAAE,KAAc;QACrC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;IAChC,CAAC;IACD,6BAAK,GAAL,UAAM,OAAe,EAAE,KAAc;QACnC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC;IAC9B,CAAC;IAdU,aAAa;QADzB,yEAAU,EAAE;;OACA,aAAa,CAezB;IAAD,oBAAC;CAAA;AAfyB;;;;;;;;ACJ1B,mB;;;;;;;ACAA,iS;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;ACP3B,mB;;;;;;;ACAA,4KAA4K,+BAA+B,2MAA2M,wFAAwF,2fAA2f,mBAAmB,ucAAuc,0FAA0F,w1BAAw1B,0FAA0F,m0BAAm0B,4FAA4F,ueAAue,SAAS,+cAA+c,4FAA4F,87BAA87B,4FAA4F,q+B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt2K;AACqC;AACzC;AACd;AACmB;AACG;AACF;AACF;AAEc;AAQ3E;IAUE,2BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QARlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAf5B,kBAAa,GAAgB,EAAE,CAAC;QAGhC,YAAO,GAAG,KAAK,CAAC;QAehB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IANlG,CAAC;IAUL,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,aAAa;YAC9B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,KAAK,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,QAAY;QAArB,iBAwCC;QAvCC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,IAAM,KAAK,GAAgB,IAAI,CAAC,aAAa,CAAC;YAC9C,IAAI,SAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAE5C,SAAS,CAAC,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACzD,OAAO,CAAC,GAAG,CAAC,SAAO,CAAC,CAAC;YACrB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC;iBAC1C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,SAAO,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;oBACtD,SAAO,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;oBACtD,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAE,SAAO,CAAC,cAAc,CAAC,CAAC;oBACvD,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;wBACxB,SAAO,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC;oBACjC,CAAC;oBACD,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC,QAAQ,EAAE,SAAO,CAAC;yBAC1E,SAAS,CAAC,cAAI;wBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,sCAAsC;wBACxC,CAAC;wBACD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;wBAC1B,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;oBAC9C,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QAEP,CAAC;IACH,CAAC;IAED,2CAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IA7GqB;QAArB,0EAAS,CAAC,UAAU,CAAC;;4DAAmB;IAR9B,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAYc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACT,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAnBjB,iBAAiB,CAsH7B;IAAD,wBAAC;CAAA;AAtH6B;;;;;;;;ACjB9B,mB;;;;;;;ACAA,8TAA8T,oFAAoF,mpBAAmpB,oBAAoB,iHAAiH,kFAAkF,2ZAA2Z,mBAAmB,4fAA4f,oFAAoF,ovBAAovB,sFAAsF,sZAAsZ,SAAS,ggBAAggB,sFAAsF,4+BAA4+B,8EAA8E,uYAAuY,SAAS,orBAAorB,UAAU,0K;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/oM;AACgD;AACzC;AACd;AACmB;AACG;AACF;AACF;AAEc;AAQ3E;IASE,4BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QARlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAG5B,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACtG,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAPhD,CAAC;IASL,qCAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,KAAI,CAAC,MAAM,GAAG,QAAQ;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,iDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAeC;QAdC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,KAAK,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qCAAQ,GAAR,UAAS,EAAE;QAAX,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;oBACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,QAAY;QAAtB,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,IAAM,OAAO,GAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAEjC,CAAC;YACD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;iBACvE,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACzB,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAhIU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAWc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACT,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAlBjB,kBAAkB,CAiI9B;IAAD,yBAAC;CAAA;AAjI8B;;;;;;;;ACjB/B,mB;;;;;;;ACAA,uLAAuL,+BAA+B,6TAA6T,mBAAmB,gRAAgR,+TAA+T,gBAAgB,mZ;;;;;;;;;;;;;;;;;;;;;;;;ACAnlC;AAC+B;AACxB;AACK;AACC;AACF;AAQ7D;IAQE,iCACU,EAAe,EACf,WAAwB,EACxB,YAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAT/B,kBAAa,GAAgB,EAAE,CAAC;QAChC,YAAO,GAAG,KAAK,CAAC;QAWhB,mBAAc,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACjE,mBAAc,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAH7D,CAAC;IAQL,0CAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAQ,GAAR,UAAS,EAAE;QAAX,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;oBACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;IAED,iDAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;IAED,gDAAc,GAAd,UAAe,WAAe;QAA9B,iBA6CC;QA5CC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC;aAC5C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;gBAC/C,IAAI,aAAW,GAAQ,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5C,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,aAAW,CAAC;qBAC9C,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,kCAAkC;wBAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,cAAc,CAAC,CAAC;oBAC9D,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEL,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;gBACnE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;gBAEnE,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;qBACrE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAI,CAAC,UAAU,CAAC;wBACjE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YAEL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAjHU,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAUc,mEAAW;YACF,2EAAW;YACV,6EAAY;YACnB,uEAAc;YACb,+DAAM;YACN,6EAAa;OAdpB,uBAAuB,CAmHnC;IAAD,8BAAC;CAAA;AAnHmC;;;;;;;;ACbpC,mB;;;;;;;ACAA,6KAA6K,+BAA+B,i6DAAi6D,SAAS,kuBAAkuB,mBAAmB,iqBAAiqB,SAAS,o9BAAo9B,aAAa,YAAY,aAAa,glCAAglC,0LAA0L,iBAAiB,2CAA2C,eAAe,uCAAuC,iBAAiB,uCAAuC,kBAAkB,4DAA4D,0CAA0C,4CAA4C,cAAc,qiDAAqiD,+DAA+D,8BAA8B,gFAAgF,WAAW,uI;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhyP;AAC+B;AAChB;AACtB;AACmB;AACG;AACF;AACF;AACA;AAIc;AAQ3E;IAqBE,4BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QATlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAb5B,qBAAqB;QACrB,YAAO,GAAG,KAAK,CAAC;QAehB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IANrD,CAAC;IAQL,qCAAQ,GAAR;QAAA,iBA+BC;QA9BC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC9C,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEnC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACvB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC;YACtC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAED,iDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAeC;QAdC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,KAAK,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,+DAA+D;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAClC;gBACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;oBACrD,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;oBAC1C,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;oBAC1C,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU;oBAC5C,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;oBACpC,IAAI,EAAE,CAAC;oBACP,MAAM,EAAE,IAAI,EAAE;aACjB,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAqCC;QApCC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;aAC9C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,+BAA+B;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBACxB,2BAA2B;gBAC3B,yCAAyC;gBACzC,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,8BAA8B;gBAC9B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;gBACtC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,eAAe,CAAC;gBAEnC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBACzB,QAAQ,EAAE,KAAI,CAAC,SAAS;oBACxB,SAAS,EAAE,KAAI,CAAC,UAAU;oBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;oBAC1B,UAAU,EAAE,KAAI,CAAC,WAAW;oBAC5B,MAAM,EAAE,KAAI,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAChC;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,sCAAS,GAAT,UAAU,MAAM;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAChC;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAEH;;;;;;;;;;UAUM;IACJ,sCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,OAAS,CAAC,EAC3C;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,uCAAU,GAAV,UAAW,GAAW,EAAE,OAAe,EAAE,SAAgB,EAAE,cAAqB;QAAhF,iBAqDC;QApDC,IAAI,SAAiB,CAAC;QAEtB,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;aACtD,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;gBACrE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,EAAC,OAAO,CAAC,2CAA2C,GAAG,SAAS,GAAG,UAAU,CAAC,CAAC,EAAC;wBAChF,IAAI,WAAW,GAAQ,EAAE,CAAC;wBAC1B,WAAW,CAAC,cAAc,GAAG,cAAc,CAAC;wBAC5C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,WAAW,CAAC;6BAC9C,SAAS,CAAC,cAAI;4BACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gCAC5B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gCACnB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oCAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oCAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gCAClC,CAAC;gCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC;qCACrC,SAAS,CAAC,cAAI;oCACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wCAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wCACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4CAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4CAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wCAClC,CAAC;wCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oCAClC,CAAC;oCAAC,IAAI,CAAC,CAAC;wCACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wCACrB,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wCAC3B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;wCACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oCACpC,CAAC;gCACH,CAAC,CAAC,CAAC;4BACL,CAAC;wBACH,CAAC,CAAC,CAAC;oBACP,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,OAAS,CAAC,EAC3C;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IACD,2CAAc,GAAd,UAAe,OAAO;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAkB,OAAS,CAAC,EAChD;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAxTU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAuBc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACb,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OA/BjB,kBAAkB,CAyT9B;IAAD,yBAAC;CAAA;AAzT8B;;;;;;;;ACpB/B,mB;;;;;;;ACAA,ogBAAogB,oBAAoB,qWAAqW,sBAAsB,wWAAwW,oBAAoB,8dAA8d,SAAS,iFAAiF,qBAAqB,wUAAwU,4CAA4C,2dAA2d,SAAS,qFAAqF,iBAAiB,wPAAwP,yBAAyB,gYAAgY,aAAa,0pCAA0pC,oEAAoE,gBAAgB,iDAAiD,mBAAmB,iDAAiD,eAAe,sEAAsE,yCAAyC,iDAAiD,gBAAgB,geAAge,yEAAyE,8BAA8B,gFAAgF,WAAW,6gB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1kL;AACgD;AACjC;AACA;AACF;AACF;AACA;AACE;AAKY;AAQ3E;IAqBE,4BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,eAAgC,EAChC,MAAqB,EACrB,KAAqB,EACrB,MAAc;QARd,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAExB,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAFhD,CAAC;IAIL,qCAAQ,GAAR;QAAA,iBA2BC;QA1BC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC;YAC7B,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,wCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAED,iDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAeC;QAdC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAQ,GAAR,UAAS,EAAE;QAAX,iBAmBC;QAlBC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;oBACxC,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBACxD,CAAC;YAEH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,0CAAa,GAAb,UAAc,EAAE;QAAhB,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAkBC;QAjBC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC;aAC5C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,WAAW,GAAG,cAAc,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,IAAI,CAAC,OAAS,CAAC,EAChD;YACE,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACnC,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,qCAAQ,GAAR,UAAS,MAAM;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,IAAI,CAAC,OAAS,CAAC,EAChD;YACE,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACnC,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAtLU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAuBc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACb,2EAAW;YACP,yFAAe;YACxB,6EAAa;YACd,uEAAc;YACb,+DAAM;OA9Bb,kBAAkB,CAyL9B;IAAD,yBAAC;CAAA;AAzL8B;;;;;;;;ACpB/B,mB;;;;;;;ACAA,6KAA6K,+BAA+B,+MAA+M,8FAA8F,s2BAAs2B,gGAAgG,s+B;;;;;;;;;;;;;;;;;;;;;;;;;ACAn4C;AACsC;AACzC;AACd;AACoB;AACE;AACJ;AAS7D;IASE,4BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QANlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAb5B,uCAAuC;QACvC,kBAAa,GAAgB,EAAE,CAAC;QAEhC,YAAO,GAAG,KAAK,CAAC;QAahB,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAFpD,CAAC;IAML,qCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,WAAW,EAAE,IAAI,CAAC,aAAa;YAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,QAAY;QAAtB,iBAyCC;QAxCC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,IAAM,KAAK,GAAgB,IAAI,CAAC,aAAa,CAAC;YAC9C,IAAI,SAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;YACzC,8CAA8C;YAE9C,SAAS,CAAC,MAAM,CAAC,aAAa,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1D,+CAA+C;YAC/C,uBAAuB;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC;iBAC5C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,SAAO,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;oBACxD,SAAO,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;oBACxD,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;oBAC1B,0DAA0D;oBAC1D,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;wBACzB,SAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC;oBACnC,CAAC;oBACD,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC;yBAC1D,SAAS,CAAC,cAAI;wBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,uCAAuC;wBACzC,CAAC;wBACD,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;wBAC3B,KAAI,CAAC,cAAc,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;oBAC/C,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QAEP,CAAC;IACH,CAAC;IAED,4CAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IAzEqB;QAArB,0EAAS,CAAC,UAAU,CAAC;;8DAAoB;IAP/B,kBAAkB;QAP9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAac,mEAAW;YACF,2EAAW;YACT,+EAAa;YACrB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAhBjB,kBAAkB,CAkF9B;IAAD,yBAAC;CAAA;AAlF8B;;;;;;;;ACf/B,mB;;;;;;;ACAA,kUAAkU,wFAAwF,8oBAA8oB,oBAAoB,wGAAwG,gFAAgF,uYAAuY,SAAS,yrBAAyrB,UAAU,0K;;;;;;;;;;;;;;;;;;;;;;;;;;ACArxE;AACgD;AACzC;AACd;AACmB;AACG;AACJ;AACc;AAQ3E;IAQE,6BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QAPlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAG5B,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAHhD,CAAC;IAKL,sCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrC,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC9B,KAAI,CAAC,MAAM,GAAG,QAAQ;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,kDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAS,GAAT,UAAU,EAAE;QAAZ,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;oBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV,UAAW,QAAY;QAAvB,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAM,OAAO,GAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEnC,CAAC;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC;iBACvD,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBAC1B,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IA/FU,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAUc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACX,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAhBjB,mBAAmB,CAgG/B;IAAD,0BAAC;CAAA;AAhG+B;;;;;;;;ACfhC,mB;;;;;;;ACAA,+KAA+K,+BAA+B,iNAAiN,oFAAoF,uVAAuV,0FAA0F,odAAod,mBAAmB,sQAAsQ,2TAA2T,gBAAgB,+X;;;;;;;;;;;;;;;;;;;;;;;;ACA16D;AAC+B;AACxB;AACK;AACG;AACJ;AAQ7D;IAQE,kCACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAT/B,kBAAa,GAAgB,EAAE,CAAC;QAChC,YAAO,GAAG,KAAK,CAAC;QAWhB,oBAAe,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,oBAAe,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAH9D,CAAC;IAQL,2CAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4CAAS,GAAT,UAAU,EAAE;QAAZ,iBAYC;QAXC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;oBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;IACL,CAAC;IACD,kDAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;IAED,iDAAc,GAAd,UAAe,WAAe;QAA9B,iBA6CC;QA5CC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC;aAC9C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;gBAChD,IAAI,aAAW,GAAQ,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC7C,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAW,CAAC;qBAChD,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,kCAAkC;wBAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,eAAe,CAAC,CAAC;oBAC/D,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEL,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;gBACtE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;gBAEtE,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;qBACzE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAI,CAAC,UAAU,CAAC;wBACjE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YAEL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IAhHU,wBAAwB;QALpC,wEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAUc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACrB,uEAAc;YACb,+DAAM;YACN,6EAAa;OAdpB,wBAAwB,CAkHpC;IAAD,+BAAC;CAAA;AAlHoC;;;;;;;;ACbrC,mB;;;;;;;ACAA,6DAA6D,mDAAmD,UAAU,EAAE,uLAAuL,+BAA+B,i+CAAi+C,SAAS,+/BAA+/B,aAAa,YAAY,aAAa,+rBAA+rB,8LAA8L,mBAAmB,6CAA6C,iBAAiB,slDAAslD,iEAAiE,8BAA8B,+EAA+E,WAAW,qJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5gL;AAC+B;AAChB;AACtB;AACmB;AACG;AACF;AACF;AAEc;AAQ3E;IAkBE,6BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QARlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAf9B;;;2BAGmB;QACjB,YAAO,GAAG,KAAK,CAAC;QAchB,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAHrD,CAAC;IAIL,yDAAyD;IAEzD,sCAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC9C,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC;YACtC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IAED,kDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,+DAA+D;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EACnC;gBACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE;aAC3H,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAiCC;QAhCC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,EAAE,OAAO,CAAC;aAChD,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,gCAAgC;gBAChC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzB,oCAAoC;gBACpC,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;gBACtC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;gBACpC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBACzB,UAAU,EAAE,KAAI,CAAC,WAAW;oBAC5B,MAAM,EAAE,KAAI,CAAC,OAAO;iBACrB,CAAC,CAAC;gBACH;;;;oBAII;YACN,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EACjC;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACpG,CACF,CAAC;IACJ,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,wCAAU,GAAV,UAAW,QAAQ;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,QAAU,CAAC,EAC7C;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IAED,wCAAU,GAAV,UAAW,GAAW,EAAE,QAAgB,EAAE,UAAiB,EAAE,eAAsB;QAAnF,iBAqDC;QApDC,IAAI,UAAkB,CAAC;QAEvB,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;aACxD,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,UAAU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC9B,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC;gBACvE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,EAAC,OAAO,CAAC,4CAA4C,GAAG,UAAU,GAAG,UAAU,CAAC,CAAC,EAAC;wBAClF,IAAI,WAAW,GAAQ,EAAE,CAAC;wBAC1B,WAAW,CAAC,eAAe,GAAG,eAAe,CAAC;wBAC9C,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;wBACpB,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,WAAW,CAAC;6BAChD,SAAS,CAAC,cAAI;4BACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gCAC5B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gCACnB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oCAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oCAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gCAClC,CAAC;gCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC;qCACxC,SAAS,CAAC,cAAI;oCACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wCAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wCACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4CAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4CAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wCAClC,CAAC;wCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oCAClC,CAAC;oCAAC,IAAI,CAAC,CAAC;wCACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wCACrB,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wCAC5B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;wCACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oCACpC,CAAC;gCACH,CAAC,CAAC,CAAC;4BACL,CAAC;wBACH,CAAC,CAAC,CAAC;oBACP,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV,UAAW,QAAQ;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,QAAU,CAAC,EAC7C;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IACD,6CAAe,GAAf,UAAgB,QAAQ;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAmB,QAAU,CAAC,EAClD;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IAED,wCAAU,GAAV,UAAW,MAAM;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EACjC;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IAnOU,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAoBc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACT,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OA3BjB,mBAAmB,CAoO/B;IAAD,0BAAC;CAAA;AApO+B;;;;;;;;ACjBhC,mB;;;;;;;ACAA,+eAA+e,sBAAsB,6cAA6c,SAAS,iFAAiF,kBAAkB,6OAA6O,2BAA2B,mXAAmX,aAAa,unCAAunC,iEAAiE,iBAAiB,+CAA+C,iBAAiB,+CAA+C,kBAAkB,oEAAoE,0CAA0C,+CAA+C,gBAAgB,2cAA2c,uEAAuE,8BAA8B,gFAAgF,WAAW,ye;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtxH;AACgD;AACjC;AACA;AACF;AACF;AACE;AAIY;AAQ3E;IAmBE,6BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,eAAgC,EAChC,MAAqB,EACrB,KAAqB,EACrB,MAAc;QAPd,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAGxB,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAFhD,CAAC;IAIL,sCAAQ,GAAR;QAAA,iBAwBC;QAvBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrC,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC;QACF,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACP,CAAC;IACD,yCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IACD,kDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAS,GAAT,UAAU,EAAE;QAAZ,iBAkBC;QAjBC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBACzD,CAAC;YAEH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAkBC;QAjBC,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,CAAC;aACjD,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBACxB,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,WAAW,GAAG,eAAe,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,IAAI,CAAC,QAAU,CAAC,EAClD;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,uCAAS,GAAT,UAAU,MAAM;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,IAAI,CAAC,QAAU,CAAC,EAClD;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IA3JU,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAqBc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACT,yFAAe;YACxB,6EAAa;YACd,uEAAc;YACb,+DAAM;OA3Bb,mBAAmB,CA4J/B;IAAD,0BAAC;CAAA;AA5J+B;;;;;;;;AClBhC,mB;;;;;;;ACAA,qcAAqc,aAAa,wUAAwU,cAAc,yZAAyZ,kBAAkB,8WAA8W,gBAAgB,0QAA0Q,kBAAkB,gMAAgM,kBAAkB,0FAA0F,oBAAoB,0GAA0G,mBAAmB,ma;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxvE;AACe;AAEN;AACG;AACF;AACF;AACA;AAIA;AAQ1D;IAUE,4BACU,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,WAAwB,EACxB,MAAqB,EACrB,KAAqB,EACrB,MAAc;QAPd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAOL,qCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAE9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBACrC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACnC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAuCC;QAtCC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC;aAC7C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC9B,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAClC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC;qBAC3C,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBAC7B,KAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;wBACpC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;6BACzC,SAAS,CAAC,cAAI;4BACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gCAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oCAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oCAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gCAClC,CAAC;gCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;4BACrC,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,qCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,oCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IAnGU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAYuB,2EAAW;YACT,+EAAa;YACd,6EAAY;YACb,2EAAW;YACX,2EAAW;YAChB,6EAAa;YACd,uEAAc;YACb,+DAAM;OAlBb,kBAAkB,CAoG9B;IAAD,yBAAC;CAAA;AApG8B;;;;;;;;ACnB/B,mB;;;;;;;ACAA,uIAAuI,MAAM,+R;;;;;;;;;;;;;;;;;;;;;;;ACAnF;AACT;AACG;AAOpD;IAEE,+BAAqB,SAA8C,EACrB,IAAY;QADrC,cAAS,GAAT,SAAS,CAAqC;QACrB,SAAI,GAAJ,IAAI,CAAQ;IAExD,CAAC;IAEH,wCAAQ,GAAR;QACE,wBAAwB;IAC1B,CAAC;IAED,8CAAc,GAAd;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IAClC,CAAC;IAED,6CAAa,GAAb;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACjC,CAAC;IAED,8CAAc,GAAd;QACE,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAC/D,CAAC;IArBU,qBAAqB;QALjC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;QAIc,gFAAM,CAAC,0EAAe,CAAC;yCADL,uEAAY;OAFjC,qBAAqB,CAsBjC;IAAD,4BAAC;CAAA;AAtBiC;;;;;;;;ACTlC,mB;;;;;;;ACAA,qLAAqL,+BAA+B,uNAAuN,kFAAkF,k2BAAk2B,oFAAoF,22BAA22B,oFAAoF,2bAA2b,SAAS,64D;;;;;;;;;;;;;;;;;;;;;;;;;ACA1vF;AACsC;AACzC;AACd;AACoB;AACF;AACc;AAQ3E;IAUE,4BACU,EAAe,EACf,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QANlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAd5B,uCAAuC;QACvC,kBAAa,GAAgB,EAAE,CAAC;QAGhC,YAAO,GAAG,KAAK,CAAC;QAahB,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IALnD,CAAC;IASL,qCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,UAAU,EAAE,IAAI,CAAC,aAAa;YAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IACD,6CAAgB,GAAhB;QAAA,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,kBAAkB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAW,GAAX,UAAY,QAAY;QAAxB,iBA4DC;QA3DC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,IAAM,KAAK,GAAgB,IAAI,CAAC,aAAa,CAAC;YAC9C,IAAI,SAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YACvC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3C,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;gBACzC,+CAA+C;gBAC/C,SAAS,CAAC,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzD,+CAA+C;gBAC/C,uBAAuB;gBACvB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC;qBAC/C,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACJ,SAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBAC1C,SAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;wBAC1C,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;wBAC1B,0DAA0D;wBAC1D,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC;4BAC3B,SAAO,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC;wBACvC,CAAC;wBACD,KAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC;6BAC9D,SAAS,CAAC,cAAI;4BACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gCAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gCACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gCACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gCAClC,uCAAuC;4BACzC,CAAC;4BACD,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;4BAC3B,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;wBAC9C,CAAC,CAAC,CAAC;oBACP,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAA,IAAI,CAAC,CAAC;gBACL,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC1B,0DAA0D;gBAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC3B,SAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBACvC,CAAC;gBACD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC;qBAC9D,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,uCAAuC;oBACzC,CAAC;oBACD,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAC3B,KAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;gBAC9C,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;IACH,CAAC;IACD,4CAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IA7GqB;QAArB,0EAAS,CAAC,UAAU,CAAC;;6DAAmB;IAR9B,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAYc,mEAAW;YACF,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAjBjB,kBAAkB,CAsH9B;IAAD,yBAAC;CAAA;AAtH8B;;;;;;;;ACd/B,mB;;;;;;;ACAA,oLAAoL,+BAA+B,oNAAoN,gFAAgF,+1BAA+1B,kFAAkF,uvD;;;;;;;;;;;;;;;;;;;;;;;;;ACAt3C;AACgD;AACzC;AACd;AACoB;AACF;AACc;AAQ3E;IAME,2BACU,EAAe,EACf,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QANlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAV5B,uCAAuC;QACvC,YAAO,GAAG,KAAK,CAAC;QAWhB,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAHnD,CAAC;IAKL,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC,CAAC;IACL,CAAC;IACD,sCAAU,GAAV,UAAW,QAAY;QAAvB,iBAoBC;QAnBC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC;YACxB,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;YAC1B,0DAA0D;YAC1D,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;iBAC9D,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,uCAAuC;gBACzC,CAAC;gBACD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IA/CU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAQc,mEAAW;YACF,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAbjB,iBAAiB,CAgD7B;IAAD,wBAAC;CAAA;AAhD6B;;;;;;;;ACd9B,mB;;;;;;;ACAA,0kBAA0kB,eAAe,6FAA6F,kFAAkF,suBAAsuB,kFAAkF,0YAA0Y,SAAS,+0BAA+0B,oFAAoF,uYAAuY,SAAS,+rBAA+rB,UAAU,0K;;;;;;;;;;;;;;;;;;;;;;;;;ACA75H;AACgD;AACzC;AACd;AACmB;AACD;AACc;AAQ3E;IASE,6BACU,EAAe,EACf,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QANlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAI5B,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnD,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACvD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAPhD,CAAC;IASL,sCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC;YAClC,KAAI,CAAC,MAAM,GAAG,QAAQ;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,kDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAYC;QAXC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8CAAgB,GAAhB;QAAA,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,cAAI;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,kBAAkB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAW,GAAX,UAAY,EAAE;QAAd,iBAgBC;QAfC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,0CAAY,GAAZ,UAAa,QAAY;QAAzB,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,IAAM,OAAO,GAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC3B,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAEvC,CAAC;YACD,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;iBAC5D,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;oBACrB,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;gBAC5B,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IACD,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IA7HU,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAWc,mEAAW;YACF,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAhBjB,mBAAmB,CA8H/B;IAAD,0BAAC;CAAA;AA9H+B;;;;;;;;ACdhC,mB;;;;;;;ACAA,sLAAsL,+BAA+B,kRAAkR,mBAAmB,gRAAgR,+TAA+T,gBAAgB,qZ;;;;;;;;;;;;;;;;;;;;;;;;ACAviC;AAC+B;AACxB;AACK;AACD;AACc;AAQ3E;IAQE,iCACU,EAAe,EACf,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAT/B,kBAAa,GAAgB,EAAE,CAAC;QAChC,YAAO,GAAG,KAAK,CAAC;QAUhB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAFvD,CAAC;IAOL,0CAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9B,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAW,GAAX,UAAY,EAAE;QAAd,iBAiBC;QAhBC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,8CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IACL,CAAC;IAED,iDAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;IAED,gDAAc,GAAd,UAAe,WAAe;QAA9B,iBA6CC;QA5CC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,SAAS,CAAC;aAC/C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBACzC,IAAI,aAAW,GAAQ,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC;gBAC/C,KAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAW,CAAC;qBACjD,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,kCAAkC;wBAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,QAAQ,CAAC,CAAC;oBACxD,CAAC;gBACH,CAAC,CAAC,CAAC;gBACL,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC;gBACrD,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAC1D,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;gBAE1D,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAI,CAAC,YAAY,CAAC,KAAK,CAAC;qBACpF,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAI,CAAC,UAAU,CAAC;wBACjE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YAEL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IApHU,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAUc,mEAAW;YACF,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;OAdpB,uBAAuB,CAqHnC;IAAD,8BAAC;CAAA;AArHmC;;;;;;;;ACbpC,mB;;;;;;;ACAA,sLAAsL,+BAA+B,8oEAA8oE,SAAS,qqBAAqqB,SAAS,0jCAA0jC,aAAa,YAAY,aAAa,y6BAAy6B,+LAA+L,cAAc,6CAA6C,gBAAgB,yCAAyC,oBAAoB,yCAAyC,kBAAkB,mjDAAmjD,iEAAiE,8BAA8B,gFAAgF,WAAW,gJ;;;;;;;;;;;;;;;;;;;;;;;;;ACAhmO;AAC+B;AAChB;AACtB;AACmB;AACD;AACc;AAS3E;IAiBE,6BACU,EAAe,EACf,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QANlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAX5B,QAAG,GAAyB,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;QACtE,cAAS,GAAyB,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;QAC5E,YAAO,GAAG,KAAK,CAAC;QAYhB,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACtD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACvD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACvD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IALpD,CAAC;IAOL,sCAAQ,GAAR;QAAA,iBAoCC;QAnCC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QAEnC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC;YAC5B,OAAO,CAAC,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC;YAC5B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAE1B,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,IAAI,EAAE,KAAI,CAAC,KAAK;gBAChB,KAAK,EAAE,KAAI,CAAC,MAAM;gBAClB,KAAK,EAAE,KAAI,CAAC,MAAM;gBAClB,MAAM,EAAE,KAAI,CAAC,OAAO;aACrB,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACD,kDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAaC;QAZC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC7B,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAClC;gBACE,WAAW,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;oBAChC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK;oBAClC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK;oBAClC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;oBACpC,IAAI,EAAE,CAAC;oBACP,MAAM,EAAE,IAAI;iBAAE;aACjB,CACF,CAAC;YACF,0CAA0C;QAC5C,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,OAAO;QAAnB,iBA8BC;QA7BC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,OAAO,CAAC;aAC3C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC5D,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;gBAC1B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC5B,KAAI,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC5B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;gBAEtC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBACzB,IAAI,EAAE,KAAI,CAAC,KAAK;oBAChB,KAAK,EAAE,KAAI,CAAC,MAAM;oBAClB,KAAK,EAAE,KAAI,CAAC,MAAM;oBAClB,MAAM,EAAE,KAAI,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EACjC;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,wCAAU,GAAV,UAAW,MAAM;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EACjC;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IACD,wCAAU,GAAV,UAAW,UAAU;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,UAAY,CAAC,EAC/C;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,6CAAe,GAAf,UAAgB,UAAU;QACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAkB,UAAY,CAAC,EACnD;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAU,GAAV,UAAW,UAAU;QACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,UAAY,CAAC,EAC/C;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,KAAK;gBAChB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,KAAK,EAAE,IAAI,CAAC,MAAM;gBAClB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAU,GAAV,UAAW,GAAW,EAAE,UAAkB,EAAE,IAAW,EAAE,QAAe;QAAxE,iBAmCC;QAjCC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,EAAE,EAAC,OAAO,CAAC,4CAA4C,GAAG,IAAI,GAAG,UAAU,CAAC,CAAC,EAAC;YAC5E,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACb,IAAI,aAAW,GAAQ,EAAE,CAAC;gBAC1B,aAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBAChC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,aAAW,CAAC;qBACjD,SAAS,CAAC,cAAI;oBACX,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,kCAAkC;wBAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,QAAQ,CAAC,CAAC;oBACxD,CAAC;gBACH,CAAC,CAAC,CAAC;YACP,CAAC;YACD,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,UAAU,CAAC;iBAC9C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;oBACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IA5PU,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAmBc,mEAAW;YACF,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAxBjB,mBAAmB,CA8P/B;IAAD,0BAAC;CAAA;AA9P+B;;;;;;;;ACfhC,mB;;;;;;;ACAA,6fAA6f,kBAAkB,+VAA+V,mBAAmB,+VAA+V,uBAAuB,6WAA6W,kBAAkB,6dAA6d,SAAS,qFAAqF,kBAAkB,2RAA2R,sBAAsB,2Y;;;;;;;;;;;;;;;;;;;;;;;;ACAl8E;AACgD;AACjC;AACJ;AACE;AAEY;AAS3E;IAQE,6BACU,EAAe,EACf,WAAwB,EACxB,eAAgC,EAChC,MAAqB,EACrB,KAAqB,EACrB,MAAc;QALd,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAExB,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IADhD,CAAC;IAGL,sCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC9B,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrC,KAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,yCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IACD,kDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAW,GAAX,UAAY,EAAE;QAAd,iBAiBC;QAhBC,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACpD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC7B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IArEU,mBAAmB;QAL/B,wEAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAUc,mEAAW;YACF,2EAAW;YACP,yFAAe;YACxB,6EAAa;YACd,uEAAc;YACb,+DAAM;OAdb,mBAAmB,CAsE/B;IAAD,0BAAC;CAAA;AAtE+B;;;;;;;;ACfhC,mB;;;;;;;ACAA,s9FAAs9F,8BAA8B,4OAA4O,gBAAgB,grCAAgrC,gCAAgC,6lB;;;;;;;;;;;;;;;;;;;;ACA94I;AACQ;AAO1D;IAEE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,kCAAQ,GAAR;IACA,CAAC;IALU,eAAe;QAL3B,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAGiC,2EAAW;OAFjC,eAAe,CAO3B;IAAD,sBAAC;CAAA;AAP2B;;;;;;;;ACR5B,mB;;;;;;;ACAA,6KAA6K,+BAA+B,qYAAqY,oBAAoB,+CAA+C,sBAAsB,mFAAmF,sFAAsF,8hBAA8hB,mBAAmB,4bAA4b,oFAAoF,gfAAgf,iBAAiB,wbAAwb,sFAAsF,8pCAA8pC,wFAAwF,ifAAif,SAAS,0cAA0c,wFAAwF,g8BAAg8B,sFAAsF,yfAAyf,sFAAsF,kpBAAkpB,oBAAoB,+CAA+C,sBAAsB,6iB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAx8O;AACqC;AACzC;AACd;AACmB;AACG;AACF;AACF;AACA;AAGc;AAQ3E;IAcE,0BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QATlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QApB5B,sBAAiB,GAAgB,EAAE,CAAC;QACpC,sBAAiB,GAAgB,EAAE,CAAC;QAIpC,YAAO,GAAG,KAAK,CAAC;QAChB,kBAAa,GAAG,CAAC,CAAC;QAiBlB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IAPjG,CAAC;IAaL,mCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;IACL,CAAC;IAED,+CAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACzB,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,KAAK,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAa,EAAE;QAAf,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,kBAAkB,EAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+CAAoB,GAApB,UAAqB,EAAE,EAAE,QAAQ;QAAjC,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,8BAA8B;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAO,GAAP,UAAQ,QAAY;QAApB,iBAgEC;QA/DC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACrD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAM,SAAS,GAAgB,IAAI,CAAC,iBAAiB,CAAC;YACtD,IAAI,SAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,WAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;YACzC,kDAAkD;YAElD,WAAS,CAAC,MAAM,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAE/D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,WAAS,CAAC;iBAC1C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;oBACtB,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;oBAClD,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;oBAClD,IAAM,SAAS,GAAgB,KAAI,CAAC,iBAAiB,CAAC;oBACtD,WAAS,CAAC,MAAM,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC/D,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;oBACxB,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,WAAS,CAAC;yBACzC,SAAS,CAAC,cAAI;wBACX,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC;4BACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;4BACxB,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;4BAClD,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;4BAClD,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;4BAC1B,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;gCACvB,SAAO,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC;4BAC/B,CAAC;4BACD,KAAI,CAAC,aAAa,GAAG,EAAE,CAAC;4BACxB,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC,QAAQ,EAAE,SAAO,CAAC,OAAO,EAAE,SAAO,CAAC;iCACzF,SAAS,CAAC,cAAI;gCACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oCAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oCACrB,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC;oCACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gCAClC,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oCACrB,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;oCACzB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oCAClC,qCAAqC;gCACvC,CAAC;gCACD,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gCACzB,KAAI,CAAC,aAAa,GAAG,CAAC,CAAC;gCACvB,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;gCAC1C,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,EAAE,CAAC;4BAC7C,CAAC,CAAC,CAAC;wBACL,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QAEP,CAAC;IACH,CAAC;IAED,8CAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAED,8CAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAED,4CAAiB,GAAjB,UAAkB,aAAiB;QACjC,IAAI,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,8CAA8C;QAC9C,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IArLsB;QAAtB,0EAAS,CAAC,WAAW,CAAC;;yDAAiB;IACjB;QAAtB,0EAAS,CAAC,WAAW,CAAC;;0DAAkB;IAZ9B,gBAAgB;QAL5B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAgBc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACb,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAxBjB,gBAAgB,CAiM5B;IAAD,uBAAC;CAAA;AAjM4B;;;;;;;;ACnB7B,mB;;;;;;;ACAA,4TAA4T,gFAAgF,0oBAA0oB,oBAAoB,wGAAwG,gFAAgF,kcAAkc,mBAAmB,kfAAkf,8EAA8E,qZAAqZ,iBAAiB,u1BAAu1B,kFAAkF,mZAAmZ,SAAS,yfAAyf,kFAAkF,+9BAA+9B,sFAAsF,0SAA0S,oBAAoB,6WAA6W,gBAAgB,6FAA6F,4EAA4E,uYAAuY,SAAS,6qBAA6qB,UAAU,0K;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA39O;AACgD;AACzC;AACd;AACmB;AACG;AACF;AACF;AACA;AAIc;AAQ3E;IAWE,2BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QATlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAE5B,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACrG,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAPhD,CAAC;IAWL,oCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,MAAM,GAAG,QAAQ;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAeC;QAdC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,KAAK,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,EAAE,EAAE,QAAQ;QAAjC,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,8BAA8B;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf,UAAgB,EAAE;QAAlB,iBAaC;QAZC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACvC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAI,CAAC,SAAS,CAAC;oBAC9D,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;oBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,QAAY;QAArB,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAM,OAAO,GAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YACxC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;gBACvB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE/B,CAAC;YACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,EAAC,OAAO,CAAC;iBACrF,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACxB,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,6CAAiB,GAAjB,UAAkB,aAAiB;QACjC,IAAI,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,8CAA8C;QAC9C,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAtKU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAac,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACb,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OArBjB,iBAAiB,CAwK7B;IAAD,wBAAC;CAAA;AAxK6B;;;;;;;;ACpB9B,mB;;;;;;;ACAA,4LAA4L,+BAA+B,ofAAof,qRAAqR,oBAAoB,4YAA4Y,qRAAqR,oBAAoB,iY;;;;;;;;;;;;;;;;;;;;;;;;ACA3nD;AAC+B;AACxB;AACK;AACD;AACA;AAQ7D;IASE,gCACU,EAAe,EACf,WAAwB,EACxB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAV/B,sBAAiB,GAAgB,EAAE,CAAC;QACpC,sBAAiB,GAAgB,EAAE,CAAC;QACpC,YAAO,GAAG,KAAK,CAAC;QAWhB,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/D,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/D,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/D,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAL3D,CAAC;IAWL,yCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAO,GAAP,UAAQ,EAAE;QAAV,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;oBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;IACL,CAAC;IAED,oDAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAED,oDAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IAED,iDAAgB,GAAhB,UAAiB,WAAe;QAAhC,iBA0CC;QAzCC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC;aAC5C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,aAAW,GAAQ,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAC3C,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAW,CAAC;qBAC9C,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,EAAE,CAAC,CAAC,aAAW,CAAC,CAAC,CAAC;4BAChB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,YAAY,CAAC,CAAC;wBAC5D,CAAC;oBACH,CAAC;gBACH,CAAC,CAAC,CAAC;gBACL,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAC9D,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAE9D,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;qBACnE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;wBAC5C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAa,GAAb,UAAc,WAAe;QAA7B,iBAyCC;QAxCC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC;aACzC,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,aAAW,GAAQ,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAC3C,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,aAAW,CAAC;qBAC3C,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,YAAY,CAAC,CAAC;oBAC5D,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEL,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAC9D,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAE9D,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;qBAChE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;wBACzC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACrE,CAAC;IApKU,sBAAsB;QALlC,wEAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;yCAWc,mEAAW;YACF,2EAAW;YACX,2EAAW;YACjB,uEAAc;YACb,+DAAM;YACN,6EAAa;OAfpB,sBAAsB,CAqKlC;IAAD,6BAAC;CAAA;AArKkC;;;;;;;;ACbnC,mB;;;;;;;ACAA,4KAA4K,+BAA+B,shCAAshC,mBAAmB,ilBAAilB,iBAAiB,6jDAA6jD,SAAS,2qBAA2qB,SAAS,4mBAA4mB,SAAS,ymBAAymB,SAAS,46BAA46B,aAAa,YAAY,aAAa,+nCAA+nC,0LAA0L,gBAAgB,2CAA2C,eAAe,uCAAuC,cAAc,uCAAuC,iBAAiB,uCAAuC,kBAAkB,4DAA4D,yCAAyC,4CAA4C,cAAc,qnDAAqnD,+DAA+D,8BAA8B,gFAAgF,WAAW,oI;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5sT;AAC+B;AAChB;AACtB;AACmB;AACG;AACF;AACF;AACA;AAIc;AAQ3E;IA2BE,2BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QATlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAZ5B,YAAO,GAAG,KAAK,CAAC;QAehB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,gBAAW,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC7D,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IATrD,CAAC;IAWL,oCAAQ,GAAR;QAAA,iBAqDC;QApDC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YAChD,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,YAAY,CAAC;YACxC,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAE/C,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,QAAQ,EAAE,KAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,KAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,KAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,KAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,KAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,KAAI,CAAC,OAAO;aACrB,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,gDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAkBC;QAjBC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,KAAK,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAE;QAAf,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,kBAAkB,EAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gDAAoB,GAApB,UAAqB,EAAE,EAAE,QAAQ;QAAjC,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,8BAA8B;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,+DAA+D;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EACjC;gBACE,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;oBACxC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;oBACxC,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO;oBACtC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;oBAC1C,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;oBAC1C,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW;oBAC9C,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO;oBACtC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;oBACpC,IAAI,EAAE,CAAC;oBACP,MAAM,EAAE,IAAI;iBAAE;aACjB,CACF,CAAC;QAEJ,CAAC;IACH,CAAC;IAED,uCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBA4CC;QA3CC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC;aAC5C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;gBACxC,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,cAAc,CAAC;gBAClC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;gBACjE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACzC,CAAC;gBAED,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBACzB,QAAQ,EAAE,KAAI,CAAC,SAAS;oBACxB,QAAQ,EAAE,KAAI,CAAC,SAAS;oBACxB,OAAO,EAAE,KAAI,CAAC,QAAQ;oBACtB,SAAS,EAAE,KAAI,CAAC,UAAU;oBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;oBAC1B,WAAW,EAAE,KAAI,CAAC,YAAY;oBAC9B,OAAO,EAAE,KAAI,CAAC,QAAQ;oBACtB,MAAM,EAAE,KAAI,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAC/B;YACE,WAAW,EAAE;gBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,uCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAM;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAC/B;YACE,WAAW,EAAE;gBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,6CAAiB,GAAjB,UAAkB,aAAiB;QACjC,IAAI,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,8CAA8C;QAC9C,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,yCAAa,GAAb,UAAc,MAAM,EAAE,WAAW,EAAE,OAAO;QACxC,EAAE,CAAC,CAAC,WAAW,IAAI,GAAG,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,gEAAgE,CAAC,CAAC;QACxF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,uDAAuD;YACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAiB,MAAQ,CAAC,EAC9C;gBACE,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;oBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;oBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;oBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;iBAAE;aACvB,CACF,CAAC;QACJ,CAAC;IAEH,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAM;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,MAAQ,CAAC,EACzC;YACE,WAAW,EAAE;gBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAM,EAAE,WAAW,EAAE,OAAO;QAEnC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,sDAAsD,CAAC,CAAC;QAC9E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,MAAQ,CAAC,EAC3C;gBACE,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;oBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;oBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;oBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;iBAAE;aACrB,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,sCAAU,GAAV,UAAW,GAAW,EAAE,MAAc,EAAE,WAAW,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,YAAY;QAAlG,iBA6CC;QA3CC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uDAAuD,CAAC,CAAC;QAC/E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,EAAC,OAAO,CAAC,0CAA0C,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC,EAAC;gBAC9E,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,OAAO,GAAQ,EAAE,CAAC;gBACtB,OAAO,CAAC,YAAY,GAAG,YAAY,CAAC;gBACpC,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC;qBAC1C,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBACrD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;oBAC3C,CAAC;gBACH,CAAC,CAAC,CAAC;gBACL,IAAI,WAAW,GAAQ,EAAE,CAAC;gBAC1B,WAAW,CAAC,YAAY,GAAG,YAAY,CAAC;gBACxC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,WAAW,CAAC;qBAC3C,SAAS,CAAC,cAAI;oBACX,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,OAAO,CAAC,GAAG,CAAC,uBAAuB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBACtD,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;oBAC7C,CAAC;gBACH,CAAC,CAAC,CAAC;gBACL,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;qBAClC,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wBAC1B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;wBACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;IACH,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IApZU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCA6Bc,mEAAW;YACF,2EAAW;YACT,+EAAa;YACd,6EAAY;YACb,2EAAW;YACP,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OArCjB,iBAAiB,CAqZ7B;IAAD,wBAAC;CAAA;AArZ6B;;;;;;;;ACpB9B,mB;;;;;;;ACAA,ueAAue,kBAAkB,iWAAiW,gBAAgB,+VAA+V,eAAe,mXAAmX,mBAAmB,wdAAwd,SAAS,iFAAiF,mBAAmB,iUAAiU,0CAA0C,yVAAyV,sBAAsB,iFAAiF,WAAW,YAAY,SAAS,6EAA6E,sBAAsB,4VAA4V,qBAAqB,8EAA8E,WAAW,YAAY,SAAS,4EAA4E,sBAAsB,4WAA4W,qBAAqB,+WAA+W,iBAAiB,mdAAmd,SAAS,iFAAiF,gBAAgB,6V;;;;;;;;;;;;;;;;;;;;;;;;;ACA95J;AACgD;AACzC;AACI;AACA;AACE;AAGY;AAQ3E;IASE,2BACU,EAAe,EACf,WAAwB,EACxB,WAAwB,EACxB,eAAgC,EAChC,MAAqB,EACrB,KAAqB,EACrB,MAAc;QANd,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAGxB,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAHhD,CAAC;IAKL,oCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1B,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrC,KAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;YACnC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,uCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAED,gDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAeC;QAdC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP,UAAQ,EAAE;QAAV,iBAiBC;QAhBC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,KAAK,KAAK,CAAC,CAAC,CAAC;YACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iBAAiB,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;QAC3E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;QACrE,CAAC;IACH,CAAC;IAzFU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAWc,mEAAW;YACF,2EAAW;YACX,2EAAW;YACP,yFAAe;YACxB,6EAAa;YACd,uEAAc;YACb,+DAAM;OAhBb,iBAAiB,CA0F7B;IAAD,wBAAC;CAAA;AA1F6B;;;;;;;;AChB9B,mB;;;;;;;ACAA,4KAA4K,+BAA+B,w+BAAw+B,YAAY,w7EAAw7E,SAAS,snBAAsnB,SAAS,4mBAA4mB,SAAS,0pBAA0pB,SAAS,u4BAAu4B,aAAa,YAAY,aAAa,gvCAAgvC,kFAAkF,uHAAuH,gBAAgB,oEAAoE,cAAc,gEAAgE,eAAe,gEAAgE,cAAc,qFAAqF,eAAe,KAAK,yCAAyC,gEAAgE,oBAAoB,iDAAiD,qBAAqB,iFAAiF,WAAW,YAAY,SAAS,+EAA+E,qBAAqB,8EAA8E,WAAW,YAAY,SAAS,uEAAuE,cAAc,0JAA0J,aAAa,WAAW,YAAY,SAAS,4PAA4P,aAAa,WAAW,YAAY,SAAS,yyCAAyyC,+DAA+D,8BAA8B,gFAAgF,WAAW,kJ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/tV;AAC+B;AAChB;AACtB;AACgB;AACD;AACY;AACI;AAGF;AASxE;IA2BE,0BACU,EAAe,EACf,WAAwB,EACxB,eAA+B,EAC/B,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB,EAClB,gBAAkC;QARlC,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAClB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAX5C,YAAO,GAAG,KAAK,CAAC;QAchB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,gBAAW,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC7D,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAVrD,CAAC;IAYL,mCAAQ,GAAR;QAAA,iBAwDC;QAvDC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACnC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC9C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YAChD,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC;YACtC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,YAAY,CAAC;YACxC,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YAE1B,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,OAAO,EAAE,KAAI,CAAC,QAAQ;gBACtB,QAAQ,EAAE,KAAI,CAAC,SAAS;gBACxB,UAAU,EAAE,KAAI,CAAC,WAAW;gBAC5B,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,KAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,KAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,KAAI,CAAC,OAAO;aACrB,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IACD,+CAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAkBC;QAjBC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,SAAS,CAAC,CAAC,CAAC;wBACzB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;oBACzB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC1B,CAAC;gBACH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,KAAK,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAS,GAAT;QAAA,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,cAAI;YAChD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC1B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,QAAQ,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,IAAI,EAAC,kBAAkB,EAAC,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,0CAA0C;YAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EACvC;gBACE,WAAW,EAAE;oBACX,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO;oBACtC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;oBACxC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU;oBAC5C,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;oBAC1C,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;oBAC1C,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS;oBAC1C,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,WAAW;oBAC9C,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO;oBACtC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;oBACpC,IAAI,EAAE,CAAC;oBACP,MAAM,EAAE,IAAI;iBAAE;aACjB,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,sCAAW,GAAX,UAAY,OAAO;QAAnB,iBAwCC;QAvCC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,OAAO,CAAC;aACzC,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC5D,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;gBACtC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;gBACxC,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,cAAc,CAAC;gBAElC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBACzB,OAAO,EAAE,KAAI,CAAC,QAAQ;oBACtB,QAAQ,EAAE,KAAI,CAAC,SAAS;oBACxB,UAAU,EAAE,KAAI,CAAC,WAAW;oBAC5B,OAAO,EAAE,KAAI,CAAC,UAAU;oBACxB,SAAS,EAAE,KAAI,CAAC,UAAU;oBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;oBAC1B,WAAW,EAAE,KAAI,CAAC,YAAY;oBAC9B,OAAO,EAAE,KAAI,CAAC,QAAQ;oBACtB,MAAM,EAAE,KAAI,CAAC,OAAO;iBACrB,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EACrC;YACE,WAAW,EAAE;gBACX,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,sCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,mCAAQ,GAAR,UAAS,MAAM;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EACrC;YACE,WAAW,EAAE;gBACX,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,mCAAQ,GAAR,UAAS,MAAM;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,MAAQ,CAAC,EACzC;YACE,WAAW,EAAE;gBACX,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,sCAAW,GAAX,UAAY,MAAM,EAAE,QAAQ,EAAE,WAAW;QAAzC,iBA6BC;QA3BC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,EAAE,CAAC,CAAC,WAAW,KAAK,GAAG,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;QAC/D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,EAAC,OAAO,CAAC,2CAA2C,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC,EAAC;gBAC/E,IAAI,OAAO,GAAQ,EAAE,CAAC;gBACtB,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC;qBACjD,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBACxC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC;IACH,CAAC;IAED,wCAAa,GAAb,UAAc,MAAM,EAAE,QAAQ,EAAE,WAAW;QAA3C,iBA6BC;QA3BC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,EAAE,CAAC,CAAC,WAAW,KAAK,GAAG,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC;QACjE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,EAAC,OAAO,CAAC,6CAA6C,GAAG,QAAQ,GAAG,UAAU,CAAC,CAAC,EAAC;gBACjF,IAAI,OAAO,GAAQ,EAAE,CAAC;gBACtB,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,MAAM,EAAE,OAAO,CAAC;qBACvD,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBACxC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC;IACH,CAAC;IAhVU,gBAAgB;QAL5B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCA6Bc,mEAAW;YACF,2EAAW;YACP,uFAAc;YACd,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;YACA,2FAAgB;OApCjC,gBAAgB,CAkV5B;IAAD,uBAAC;CAAA;AAlV4B;;;;;;;;ACnB7B,mB;;;;;;;ACAA,2GAA2G,+BAA+B,oFAAoF,gCAAgC,aAAa,sCAAsC,aAAa,cAAc,aAAa,uCAAuC,YAAY,uCAAuC,cAAc,cAAc,kEAAkE,cAAc,cAAc,qFAAqF,8BAA8B,cAAc,6DAA6D,oBAAoB,gBAAgB,YAAY,WAAW,8CAA8C,YAAY,6CAA6C,YAAY,iDAAiD,WAAW,YAAY,6LAA6L,YAAY,WAAW,YAAY,WAAW,yNAAyN,cAAc,4DAA4D,YAAY,4DAA4D,gCAAgC,cAAc,6DAA6D,oBAAoB,wCAAwC,uCAAuC,kBAAkB,uBAAuB,oBAAoB,uBAAuB,wFAAwF,YAAY,6CAA6C,YAAY,+CAA+C,YAAY,oEAAoE,8BAA8B,aAAa,WAAW,YAAY,WAAW,sDAAsD,YAAY,qDAAqD,YAAY,yDAAyD,kBAAkB,WAAW,YAAY,2FAA2F,gCAAgC,aAAa,aAAa,cAAc,aAAa,mFAAmF,YAAY,oEAAoE,gBAAgB,aAAa,cAAc,oFAAoF,YAAY,uBAAuB,+GAA+G,gBAAgB,aAAa,cAAc,oFAAoF,YAAY,uBAAuB,0GAA0G,cAAc,oFAAoF,YAAY,oFAAoF,gCAAgC,cAAc,oBAAoB,wCAAwC,uCAAuC,kBAAkB,uBAAuB,oBAAoB,uBAAuB,wIAAwI,YAAY,qEAAqE,YAAY,uEAAuE,YAAY,sFAAsF,iBAAiB,kBAAkB,aAAa,cAAc,+YAA+Y,gBAAgB,aAAa,cAAc,oFAAoF,YAAY,uBAAuB,8GAA8G,cAAc,cAAc,kEAAkE,cAAc,cAAc,qFAAqF,8BAA8B,cAAc,6DAA6D,kBAAkB,iBAAiB,mBAAmB,aAAa,gBAAgB,YAAY,WAAW,4DAA4D,YAAY,6CAA6C,YAAY,+CAA+C,YAAY,MAAM,iBAAiB,kLAAkL,cAAc,cAAc,kEAAkE,cAAc,cAAc,qFAAqF,8BAA8B,cAAc,6DAA6D,kBAAkB,iBAAiB,mBAAmB,aAAa,gBAAgB,YAAY,WAAW,6DAA6D,YAAY,6CAA6C,YAAY,+CAA+C,YAAY,KAAK,iBAAiB,2CAA2C,sBAAsB,+MAA+M,gBAAgB,aAAa,cAAc,oFAAoF,YAAY,uBAAuB,yMAAyM,gCAAgC,cAAc,oBAAoB,sCAAsC,aAAa,uBAAuB,uBAAuB,wIAAwI,WAAW,YAAY,mFAAmF,YAAY,oFAAoF,gCAAgC,cAAc,oBAAoB,wCAAwC,2BAA2B,uCAAuC,0BAA0B,sCAAsC,yBAAyB,wBAAwB,iBAAiB,mBAAmB,sCAAsC,kBAAkB,uBAAuB,2BAA2B,iIAAiI,YAAY,qEAAqE,YAAY,0EAA0E,kBAAkB,WAAW,YAAY,2GAA2G,8BAA8B,aAAa,gBAAgB,iBAAiB,mBAAmB,WAAW,YAAY,WAAW,8EAA8E,YAAY,6EAA6E,YAAY,kFAAkF,kBAAkB,YAAY,2BAA2B,WAAW,iBAAiB,8DAA8D,YAAY,iqBAAiqB,gCAAgC,cAAc,kBAAkB,wCAAwC,2BAA2B,uCAAuC,0BAA0B,sCAAsC,yBAAyB,iBAAiB,mBAAmB,wBAAwB,sCAAsC,kBAAkB,uBAAuB,2BAA2B,oHAAoH,YAAY,6DAA6D,YAAY,iEAAiE,0BAA0B,yBAAyB,4BAA4B,WAAW,YAAY,SAAS,iEAAiE,iBAAiB,oFAAoF,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,sEAAsE,YAAY,qEAAqE,YAAY,6EAA6E,2BAA2B,aAAa,cAAc,sIAAsI,YAAY,uEAAuE,YAAY,4FAA4F,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,8EAA8E,YAAY,6EAA6E,YAAY,+EAA+E,YAAY,KAAK,iBAAiB,+dAA+d,WAAW,YAAY,SAAS,gOAAgO,gCAAgC,cAAc,kBAAkB,wCAAwC,2BAA2B,uCAAuC,0BAA0B,sCAAsC,yBAAyB,iBAAiB,mBAAmB,wBAAwB,sCAAsC,kBAAkB,uBAAuB,2BAA2B,iHAAiH,YAAY,6DAA6D,YAAY,iEAAiE,WAAW,YAAY,SAAS,iEAAiE,iBAAiB,oFAAoF,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,sEAAsE,YAAY,qEAAqE,YAAY,6EAA6E,2BAA2B,aAAa,cAAc,kIAAkI,YAAY,uEAAuE,YAAY,4FAA4F,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,8EAA8E,YAAY,6EAA6E,YAAY,+EAA+E,YAAY,KAAK,aAAa,+dAA+d,WAAW,YAAY,SAAS,yMAAyM,gCAAgC,cAAc,kBAAkB,wCAAwC,2BAA2B,uCAAuC,0BAA0B,sCAAsC,yBAAyB,iBAAiB,mBAAmB,wBAAwB,sCAAsC,kBAAkB,uBAAuB,2BAA2B,iHAAiH,YAAY,6DAA6D,YAAY,iEAAiE,WAAW,YAAY,SAAS,iEAAiE,iBAAiB,oFAAoF,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,sEAAsE,YAAY,qEAAqE,YAAY,6EAA6E,2BAA2B,aAAa,cAAc,mIAAmI,YAAY,uEAAuE,YAAY,4FAA4F,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,8EAA8E,YAAY,6EAA6E,YAAY,+EAA+E,YAAY,KAAK,cAAc,+dAA+d,WAAW,YAAY,SAAS,mLAAmL,gCAAgC,cAAc,kBAAkB,wCAAwC,2BAA2B,uCAAuC,0BAA0B,sCAAsC,yBAAyB,iBAAiB,mBAAmB,wBAAwB,sCAAsC,kBAAkB,uBAAuB,2BAA2B,iHAAiH,YAAY,6DAA6D,YAAY,iEAAiE,WAAW,YAAY,SAAS,iEAAiE,iBAAiB,oFAAoF,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,sEAAsE,YAAY,qEAAqE,YAAY,6EAA6E,2BAA2B,aAAa,cAAc,sIAAsI,YAAY,uEAAuE,YAAY,4FAA4F,8BAA8B,aAAa,iBAAiB,mBAAmB,aAAa,kBAAkB,WAAW,YAAY,WAAW,8EAA8E,YAAY,6EAA6E,YAAY,+EAA+E,YAAY,KAAK,cAAc,+dAA+d,WAAW,YAAY,SAAS,yMAAyM,gCAAgC,cAAc,kBAAkB,iBAAiB,mBAAmB,wBAAwB,sCAAsC,kBAAkB,uBAAuB,sCAAsC,iHAAiH,YAAY,6EAA6E,WAAW,YAAY,mFAAmF,YAAY,6TAA6T,gCAAgC,cAAc,kBAAkB,iBAAiB,mBAAmB,wBAAwB,kBAAkB,uBAAuB,sCAAsC,gFAAgF,YAAY,6EAA6E,WAAW,YAAY,mFAAmF,YAAY,uBAAuB,uNAAuN,YAAY,SAAS,sRAAsR,cAAc,cAAc,kEAAkE,cAAc,cAAc,oHAAoH,cAAc,4DAA4D,YAAY,uBAAuB,yIAAyI,0FAA0F,gCAAgC,aAAa,kBAAkB,6DAA6D,iBAAiB,kBAAkB,oBAAoB,sCAAsC,aAAa,cAAc,4BAA4B,+DAA+D,YAAY,2CAA2C,YAAY,uBAAuB,gEAAgE,YAAY,2CAA2C,YAAY,uBAAuB,gEAAgE,YAAY,2CAA2C,YAAY,0CAA0C,gFAAgF,WAAW,YAAY,+DAA+D,YAAY,yHAAyH,WAAW,YAAY,+DAA+D,YAAY,SAAS,mK;;;;;;;;;;;;;;;;;;;;;;;ACA30vB;AACO;AAEK;AACa;AAEZ;AAO/D;IAWE,oCAAoB,KAAqB,EACrB,MAAc,EACd,YAA0B,EAC1B,eAAgC,EAChC,MAAqB;QAJrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QALzC,YAAO,GAAG,KAAK,CAAC;IAMF,CAAC;IAEf,6CAAQ,GAAR;QAAA,iBA+BC;QA9BC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CACzC,gBAAM;YACJ,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;YAC7B,KAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACrC,KAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,IAAI,CAAC;iBAC5C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAChC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;oBACtC,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;oBAC9B,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;oBAChC,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;oBACnC,EAAE,CAAC,CAAC,OAAO,KAAK,GAAG,CAAC,CAAC,CAAC;wBACpB,KAAI,CAAC,QAAQ,GAAG,+BAA+B,CAAC;wBAChD,KAAI,CAAC,QAAQ,GAAG,gDAAgD,CAAC;oBACnE,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;wBACjD,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;oBACnD,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,cAAc,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;IAEvC,CAAC;IACD,gDAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IACD,yDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,mDAAc,GAAd,UAAe,IAAI,EAAE,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,oDAAe,GAAf,UAAgB,QAAQ;QACtB,IAAI,MAAM,GAAW,EAAE,CAAC;QAExB,GAAG,CAAC,CAAgB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA3B,IAAI,OAAO;YACd,EAAE,CAAC,CAAC,QAAQ,KAAK,OAAO,CAAC,IAAI,CAAC,EAAC;gBAC7B,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;YAC1B,CAAC;SACD;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IArFU,0BAA0B;QALtC,wEAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;yCAY2B,uEAAc;YACb,+DAAM;YACA,6EAAY;YACT,yFAAe;YACxB,6EAAa;OAf9B,0BAA0B,CAsFtC;IAAD,iCAAC;CAAA;AAtFsC;;;;;;;;ACbvC,mB;;;;;;;ACAA,u1C;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC+B;AACxB;AACK;AACD;AAQ7D;IAEE,wBAAoB,EAAe,EACzB,WAAwB,EACxB,MAAc,EACd,MAAqB;QAHX,OAAE,GAAF,EAAE,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAE7B,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAMxD,cAAS,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IAZgC,CAAC;IAKpC,iCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAOD,kCAAS,GAAT,UAAU,QAAY;QAAtB,iBAaC;QAZC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;iBACzC,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC;gBACzC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;oBACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnC,CAAC;gBACD,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAhCU,cAAc;QAL1B,wEAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAGwB,mEAAW;YACZ,2EAAW;YAChB,+DAAM;YACN,6EAAa;OALpB,cAAc,CAkC1B;IAAD,qBAAC;CAAA;AAlC0B;;;;;;;;;;;;;;;;;;;;;;;ACZuB;AACT;AACkB;AACD;AAM1D;IAEI,yBAAoB,WAAwB,EAChC,MAAc,EACd,MAAqB;QAFb,gBAAW,GAAX,WAAW,CAAa;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IACjC,CAAC;IAED,kCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;IAXQ,eAAe;QAJ3B,wEAAS,CAAC;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;yCAImC,2EAAW;YACxB,+DAAM;YACN,6EAAa;OAJxB,eAAe,CAY3B;IAAD,sBAAC;CAAA;AAZ2B;;;;;;;;ACT5B,mB;;;;;;;ACAA,0LAA0L,+BAA+B,uNAAuN,8FAA8F,y7BAAy7B,uDAAuD,4DAA4D,oHAAoH,oxCAAoxC,wHAAwH,+xD;;;;;;;;;;;;;;;;;;;;;;;;ACAxgG;AACgD;AACzC;AACK;AACD;AACA;AAO7D;IAME,2BAAoB,EAAe,EACzB,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACd,MAAqB;QAJX,OAAE,GAAF,EAAE,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAN/B,YAAO,GAAG,KAAK,CAAC;QAQd,gBAAW,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC;QAC3H,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAJvB,CAAC;IAMpC,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,EAAE,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd,UAAe,QAAY;QAA3B,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC;YAC/D,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3B,OAAO,OAAO,CAAC,aAAa,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC;iBACzD,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IACD,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IArDU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAOwB,mEAAW;YACZ,2EAAW;YACX,2EAAW;YAChB,+DAAM;YACN,6EAAa;OAVpB,iBAAiB,CAsD7B;IAAD,wBAAC;CAAA;AAtD6B;AAwD9B,yBAAyB,CAAkB;IACzC,IAAI,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxC,IAAI,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAEzC,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,EAAE,CAAC,CAAC,eAAe,CAAC,KAAK,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,MAAM,CAAC,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;AACxC,CAAC;;;;;;;;AChFD,mB;;;;;;;ACAA,uPAAuP,cAAc,qBAAqB,iBAAiB,6IAA6I,oCAAoC,oBAAoB,yBAAyB,GAAG,sBAAsB,+GAA+G,oCAAoC,kM;;;;;;;;;;;;;;;;;;;;;ACAnoB;AACO;AAEkB;AAQ3E;IAOE,iCAAoB,KAAqB,EACrB,MAAc,EACd,eAAgC;QAFhC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,oBAAe,GAAf,eAAe,CAAiB;IACpC,CAAC;IAEjB,0CAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACzB,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC/B,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACxB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAC,OAAO,CAAC,CAAC;IACvC,CAAC;IACD,6CAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IACD,sDAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAWC;QAVC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IACD,gDAAc,GAAd,UAAe,IAAI,EAAE,OAAO;QAA5B,iBAUC;QATC,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iDAAe,GAAf,UAAgB,QAAQ;QACtB,IAAI,MAAM,GAAW,EAAE,CAAC;QAExB,GAAG,CAAC,CAAgB,UAAY,EAAZ,SAAI,CAAC,OAAO,EAAZ,cAAY,EAAZ,IAAY;YAA3B,IAAI,OAAO;YACd,EAAE,CAAC,CAAC,QAAQ,KAAK,OAAO,CAAC,IAAI,CAAC,EAAC;gBAC7B,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;YAC1B,CAAC;SACD;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAED,yCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IA9DU,uBAAuB;QALnC,wEAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAQ2B,uEAAc;YACb,+DAAM;YACG,yFAAe;OATzC,uBAAuB,CA+DnC;IAAD,8BAAC;CAAA;AA/DmC;;;;;;;;ACXpC,mB;;;;;;;ACAA,qLAAqL,+BAA+B,ihBAAihB,oBAAoB,iGAAiG,8EAA8E,sqBAAsqB,oBAAoB,4GAA4G,gFAAgF,68BAA68B,iBAAiB,soBAAsoB,wFAAwF,m5BAAm5B,wFAAwF,s9CAAs9C,sFAAsF,slCAAslC,oBAAoB,sYAAsY,qCAAqC,wjB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp9O;AAC+B;AACxB;AACK;AACD;AACA;AAEf;AACwC;AACvB;AAO/D;IAMA,sBAAsB;IAEpB,0BAAoB,EAAe,EACzB,WAAwB,EACxB,WAAwB,EACxB,YAA0B,EAC1B,MAAc,EACd,MAAqB,EACrB,MAAiB;QANP,OAAE,GAAF,EAAE,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,WAAM,GAAN,MAAM,CAAW;QAT3B,YAAO,GAAG,KAAK,CAAC;QAWhB,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,kDAAkD;QAClD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAPvB,CAAC;IAShC,mCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,oBAAoB;YACpB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IACL,CAAC;IAED,qCAAU,GAAV,UAAW,QAAY;QAAvB,iBAqBG;QApBD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;iBACvE,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,IAAI,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAClE,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;oBAChD,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,sCAAW,GAAX,UAAY,QAAQ,EAAE,IAAI,EAAE,KAAK;QAAjC,iBAyCC;QAxCC,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;QACtB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC;aACpC,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;gBACrB,IAAI,QAAQ,GAAQ,EAAE,CAAC;gBACvB,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC;gBACzB,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;gBAC5B,KAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,QAAQ,CAAC;qBAChD,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAqB,EAAE;4BACtD,YAAY,EAAE,IAAI;4BAClB,KAAK,EAAE,OAAO;4BACd,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,4EAA4E,GAAG,KAAK,GAAG,oCAAoC;yBACjJ,CAAC,CAAC;wBACH,+CAA+C;wBACrD;;;oCAGY;oBACR,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,IAAI,SAAS,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uGAAqB,EAAE;4BACtD,YAAY,EAAE,IAAI;4BAClB,KAAK,EAAE,OAAO;4BACd,IAAI,EAAE,KAAK,GAAG,IAAI,GAAG,wCAAwC,GAAG,KAAK,GAAG,+CAA+C;yBACxH,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IA9HQ,gBAAgB;QAL5B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCASwB,mEAAW;YACZ,2EAAW;YACX,2EAAW;YACV,6EAAY;YAClB,+DAAM;YACN,6EAAa;YACb,oEAAS;OAdhB,gBAAgB,CA+H5B;IAAD,uBAAC;CAAA;AA/H4B;;;;;;;;AChB7B,mB;;;;;;;ACAA,iLAAiL,+BAA+B,iNAAiN,gFAAgF,u1BAAu1B,kFAAkF,8xBAA8xB,0FAA0F,62BAA62B,0FAA0F,uzCAAuzC,wFAAwF,6lCAA6lC,uBAAuB,mFAAmF,wFAAwF,+xCAA+xC,uDAAuD,mEAAmE,oHAAoH,qwCAAqwC,wHAAwH,6zD;;;;;;;;;;;;;;;;;;;;;;;;ACA/tR;AACgD;AACzC;AACK;AACD;AACE;AAO/D;IAIE,2BACU,EAAe,EACf,WAAwB,EACxB,YAA0B,EAC1B,MAAc,EACd,MAAqB;QAJrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAP/B,YAAO,GAAG,KAAK,CAAC;QAUhB,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAChD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,mEAAW,CAAC,KAAK,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzG,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC;QAC3H,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAXpD,CAAC;IAaL,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,EAAE,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IACD,wCAAY,GAAZ,UAAa,QAAY;QAAzB,iBAkCC;QAjCC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,IAAI,SAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC;YAC/D,SAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3B,OAAO,SAAO,CAAC,aAAa,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAO,CAAC;iBACjC,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,oCAAoC;oBACpC,uBAAuB;oBACvB,IAAM,IAAE,GAAG,IAAI,CAAC,IAAI,CAAC;oBACrB,IAAI,OAAO,GAAQ,EAAE,CAAC;oBACtB,OAAO,CAAC,OAAO,GAAG,SAAO,CAAC,KAAK,CAAC;oBAChC,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;oBAC3B,KAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,OAAO,CAAC;yBAC/C,SAAS,CAAC,cAAI;wBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,wBAAsB,SAAO,CAAC,KAAO,CAAC,CAAC,CAAC;wBAChE,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;4BACrB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAkB,IAAE,SAAI,SAAO,CAAC,KAAO,CAAC,CAAC,CAAC;wBAClE,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC;gBACD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QAEL,CAAC;IACH,CAAC;IAzEU,iBAAiB;QAL7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAMc,mEAAW;YACF,2EAAW;YACV,6EAAY;YAClB,+DAAM;YACN,6EAAa;OATpB,iBAAiB,CA0E7B;IAAD,wBAAC;CAAA;AA1E6B;AA2E9B,yBAAyB,CAAkB;IACzC,IAAI,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxC,IAAI,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAEzC,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,EAAE,CAAC,CAAC,eAAe,CAAC,KAAK,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,MAAM,CAAC,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;AACxC,CAAC;;;;;;;;ACnGD,mB;;;;;;;ACAA,+KAA+K,+BAA+B,qdAAqd,iBAAiB,2FAA2F,gFAAgF,ipC;;;;;;;;;;;;;;;;;;;;;;;;ACA7yB;AAC+B;AACxB;AACK;AACD;AACA;AAQ7D;IAKE,8BAAoB,EAAe,EACzB,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACd,MAAqB;QAJX,OAAE,GAAF,EAAE,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAL/B,YAAO,GAAG,KAAK,CAAC;QAOhB,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAFb,CAAC;IAIpC,uCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IAED,0CAAW,GAAX,UAAY,QAAY;QAAxB,iBAqBC;QApBC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;iBACxE,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;oBACrB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,IAAI,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAClE,OAAO,CAAC,IAAI,CAAC,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;oBAClD,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/D,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,qCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IA7CU,oBAAoB;QALhC,wEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAMwB,mEAAW;YACZ,2EAAW;YACX,2EAAW;YAChB,+DAAM;YACN,6EAAa;OATpB,oBAAoB,CA8ChC;IAAD,2BAAC;CAAA;AA9CgC;;;;;;;;ACbjC,mB;;;;;;;ACAA,mLAAmL,+BAA+B,i0DAAi0D,SAAS,knBAAknB,SAAS,q2BAAq2B,aAAa,YAAY,aAAa,otCAAotC,uMAAuM,eAAe,yDAAyD,WAAW,qDAAqD,YAAY,qDAAqD,sBAAsB,qDAAqD,eAAe,m3CAAm3C,yEAAyE,8BAA8B,gFAAgF,WAAW,8K;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnuN;AAC+B;AAChB;AACtB;AACiB;AACF;AACY;AAEE;AAQxE;IAiBE,0BACU,EAAe,EACf,WAAwB,EACxB,eAA+B,EAC/B,eAAgC,EAChC,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QAPlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAgB;QAC/B,oBAAe,GAAf,eAAe,CAAiB;QAChC,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAV5B,YAAO,GAAG,KAAK,CAAC;QAahB,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IALvD,CAAC;IAOL,mCAAQ,GAAR;QAAA,iBAkCC;QAjCC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QACH,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACvC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC;YAC/B,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAE/C,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,IAAI,EAAE,KAAI,CAAC,UAAU;gBACrB,QAAQ,EAAE,KAAI,CAAC,SAAS;gBACxB,MAAM,EAAE,KAAI,CAAC,OAAO;gBACpB,QAAQ,EAAE,KAAI,CAAC,SAAS;aACzB,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,+CAAoB,GAApB,UAAqB,OAAO;QAA5B,iBAiBC;QAhBC,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,EAAE,CAAC,CAAC,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC;wBACxB,KAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC;oBACvB,CAAC;oBACD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,CAAC,CAAC,CAAC;wBACrB,KAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;oBACtB,CAAC;gBAEH,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,GAAG,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;oBACrD,KAAI,CAAC,EAAE,GAAG,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,KAAK,EAAC,sBAAsB,EAAC,CAAC,CAAC;gBACtD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,+DAA+D;YAC/D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EACvC;gBACE,WAAW,EAAE;oBACX,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI;oBAChC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;oBACxC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM;oBACpC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ;oBACxC,IAAI,EAAE,CAAC;oBACP,MAAM,EAAE,IAAI;iBAAE;aACjB,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,sCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBA+BC;QA9BC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,OAAO,CAAC;aAC1C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;gBAC3B,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;gBAC/B,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,WAAW,GAAG,eAAe,CAAC;gBAEnC,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;oBACzB,IAAI,EAAE,KAAI,CAAC,UAAU;oBACrB,QAAQ,EAAE,KAAI,CAAC,SAAS;oBACxB,MAAM,EAAE,KAAI,CAAC,OAAO;oBACpB,QAAQ,EAAE,KAAI,CAAC,SAAS;iBACzB,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EACrC;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,UAAU;gBACrB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,sCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,oCAAS,GAAT,UAAU,MAAM;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,EACrC;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,UAAU;gBACrB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAa,GAAb,UAAc,MAAc,EAAE,SAAiB,EAAE,MAAc;QAA/D,iBA6BC;QA3BC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,EAAE,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACtD,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,EAAC,OAAO,CAAC,6CAA6C,GAAG,SAAS,GAAG,UAAU,CAAC,CAAC,EAAC;gBAClF,IAAI,WAAW,GAAQ,EAAE,CAAC;gBAC1B,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC;gBAC9B,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,MAAM,EAAE,WAAW,CAAC;qBAC1D,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBAC7D,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC;IACH,CAAC;IAED,0CAAe,GAAf,UAAgB,MAAc,EAAE,SAAiB,EAAE,MAAc;QAAjE,iBA6BC;QA3BC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,EAAE,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC1D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,EAAC,OAAO,CAAC,+CAA+C,GAAG,SAAS,GAAG,UAAU,CAAC,CAAC,EAAC;gBACpF,IAAI,WAAW,GAAQ,EAAE,CAAC;gBAC1B,WAAW,CAAC,MAAM,GAAG,UAAU,CAAC;gBAChC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,MAAM,EAAE,WAAW,CAAC;qBAC1D,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;wBACrB,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;wBAC7D,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC;QACH,CAAC;IACH,CAAC;IAED,oCAAS,GAAT,UAAU,MAAM;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,MAAQ,CAAC,EAC1C;YACE,WAAW,EAAE;gBACX,IAAI,EAAE,IAAI,CAAC,UAAU;gBACrB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CAAC,CAAC;IACP,CAAC;IA/PU,gBAAgB;QAL5B,wEAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAmBc,mEAAW;YACF,2EAAW;YACP,uFAAc;YACd,yFAAe;YACzB,uEAAc;YACb,+DAAM;YACN,6EAAa;YACX,iEAAQ;OAzBjB,gBAAgB,CAiQ5B;IAAD,uBAAC;CAAA;AAjQ4B;;;;;;;;AChB7B,mB;;;;;;;ACAA,gLAAgL,+BAA+B,mgBAAmgB,iBAAiB,+VAA+V,aAAa,wTAAwT,cAAc,oXAAoX,kBAAkB,yXAAyX,kBAAkB,kXAAkX,iBAAiB,wXAAwX,kCAAkC,4TAA4T,gBAAgB,sX;;;;;;;;;;;;;;;;;;;;;;;;ACA7tG;AAC+B;AACxB;AAEK;AACD;AACA;AAQ7D;IAKE,4BACU,EAAe,EACf,WAAwB,EACxB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAR/B,YAAO,GAAG,KAAK,CAAC;QAWhB,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAChD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IARjD,CAAC;IAUL,qCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC;QACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;IACL,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAED,qCAAQ,GAAR,UAAS,EAAE;QAAX,iBAaC;QAZC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;IACL,CAAC;IACD,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAmB,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IAC7E,CAAC;IAvEU,kBAAkB;QAL9B,wEAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAOc,mEAAW;YACF,2EAAW;YACX,2EAAW;YACjB,uEAAc;YACb,+DAAM;YACN,6EAAa;OAXpB,kBAAkB,CAwE9B;IAAD,yBAAC;CAAA;AAxE8B;;;;;;;;;;;;;;;;;;;;;;;ACdY;AACwD;AAE5C;AACE;AAGzD;IACI,mBAAoB,WAAwB,EAChC,MAAc,EACd,MAAqB;QAFb,gBAAW,GAAX,WAAW,CAAa;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,iCAAa,GAAb,UAAc,GAAW;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mCAAmC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IAjBQ,SAAS;QADrB,yEAAU,EAAE;yCAEwB,2EAAW;YACxB,+DAAM;YACN,6EAAa;OAHxB,SAAS,CAkBrB;IAAD,gBAAC;CAAA;AAlBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqB;AAC4B;AAC1B;AACF;AACb;AACG;AACF;AACI;AAGnC;IAIE,yBAAoB,IAAU,EAAU,OAAgB;QAApC,SAAI,GAAJ,IAAI,CAAM;QAAU,YAAO,GAAP,OAAO,CAAS;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,CAAC;IACJ,CAAC;IAEF,0CAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,0BAAuB,EAAE,KAAK,EAAE,OAAO,CAAC;aAC3E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,0CAAgB,GAAhB,UAAiB,MAAM;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,0BAAuB,EAAE,MAAM,EAAE,OAAO,CAAC;aAC1E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAY,GAAZ,UAAa,MAAM,EAAE,SAAS;QAC5B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,sBAAiB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;aAC/F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,wCAAc,GAAd,UAAe,UAAU;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAI,IAAI,CAAC,QAAQ,sBAAiB,UAAY,EAAE,OAAO,CAAC;aAC1E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,4CAAkB,GAAlB,UAAmB,MAAM,EAAE,SAAS;QAClC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,sBAAiB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;aAC9F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,wCAAc,GAAd,UAAe,SAAS;QACtB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,wBAAqB,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,OAAO,CAAC;aAC3F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,wCAAc,GAAd,UAAe,UAAU;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,yBAAoB,UAAY,EAAE,OAAO,CAAC;aAC1E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAW,GAAX,UAAY,UAAU;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,sBAAiB,UAAY,EAAE,OAAO,CAAC;aACvE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,4CAAkB,GAAlB,UAAmB,aAAa;QAC9B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,yBAAoB,aAAe,EAAE,OAAO,CAAC;aAC7E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,0CAAgB,GAAhB,UAAiB,YAAY,EAAE,aAAa;QAC1C,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,uBAAkB,YAAY,eAAU,aAAe,EAAE,OAAO,CAAC;aACjG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IACD,0CAAgB,GAAhB;QACE,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,mBAAgB,EAAE,OAAO,CAAC;aAC1D,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,qCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAhIU,eAAe;QAD3B,yEAAU,EAAE;yCAKe,2DAAI,EAAmB,4DAAO;OAJ7C,eAAe,CAkI3B;IAAD,sBAAC;CAAA;AAlI2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVe;AAC4B;AAC1B;AACF;AACb;AACG;AACF;AACI;AAGnC;IAIE,0BAAoB,IAAU,EAAU,OAAgB;QAApC,SAAI,GAAJ,IAAI,CAAM;QAAU,YAAO,GAAP,OAAO,CAAS;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,CAAC;IACJ,CAAC;IAEF,sCAAW,GAAX,UAAY,MAAM,EAAE,KAAK;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,yBAAoB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC7F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,4CAAiB,GAAjB,UAAkB,MAAM,EAAE,KAAK;QAC7B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,+BAA0B,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACnG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAW,GAAX,UAAY,KAAK;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,2BAAwB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC1F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,kCAAO,GAAP,UAAQ,MAAM;QACZ,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,qBAAgB,MAAQ,EAAE,OAAO,CAAC;aAClE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAU,GAAV,UAAW,MAAM;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,2BAAsB,MAAQ,EAAE,OAAO,CAAC;aACxE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,sCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAtEU,gBAAgB;QAD5B,yEAAU,EAAE;yCAKe,2DAAI,EAAmB,4DAAO;OAJ7C,gBAAgB,CAuE5B;IAAD,uBAAC;CAAA;AAvE4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVc;AAC4B;AAC1B;AACF;AACb;AACG;AACF;AACI;AAGnC;IAIE,wBAAoB,IAAU,EAAU,OAAgB;QAApC,SAAI,GAAJ,IAAI,CAAM;QAAU,YAAO,GAAP,OAAO,CAAS;QACpD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,CAAC;IACJ,CAAC;IAED,sCAAa,GAAb,UAAc,KAAK;QAClB,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAE,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,mBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACnF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAa,GAAb,UAAc,OAAO;QACnB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,yBAAsB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aAC1F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,0CAAiB,GAAjB,UAAkB,OAAO,EAAE,MAAM;QAC/B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,+BAA0B,OAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aACrG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,2CAAkB,GAAlB,UAAmB,OAAO,EAAE,MAAM;QAChC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,gCAA2B,OAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aACtG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAY,GAAZ;QACE,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,mBAAgB,EAAE,OAAO,CAAC;aAC1D,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,oCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAnEU,cAAc;QAD1B,yEAAU,EAAE;yCAKe,2DAAI,EAAmB,4DAAO;OAJ7C,cAAc,CAoE1B;IAAD,qBAAC;CAAA;AApE0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACVgB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC;IAGE,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAED,uCAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,KAAK,EAAE,OAAO,CAAC;aAC1D,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAS,GAAT,UAAU,MAAM,EAAE,QAAQ,EAAE,MAAM;QAChC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAa,MAAM,kBAAa,QAAU,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aAC7F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAgB,GAAhB,UAAiB,OAAO,EAAE,MAAM;QAC9B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0BAAwB,OAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aACnF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAgB,GAAhB,UAAiB,MAAM;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAsB,EAAE,MAAM,EAAE,OAAO,CAAC;aACzD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAS,GAAT,UAAU,MAAM,EAAE,MAAM;QACtB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sBAAoB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aAC/E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,sCAAe,GAAf,UAAgB,MAAM,EAAE,MAAM;QAC5B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iCAA+B,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aAC1F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,mCAAY,GAAZ,UAAa,MAAM,EAAE,MAAM;QACzB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAuB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aAClF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,+BAAQ,GAAR,UAAS,OAAO;QACd,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAa,OAAS,EAAE,OAAO,CAAC;aAChD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,mCAAY,GAAZ,UAAa,MAAM;QACjB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAiB,MAAQ,EAAE,OAAO,CAAC;aACnD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,2CAAoB,GAApB,UAAqB,MAAM,EAAC,QAAQ;QAClC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAAyB,MAAM,kBAAa,QAAU,EAAE,OAAO,CAAC;aAChF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,kCAAW,GAAX,UAAY,OAAO;QACjB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAa,OAAS,EAAE,OAAO,CAAC;aACnD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,kCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAnIU,YAAY;QADxB,yEAAU,EAAE;yCAIe,2DAAI;OAHnB,YAAY,CAqIxB;IAAD,mBAAC;CAAA;AArIwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC;IAGE,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAED,yCAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,2CAA2C;QAC3C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,EAAE,OAAO,CAAC;aAC3D,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,kCAAU,GAAV,UAAW,MAAM,EAAE,OAAO;QACxB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAc,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aAC1E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,yCAAiB,GAAjB,UAAkB,QAAQ,EAAE,OAAO;QACjC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAAyB,QAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aACtF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,yCAAiB,GAAjB,UAAkB,OAAO;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,OAAO,EAAE,OAAO,CAAC;aAC3D,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,kCAAU,GAAV,UAAW,MAAM,EAAE,OAAO;QACxB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,uBAAqB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aACjF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAa,GAAb,UAAc,MAAM,EAAE,OAAO;QAC3B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0BAAwB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aACpF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAS,GAAT,UAAU,QAAQ;QAChB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAc,QAAU,EAAE,OAAO,CAAC;aAClD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAa,GAAb,UAAc,MAAM;QAClB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oBAAkB,MAAQ,EAAE,OAAO,CAAC;aACpD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,oCAAY,GAAZ,UAAa,QAAQ;QACnB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAc,QAAU,EAAE,OAAO,CAAC;aACrD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,mCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IA7GU,aAAa;QADzB,yEAAU,EAAE;yCAIe,2DAAI;OAHnB,aAAa,CA8GzB;IAAD,oBAAC;CAAA;AA9GyB;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAKnC;IAIE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,gCAAU,GAAV;QACE,IAAI,CAAC;YACD,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;YACpC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,2BAAK,GAAL,UAAM,KAAK;QAAX,iBAiBC;QAhBC,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACjE,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACjE,EAAE,CAAC,UAAC,QAAkB;YACnB,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,WAAW,GAAU,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBAClD,IAAI,OAAO,GAAQ,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBACvC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;gBAEtC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IA7CU,WAAW;QADvB,yEAAU,EAAE;yCAKe,2DAAI;OAJnB,WAAW,CA+CvB;IAAD,kBAAC;CAAA;AA/CuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AAC4B;AAC1B;AACL;AACV;AACG;AACF;AACI;AAGnC;IAIE,sBAAoB,IAAU,EAAU,OAAgB;QAApC,SAAI,GAAJ,IAAI,CAAM;QAAU,YAAO,GAAP,OAAO,CAAS;QACtD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;QACjC,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,CAAC;IACH,CAAC;IAED,4CAAqB,GAArB,UAAsB,KAAK;QACzB,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAE,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,IAAI,CAAC,QAAQ,sBAAmB,EAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACrF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,4CAAqB,GAArB,UAAsB,IAAI;QACxB,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAE,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,IAAI,CAAC,QAAQ,mBAAc,IAAM,EAAE,OAAO,CAAC;aAC/D,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,kCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IA/BU,YAAY;QADxB,yEAAU,EAAE;yCAKe,2DAAI,EAAmB,4DAAO;OAJ7C,YAAY,CAiCxB;IAAD,mBAAC;CAAA;AAjCwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVkB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC;IAGE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,OAAO,CAAC;aACxD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,oCAAc,GAAd,UAAe,KAAK;QAClB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,OAAO,CAAC;aACxD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,OAAO,CAAC;aACtD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,oCAAc,GAAd,UAAe,KAAK;QAClB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,EAAE,OAAO,CAAC;aACtD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK;QACvC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAY,MAAM,kBAAa,QAAQ,iBAAY,OAAS,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC9G,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,MAAM,EAAE,KAAK;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAmB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC5E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,MAAM,EAAE,KAAK;QAC7B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAAyB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAClF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,MAAM,EAAE,KAAK;QAC7B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAAyB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAClF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IACD,oCAAc,GAAd,UAAe,MAAM,EAAE,KAAK;QAC1B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAsB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC/E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,6BAAO,GAAP,UAAQ,MAAM;QACZ,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAY,MAAQ,EAAE,OAAO,CAAC;aAC9C,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAU,GAAV,UAAW,MAAM;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAqB,MAAQ,EAAE,OAAO,CAAC;aACvD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAU,GAAV,UAAW,MAAM;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAY,MAAQ,EAAE,OAAO,CAAC;aACjD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,MAAM,EAAE,KAAK;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,wBAAsB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAChF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAM,EAAE,KAAK;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAmB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC7E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,MAAM,EAAE,KAAK;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,mBAAiB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC3E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IA3KU,WAAW;QADvB,yEAAU,EAAE;yCAIe,2DAAI;OAHnB,WAAW,CA6KvB;IAAD,kBAAC;CAAA;AA7KuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC;IAGE,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC1B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,CAAC;IACL,CAAC;IAEH;;;;;;OAMG;IACD,8BAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAE,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC7D,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,6BAAO,GAAP,UAAQ,MAAM;QACV,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAY,MAAQ,EAAE,OAAO,CAAC;aAChD,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAU,GAAV,UAAW,MAAM,EAAE,KAAK;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAY,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACvE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEH;;;;;;;;;;;;;;;;;;;;;MAqBE;IAEA,oCAAc,GAAd,UAAe,MAAM,EAAE,KAAK;QACxB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,kBAAgB,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC3E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,MAAM,EAAE,KAAK;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAa,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACxE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,iCAAW,GAAX,UAAY,KAAK;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACpE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAe;QAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,mEAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAClE,CAAC;IA1GU,WAAW;QADvB,yEAAU,EAAE;yCAIe,2DAAI;OAHnB,WAAW,CA2GvB;IAAD,kBAAC;CAAA;AA3GuB;;;;;;;;;ACTxB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n      <p class=\\\"text-muted\\\">&copy; Copyright 2017 | kaXet app</p>\\n  </div>\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kaXet';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class Globals {\n    //adminurl: String = 'http://localhost:2002';\n    adminurl: String = 'https://apikxadmin-dot-kaxetd.appspot.com';\n    //notifurl: String = 'http://localhost:2004';\n    notifurl: String = 'https://apikxnotif-dot-kaxetd.appspot.com';\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.global.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoadingModule, ANIMATION_TYPES } from 'ngx-loading';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n/* Global Variables */\nimport {Globals} from './app.global';\n\n/* Services Modules */\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { UserService } from './services/user.service';\nimport { ArtistService } from './services/artist.service';\nimport { AlbumService } from './services/album.service';\nimport { SongService } from './services/song.service';\nimport { UsermgtService } from './services/admin/usermgt.service';\nimport { SongadminService } from './services/admin/songadmin.service';\nimport { MsconfigService } from './services/admin/msconfig.service';\nimport { NotifService } from './services/notif.service';\n\n/* common Modules */\nimport { ToastrService } from './common/toastr.service';\nimport { DatePipe } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { PasswordComponent } from './components/user/password/password.component';\nimport { ProfileComponent } from './components/user/profile/profile.component';\nimport { LogoutComponent } from './components/user/logout.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EditartistComponent } from './components/artist/editartist/editartist.component';\nimport { ListartistComponent } from './components/artist/listartist/listartist.component';\nimport { ViewartistComponent } from './components/artist/viewartist/viewartist.component';\nimport { AddartistComponent } from './components/artist/addartist/addartist.component';\nimport { EditartistphotoComponent } from './components/artist/editartistphoto/editartistphoto.component';\nimport { AddalbumComponent } from './components/album/addalbum/addalbum.component';\nimport { ListalbumComponent } from './components/album/listalbum/listalbum.component';\nimport { ViewalbumComponent } from './components/album/viewalbum/viewalbum.component';\nimport { EditalbumComponent } from './components/album/editalbum/editalbum.component';\nimport { EditalbumphotoComponent } from './components/album/editalbumphoto/editalbumphoto.component';\nimport { AddsongComponent } from './components/song/addsong/addsong.component';\nimport { ListsongComponent } from './components/song/listsong/listsong.component';\nimport { EditsongfilesComponent } from './components/song/editsongfiles/editsongfiles.component';\nimport { ViewsongComponent } from './components/song/viewsong/viewsong.component';\nimport { EditsongComponent } from './components/song/editsong/editsong.component';\nimport { PostregisteredComponent } from './components/user/postregistered/postregistered.component';\nimport { UsermgtComponent } from './components/usermgt/usermgt.component';\nimport { ViewlabelComponent } from './components/usermgt/viewlabel/viewlabel.component';\nimport { UpdateemailComponent } from './components/user/updateemail/updateemail.component';\nimport { EmailverificationComponent } from './components/user/emailverification/emailverification.component';\nimport { SongmgtComponent } from './components/songmgt/songmgt.component';\nimport { AddconfigComponent } from './components/msconfig/addconfig/addconfig.component';\nimport { AddgroupComponent } from './components/msconfig/addgroup/addgroup.component';\nimport { ListconfigComponent } from './components/msconfig/listconfig/listconfig.component';\nimport { ViewconfigComponent } from './components/msconfig/viewconfig/viewconfig.component';\nimport { EditconfigfileComponent } from './components/msconfig/editconfigfile/editconfigfile.component';\nimport { EditconfigComponent } from './components/msconfig/editconfig/editconfig.component';\nimport { KxInfoDialogComponent } from './components/kx-info-dialog/kx-info-dialog.component';\n\nconst appRoutes: Routes = [\n  {path: '',redirectTo:'login',pathMatch:'full'},\n  {path:'register', component:RegisterComponent},\n  {path:'postregistered/:nm', component:PostregisteredComponent},\n  {path:'login', component:LoginComponent},\n  {path:'about', component:AboutComponent},\n  {path:'logout', component:LogoutComponent, canActivate:[AuthGuard]},\n  {path:'profile', component:ProfileComponent, canActivate:[AuthGuard]},\n  {path:'password', component:PasswordComponent, canActivate:[AuthGuard]},\n  {path:'report', component:DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'addartist', canActivate: [ AuthGuard], component: AddartistComponent },\n  {path: 'editartist/:id', canActivate: [ AuthGuard], component: EditartistComponent },\n  {path: 'listartist', canActivate: [ AuthGuard], component: ListartistComponent },\n  {path: 'editartistphoto/:id', component:EditartistphotoComponent, canActivate:[AuthGuard]},\n  {path: 'viewartist/:id', canActivate: [ AuthGuard], component: ViewartistComponent },\n  {path: 'addalbum', canActivate: [ AuthGuard], component: AddalbumComponent },\n  {path: 'listalbum', canActivate: [ AuthGuard], component: ListalbumComponent },\n  {path: 'viewalbum/:id', canActivate: [ AuthGuard], component: ViewalbumComponent },\n  {path: 'editalbum/:id', canActivate: [ AuthGuard], component: EditalbumComponent },\n  {path: 'editalbumphoto/:id', component:EditalbumphotoComponent, canActivate:[AuthGuard]},\n  {path: 'addsong', canActivate: [ AuthGuard], component: AddsongComponent },\n  {path: 'listsong', canActivate: [ AuthGuard], component: ListsongComponent },\n  {path: 'editsongfiles/:id', component:EditsongfilesComponent, canActivate:[AuthGuard]},\n  {path: 'viewsong/:id', canActivate: [ AuthGuard], component: ViewsongComponent },\n  {path: 'editsong/:id', canActivate: [ AuthGuard], component: EditsongComponent },\n  {path: 'usermanagement', canActivate: [ AuthGuard], component: UsermgtComponent },\n  {path: 'viewlabel/:id', canActivate: [ AuthGuard], component: ViewlabelComponent },\n  {path: 'updateemail', canActivate: [ AuthGuard], component: UpdateemailComponent },\n  {path: 'verify', component: EmailverificationComponent },\n  {path: 'songmanagement', canActivate: [ AuthGuard], component: SongmgtComponent },\n  {path: 'addconfig', canActivate: [ AuthGuard], component: AddconfigComponent },\n  {path: 'addgroup', canActivate: [ AuthGuard], component: AddgroupComponent },\n  {path: 'listconfig', canActivate: [ AuthGuard], component: ListconfigComponent },\n  {path: 'viewconfig/:id', canActivate: [ AuthGuard], component: ViewconfigComponent },\n  {path: 'editconfigfile/:id', component:EditconfigfileComponent, canActivate:[AuthGuard]},\n  {path: 'editconfig/:id', component:EditconfigComponent, canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    PasswordComponent,\n    ProfileComponent,\n    LogoutComponent,\n    AboutComponent,\n    DashboardComponent,\n    EditartistComponent,\n    ListartistComponent,\n    ViewartistComponent,\n    AddartistComponent,\n    EditartistphotoComponent,\n    AddalbumComponent,\n    ListalbumComponent,\n    ViewalbumComponent,\n    EditalbumComponent,\n    EditalbumphotoComponent,\n    AddsongComponent,\n    ListsongComponent,\n    EditsongfilesComponent,\n    ViewsongComponent,\n    EditsongComponent,\n    PostregisteredComponent,\n    UsermgtComponent,\n    ViewlabelComponent,\n    UpdateemailComponent,\n    EmailverificationComponent,\n    SongmgtComponent,\n    AddconfigComponent,\n    AddgroupComponent,\n    ListconfigComponent,\n    ViewconfigComponent,\n    EditconfigfileComponent,\n    EditconfigComponent,\n    KxInfoDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatProgressBarModule,\n    BrowserAnimationsModule,\n    LoadingModule.forRoot({\n      animationType: ANIMATION_TYPES.threeBounce,\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \n      backdropBorderRadius: '4px',\n      primaryColour: '#00008B', \n      secondaryColour: '#ce3b3b', \n      tertiaryColour: '#2b966b'\n  }),\n    RouterModule.forRoot(appRoutes)\n  ],\n  entryComponents: [\n    KxInfoDialogComponent\n  ],\n  providers: [ Globals,\n    ToastrService, \n    AuthService, \n    AuthGuard, \n    UserService, \n    ArtistService, \n    AlbumService, \n    SongService, \n    DatePipe,\n    UsermgtService,\n    SongadminService,\n    MsconfigService,\n    NotifService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\ndeclare let toastr:any\n\n@Injectable()\nexport class ToastrService {\n\n  constructor() { }\n  success(message: string, title?: string) {\n    toastr.success(message, title)\n  }\n  info(message: string, title?: string) {\n    toastr.info(message, title)\n  }\n  warning(message: string, title?: string) {\n    toastr.warning(message, title)\n  }\n  error(message: string, title?: string) {\n    toastr.error(message, title)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/toastr.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.css\n// module id = ./src/app/components/about/about.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n    <h1></h1>\\n</div>\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"../../../cassetteicon.png\\\">\\n      <h2>kaXet v1.0</h2>\\n      <p>An app for inspiring and commercial music</p>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.html\n// module id = ./src/app/components/about/about.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/about/about.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/addalbum/addalbum.component.css\n// module id = ./src/app/components/album/addalbum/addalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Album</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"addAlbumForm\\\" (ngSubmit)=\\\"addAlbum(addAlbumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('artistid').invalid && addAlbumForm.get('artistid').dirty}\\\">\\n      <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist Id <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n            <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('artistid').dirty && addAlbumForm.get('artistid').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('artistid').errors.required\\\">\\n              Please enter the artist\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumname').invalid && addAlbumForm.get('albumname').dirty}\\\">\\n        <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"albumname\\\" id=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumname').dirty && addAlbumForm.get('albumname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumname').errors.required\\\">\\n                Please enter the album name\\n            </span>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumyear').invalid && addAlbumForm.get('albumyear').dirty}\\\">\\n      <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-6\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"albumyear\\\" id=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumyear').dirty && addAlbumForm.get('albumyear').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumyear').errors.required\\\">\\n              Please enter the album year\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumgenre').invalid && addAlbumForm.get('albumgenre').dirty}\\\">\\n      <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n          <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n              <option *ngFor=\\\"let a of genre\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n          </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumgenre').dirty && addAlbumForm.get('albumgenre').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumgenre').errors.required\\\">\\n              Please select album genre\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumprice').invalid && addAlbumForm.get('albumprice').dirty}\\\">\\n      <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\">Rp</div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"albumprice\\\" [formControl]=\\\"albumprice\\\" placeholder=\\\"Album Price\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumprice').dirty && addAlbumForm.get('albumprice').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumprice').errors.required\\\">\\n              Please enter price\\n          </span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumprice').errors.pattern\\\">\\n              Please enter a valid amount\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumimage').invalid && addAlbumForm.get('albumimage').dirty}\\\">\\n        <label for=\\\"albumimage\\\" class=\\\"col-sm-2 control-label\\\">Album Photo</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" #inputimg type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"albumimage\\\" id=\\\"albumimage\\\" placeholder=\\\"Album image\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-5\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"addAlbumForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n        </div>\\n        <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n            <sup>*</sup> required\\n        </div>\\n    </div>\\n  </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/addalbum/addalbum.component.html\n// module id = ./src/app/components/album/addalbum/addalbum.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-addalbum',\n  templateUrl: './addalbum.component.html',\n  styleUrls: ['./addalbum.component.css']\n})\nexport class AddalbumComponent implements OnInit {\n  addAlbumForm: FormGroup;\n  userObj: any;\n  genre: IMsconfigGroupList[];\n  filesToUpload: Array<File> = [];\n  albumid: String;\n  artistlist: IArtistList[];\n  loading = false;\n  @ViewChild('inputimg')albumimageVar: any;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistid = new FormControl('', [Validators.required]);  \n  albumname = new FormControl('', [Validators.required]);\n  albumyear = new FormControl('', [Validators.required]);\n  albumgenre = new FormControl('', [Validators.required]);\n  albumprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  albumphotopath: String;\n  albumphotoname: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.getArtistList(this.userObj.userid);\n    this.getMsconfigGroupList('GENRE');\n    this.albumid = '';\n    this.addAlbumForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      albumprice: this.albumprice,\n      albumimage: this.filesToUpload,\n      albumphotopath: this.albumphotopath,\n      albumphotoname: this.albumphotoname\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.genre = data.data;\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  addAlbum(formdata:any): void {\n    if (this.addAlbumForm.dirty && this.addAlbumForm.valid) {\n      const files: Array<File> = this.filesToUpload;\n      let theForm = this.addAlbumForm.value;\n      let lformData: FormData = new FormData();\n      console.log('Ini file: '+ files[0]['name']);\n      \n      lformData.append('albumimage',files[0],files[0]['name']);\n      console.dir(theForm);\n      this.loading = true;\n      this.albumService.uploadAlbumphoto(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.toastr.error(data.message);\n          } else {\n              theForm.albumphotopath = data.filedata.albumphotopath;\n              theForm.albumphotoname = data.filedata.albumphotoname;\n              theForm.status = 'STSACT';\n              console.log('Ini file path: '+ theForm.albumphotopath);\n              if (this.albumid !== '') {\n                theForm.albumid = this.albumid;\n              }\n              this.albumService.saveAlbum(this.userObj.userid, theForm.artistid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.toastr.error(data.message);\n                } else {\n                  this.loading = false;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listalbum']);\n                }\n                this.addAlbumForm.reset();\n                this.albumimageVar.nativeElement.value = \"\";\n              });\n          }   \n        });\n \n    }\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.filesToUpload);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/addalbum/addalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbum/editalbum.component.css\n// module id = ./src/app/components/album/editalbum/editalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Album</h3>\\n    </div>\\n    <form [formGroup]=\\\"albumForm\\\" (ngSubmit)=\\\"saveAlbum(albumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumname').invalid && albumForm.get('albumname').dirty}\\\">\\n            <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumname').dirty && albumForm.get('albumname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} album name</span>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('artistid').invalid && albumForm.get('artistid').dirty}\\\">\\n            <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n                    <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('artistid').dirty && albumForm.get('artistid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('artistid').errors.required\\\">\\n                    Please select artist status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumyear').invalid && albumForm.get('albumyear').dirty}\\\">\\n            <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumyear').dirty && albumForm.get('albumyear').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter album year</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumgenre').invalid && albumForm.get('albumgenre').dirty}\\\">\\n            <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Album Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n                    <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumgenre').dirty && albumForm.get('albumgenre').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumgenre').errors.required\\\">\\n                    Please select album genre\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumprice').invalid && albumForm.get('albumprice').dirty}\\\">\\n            <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"albumprice\\\" [formControl]=\\\"albumprice\\\" placeholder=\\\"Enter price\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumprice').dirty && albumForm.get('albumprice').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumprice').errors.required\\\">\\n                    Please enter price\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumprice').errors.pattern\\\">\\n                    Please enter a valid amount\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('status').invalid && albumForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('status').dirty && albumForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('status').errors.required\\\">\\n                    Please select album status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"albumForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbum/editalbum.component.html\n// module id = ./src/app/components/album/editalbum/editalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editalbum',\n  templateUrl: './editalbum.component.html',\n  styleUrls: ['./editalbum.component.css']\n})\nexport class EditalbumComponent implements OnInit {\n  albumForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  albumid: String;\n  artistlist: IArtistList[];\n  btnLbl: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  \n  artistid = new FormControl('', [Validators.required]);  \n  albumname = new FormControl('', [Validators.required]);\n  albumyear = new FormControl('', [Validators.required]);\n  albumgenre = new FormControl('', [Validators.required]);\n  albumprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.albumid = params['id'];\n      this.getAlbum(this.albumid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getArtistList(this.userObj.userid);\n    this.albumForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      albumprice: this.albumprice,\n      status: this.status\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n          this.router.navigate(['listalbum']);\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.albumForm.patchValue({\n      artistid: data.artistid,\n      albumname: data.albumname,\n      albumyear: data.albumyear,\n      albumgenre: data.albumgenre,\n      albumprice: data.albumprice,\n      status: data.status\n    });\n  }\n\n  saveAlbum(formdata:any): void {\n    if (this.albumForm.valid) {\n      const theForm:any = this.albumForm.value;\n      if (this.albumid !== '') {\n        theForm.albumid = this.albumid;\n      \n      }\n      this.albumService.saveAlbum(this.userObj.userid,theForm.artistid, theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.albumid) {\n            this.albumForm.reset();\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/editalbum/editalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbumphoto/editalbumphoto.component.css\n// module id = ./src/app/components/album/editalbumphoto/editalbumphoto.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>Change Photo</h1>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"albumForm\\\" (ngSubmit)=\\\"updatePhoto(albumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n\\n        <div class=\\\"col-lg-6 col-sm-6 col-12\\\">\\n            <label for=\\\"albumimage\\\" class=\\\"col-sm-3 control-label\\\"></label>\\n            <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n            <br><br>\\n            <div class=\\\"input-group\\\">\\n                <label class=\\\"input-group-btn\\\">\\n                    <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                        Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"albumimage\\\" id=\\\"albumimage\\\" style=\\\"display:none\\\">\\n                    </span>\\n                </label>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n              </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">     </label>\\n            <div class=\\\"col-sm-10\\\">\\n                <br>\\n                <button [disabled]=\\\"this.loading == true\\\" type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/editalbumphoto/editalbumphoto.component.html\n// module id = ./src/app/components/album/editalbumphoto/editalbumphoto.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IAlbum } from '../../../interface/album';\n\n@Component({\n  selector: 'app-editalbumphoto',\n  templateUrl: './editalbumphoto.component.html',\n  styleUrls: ['./editalbumphoto.component.css']\n})\nexport class EditalbumphotoComponent implements OnInit {\n  albumForm: FormGroup\n  userObj: any;\n  album: IAlbum;\n  albumid: String;\n  filesToUpload: Array<File> = [];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private albumService: AlbumService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  \n  albumphotopath = new FormControl('', [Validators.nullValidator]);\n  albumphotoname = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.albumForm = this.fb.group({\n      albumphotopath: this.albumphotopath,\n      albumphotoname: this.albumphotoname\n    });\n    this.route.params.subscribe((params: any) => {\n      this.albumid = params['id'];\n      this.getAlbum(this.albumid);\n    });\n  }\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.album = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n          this.router.navigate(['listalbum']);\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.deletedFilename = this.album.albumphotoname;\n    this.displayImg = this.album.albumphotopath;\n    this.albumForm.patchValue({\n      albumphotopath: data.albumphotopath,\n      albumphotoname: data.albumphotoname\n    });\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    this.newfile = this.filesToUpload[0]['name'];\n    console.log('content file: ' + this.filesToUpload);\n    this.uploadNewPhoto(this.filesToUpload);  \n  }\n\n  uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('albumimage',files[0],files[0]['name']);\n    this.loading = true;\n    this.albumService.uploadAlbumphoto(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.displayImg = data.filedata.albumphotopath;\n        let payloadData: any = this.albumForm.value;\n        this.albumService.deleteAlbumPhoto(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.albumphotoname);\n            }   \n          });\n           \n        this.albumForm.value.albumphotopath = data.filedata.albumphotopath;\n        this.albumForm.value.albumphotoname = data.filedata.albumphotoname;\n\n        console.log('Update database photo - ' + this.displayImg);\n        this.albumService.updateAlbumphoto(this.albumid, this.albumForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n          }\n        });\n\n      }\n    });    \n  }\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/editalbumphoto/editalbumphoto.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/listalbum/listalbum.component.css\n// module id = ./src/app/components/album/listalbum/listalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>List Album</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                      <label for=\\\"albumname\\\">Album Name</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-12 col-md-2\\\">\\n                      <label for=\\\"albumyear\\\">Album Year</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-12 col-md-3\\\">\\n                      <label for=\\\"albumgenre\\\">Genre</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                            <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                         </select>\\n                      </div>\\n                  </div>\\n              </div><br>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                      <label for=\\\"artistid\\\">Artist</label>\\n                      <div class=\\\"input-group col-sm-5\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n                              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n                              <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                          </select>\\n                        </div>\\n                  </div>                \\n                  <div class=\\\"col-sm-12 col-md-3\\\">\\n                      <label for=\\\"status\\\">Status</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                          </select>\\n                      </div>\\n                  </div><br>\\n                  <div class=\\\"col-sm-12 col-md-2\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                  </div>                \\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"albums && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No album found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems like you havn't entered any albums for the selected criteria. Please add the album <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddAlbums()\\\">here</a>.\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"albums && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                          <th width=\\\"20%\\\">Artist</th>\\n                          <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th>\\n                          <th width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                          <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th width=\\\"20%\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let albm of albums; let albIndex = index'>\\n                          <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showAlbum(albm._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ albm.albumname}}</a></td>\\n                          <td>{{ albm.artist }}</td>\\n                          <td>{{ albm.albumyear}}</td>\\n                          <td>{{ albm.genrevalue}}</td>\\n                          <td class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':true }}</td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editAlbumPhoto(albm._id)\\\">\\n                                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Album Photo\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editAlbum(albm._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Album Data\\\">\\n                                  <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(albIndex, albm._id, albm.albumname, albm.albumphotoname )\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Album\\\">\\n                                  <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      \\n                  </tbody>\\n              </table>\\n          </div>\\n\\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div>\\n\\n      </div>\\n  </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/listalbum/listalbum.component.html\n// module id = ./src/app/components/album/listalbum/listalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAggAlbum } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-listalbum',\n  templateUrl: './listalbum.component.html',\n  styleUrls: ['./listalbum.component.css']\n})\nexport class ListalbumComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artistlist: IArtistList[];\n  albums: IAggAlbum[];\n  song: ISong;\n  totalrows: number;\n  pgCounter: number;\n  qalbumname: String;\n  qartistid: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  //artistname: String;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistid = new FormControl('',[Validators.nullValidator]);\n  albumname = new FormControl('',[Validators.nullValidator]);\n  albumyear = new FormControl('',[Validators.nullValidator]);\n  albumgenre = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getArtistList(this.userObj.userid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistid = params['artistid'] || '';\n      this.qalbumname = params['albumname'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qalbumgenre = params['albumgenre'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n       let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistid = this.qartistid;\n      payload.albumname = this.qalbumyear;\n      payload.albumyear = this.qalbumyear;\n      payload.albumgenre = this.qalbumgenre;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload); \n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['listalbum'],\n        {\n          queryParams: { artistid: this.reportForm.value.artistid,\n            albumname: this.reportForm.value.albumname,\n            albumyear: this.reportForm.value.albumyear,\n            albumgenre: this.reportForm.value.albumgenre, \n            status: this.reportForm.value.status, \n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.albumService.getAggAlbums(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        //this.albums = data.data.docs;\n        this.albums = data.data;\n        //console.log(this.albums);\n        //this.totalrows = +data.data.totalcount;\n        this.totalrows = +data.totalcount;\n        //console.log(this.totalrows);\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistid = formval.artistid;\n        this.qalbumname = formval.albumname;\n        this.qalbumyear = formval.albumyear;\n        this.qalbumgenre = formval.albumgenre;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Albums Result';\n        \n        this.reportForm.patchValue({\n          artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre,\n          status: this.qstatus\n        });\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listalbum'],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listalbum'],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n/*   getArtistName(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          return data.data[0].artistname;\n        } else {\n          return 'Artist id is incorrect in the URL';\n        }\n      }\n    });\n  } */\n  showAlbum(albumid): void {\n    this.router.navigate([`viewalbum/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, albumid: string, albumname:string, albumphotoname:string) {\n    var totalsong: number;\n\n    let payload: any = {};\n    payload.albumid = albumid;\n    this.loading = true;\n    this.songService.getSongs(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        totalsong = +data.data.total;\n        if (totalsong > 0) {\n          this.toastr.warning('Can not delete album. It already has songs.');\n        } else {\n          if(confirm('Do you really want to delete this album: ' + albumname + ' record?')){\n            let payloadData: any = {};\n            payloadData.albumphotoname = albumphotoname;\n            this.loading = true;\n            this.albumService.deleteAlbumPhoto(payloadData)\n            .subscribe(data => {\n               if (data.success === false) {\n                this.loading = false;\n                  if (data.errcode){\n                    this.authService.logout();\n                    this.router.navigate(['login']);\n                  }\n                  this.toastr.error(data.message);\n                } else {\n                  this.albumService.deleteAlbum(albumid)\n                  .subscribe(data => {\n                    if (data.success === false) {\n                      this.loading = false;\n                      if (data.errcode){\n                        this.authService.logout();\n                        this.router.navigate(['login']);\n                      }\n                      this.toastr.error(data.message);\n                    } else {\n                      this.loading = false;\n                      this.albums.splice(idx, 1);\n                      this.totalrows = this.totalrows - 1;\n                      this.toastr.success(data.message);  \n                    }\n                  });\n                }\n              });\n          }\n        }\n      }\n    });\n  }\n  \n  editAlbum(albumid): void {\n    this.router.navigate([`editalbum/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  editAlbumPhoto(albumid): void {\n    this.router.navigate([`editalbumphoto/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  toaddAlbums(): void {\n    this.router.navigate(['/addalbum']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/listalbum/listalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/viewalbum/viewalbum.component.css\n// module id = ./src/app/components/album/viewalbum/viewalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Album Details</h3>\\n    </div>\\n    <form [formGroup]=\\\"albumForm\\\" class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ album?.albumname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ album?.albumyear }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Album Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\" disabled>\\n                <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ album?.albumgenre }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Album Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <div class=\\\"form-ele\\\">{{ album?.albumprice | currency: 'IDR':true }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\" disabled>\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n                <!-- <div class=\\\"form-ele\\\">{{ album?.status }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumphoto\\\" class=\\\"col-sm-2 control-label\\\">Photo</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <img src=\\\"{{ album?.albumphotopath }}\\\" class=\\\"rounded float-right\\\" width=\\\"340\\\" height=\\\"340\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"listsong\\\" class=\\\"col-sm-2 control-label\\\">Song</label>\\n            <div class=\\\"input-group col-sm-10\\\" *ngIf=\\\"songs && totalrows > 0\\\">\\n                <div class=\\\"col-sm-12 col-md-10\\\">\\n                    <i>({{ totalrows }} songs found) </i> \\n                </div><br>\\n                <div class=\\\"col-sm-12 col-md-10\\\">\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table table-striped\\\" width=\\\"50%\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Name</a></th>\\n                                    <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songpublish')\\\">Published?</a></th>\\n                                    <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songbuy')\\\">Total Purchase</a></th>\\n                                    <th width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                                    <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor='let song of songs; let songIndex = index'>\\n                                    <td>{{ song.songname}}</td>\\n                                    <td>{{ song.songpublish}}</td>\\n                                    <td>{{ song.songbuy}}</td>\\n                                    <td class=\\\"text-right\\\">{{ song.songprice | currency: 'IDR':true }}</td>\\n                                    <td>{{ song.stsvalue}}</td>\\n                                </tr>\\n                                \\n                            </tbody>\\n                        </table>\\n                    </div>\\n            \\n                    <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n                        <nav aria-label=\\\"Page navigation\\\">\\n                            <ul class=\\\"pagination\\\">\\n                                <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                    <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                                </li>\\n                            </ul>\\n                        </nav>\\n                    </div>\\n            \\n                </div>\\n            </div>      \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  \\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/album/viewalbum/viewalbum.component.html\n// module id = ./src/app/components/album/viewalbum/viewalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewalbum',\n  templateUrl: './viewalbum.component.html',\n  styleUrls: ['./viewalbum.component.css']\n})\nexport class ViewalbumComponent implements OnInit {\n  artist: IArtist;\n  album: IAlbum;\n  artistid: String;\n  albumid: String;\n  userObj: any;\n  songs: ISong[];\n  totalrows: number;\n  pgCounter: number;\n  qsongname: String;\n  qalbumid: String;\n\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n  genre: IMsconfigGroupList[];\n  sts: IMsconfigGroupList[];\n  albumForm: FormGroup;\n  \n  private sub: Subscription;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,    \n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  albumgenre = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let albumid = params['id'];\n        this.albumid = albumid;\n      });\n    console.log(this.albumid);  \n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getAlbum(this.albumid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qalbumid = params['albumid'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      this.qalbumid = this.albumid;\n      payload.albumid = this.qalbumid;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n    });\n    this.albumForm = this.fb.group({\n      albumgenre: this.albumgenre,\n      status: this.status\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.album = data.data[0];\n          this.getArtistName(this.album.artistid);\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n        }\n        \n      }\n    });\n  }\n  \n  populateForm(data): void {\n    this.albumForm.patchValue({\n      albumgenre: data.albumgenre,\n      status: data.status\n    });\n  }\n\n  getArtistName(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n      }\n    });\n  }\n\n  fetchReport(userid, formval) {\n    this.songService.getSongList(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qalbumid = formval.albumid;\n        this.reportTitle = 'Songs Result';\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate([`viewalbum/${this.albumid}`],\n      {\n        queryParams: { albumid: this.qalbumid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewalbum/${this.albumid}`],\n      {\n        queryParams: { albumid: this.qalbumid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/album/viewalbum/viewalbum.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/addartist/addartist.component.css\n// module id = ./src/app/components/artist/addartist/addartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Artist</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form  [formGroup]=\\\"addArtistForm\\\" (ngSubmit)=\\\"addArtist(addArtistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addArtistForm.get('artistname').invalid && addArtistForm.get('artistname').dirty}\\\">\\n        <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Artist Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"artistname\\\" id=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"addArtistForm.get('artistname').dirty && addArtistForm.get('artistname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addArtistForm.get('artistname').errors.required\\\">\\n                Please enter the artist name\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addArtistForm.get('artistimage').invalid && addArtistForm.get('artistimage').dirty}\\\">\\n        <label for=\\\"artistimage\\\" class=\\\"col-sm-2 control-label\\\">Artist Photo</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" #inputimg type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"artistimage\\\" id=\\\"artistimage\\\" placeholder=\\\"Artistimage\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-5\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"addArtistForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n        </div>\\n        <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n            <sup>*</sup> required\\n        </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/addartist/addartist.component.html\n// module id = ./src/app/components/artist/addartist/addartist.component.html\n// module chunks = main","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-addartist',\n  templateUrl: './addartist.component.html',\n  styleUrls: ['./addartist.component.css']\n})\n\n\nexport class AddartistComponent implements OnInit {\n  addArtistForm: FormGroup;\n  userObj: any;\n  //status: any = ['active', 'inactive'];\n  filesToUpload: Array<File> = [];\n  artistid: String;\n  loading = false;\n  @ViewChild('inputimg')artistimageVar: any;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  \n  artistname = new FormControl('', [Validators.required]);\n  artistphotopath: String;\n  artistphotoname: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.artistid = '';\n    this.addArtistForm = this.fb.group({\n      artistname: this.artistname,\n      artistimage: this.filesToUpload,\n      artistphotopath: this.artistphotopath,\n      artistphotoname: this.artistphotoname\n    });\n  }\n\n  addArtist(formdata:any): void {\n    if (this.addArtistForm.dirty && this.addArtistForm.valid) {\n      const files: Array<File> = this.filesToUpload;\n      let theForm = this.addArtistForm.value;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ files[0]['name']);\n      \n      lformData.append('artistimage',files[0],files[0]['name']);\n      //console.log(lformData.getAll('artistimage'));\n      //console.dir(theForm);\n      this.loading = true;\n      this.artistService.uploadArtistphoto(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.toastr.error(data.message);\n          } else {\n              theForm.artistphotopath = data.filedata.artistphotopath;\n              theForm.artistphotoname = data.filedata.artistphotoname;\n              theForm.status = 'STSACT';\n              //console.log('Ini file path: '+ theForm.artistphotopath);\n              if (this.artistid !== '') {\n                theForm.artistid = this.artistid;\n              }\n              this.artistService.saveArtist(this.userObj.userid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.toastr.error(data.message);\n                } else {\n                  this.loading = false;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listartist']);\n                }\n                this.addArtistForm.reset();\n                this.artistimageVar.nativeElement.value = \"\";\n              });\n          }   \n        });\n \n    }\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.filesToUpload);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/addartist/addartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartist/editartist.component.css\n// module id = ./src/app/components/artist/editartist/editartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Artist</h3>\\n    </div>\\n    <form [formGroup]=\\\"artistForm\\\" (ngSubmit)=\\\"saveArtist(artistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': artistForm.get('artistname').invalid && artistForm.get('artistname').dirty}\\\">\\n            <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"artistForm.get('artistname').dirty && artistForm.get('artistname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} artist name</span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': artistForm.get('status').invalid && artistForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"artistForm.get('status').dirty && artistForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"artistForm.get('status').errors.required\\\">\\n                    Please select artist status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"artistForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartist/editartist.component.html\n// module id = ./src/app/components/artist/editartist/editartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editartist',\n  templateUrl: './editartist.component.html',\n  styleUrls: ['./editartist.component.css']\n})\nexport class EditartistComponent implements OnInit {\n  artistForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  //sts: any = ['active', 'inactive'];\n  artistid: String;\n  btnLbl: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistname = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n  \n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.artistid = params['id'];\n      this.getMsconfigGroupList('CSTATUS');\n      this.getArtist(this.artistid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.artistForm = this.fb.group({\n      artistname: this.artistname,\n      status: this.status\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n          this.router.navigate(['listartist']);\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.artistForm.patchValue({\n      artistname: data.artistname,\n      status: data.status\n    });\n  }\n\n  saveArtist(formdata:any): void {\n    if (this.artistForm.valid) {\n      const theForm:any = this.artistForm.value;\n      if (this.artistid !== '') {\n        theForm.artistid = this.artistid;\n      \n      }\n      this.artistService.saveArtist(this.userObj.userid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.artistid) {\n            this.artistForm.reset();\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/editartist/editartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartistphoto/editartistphoto.component.css\n// module id = ./src/app/components/artist/editartistphoto/editartistphoto.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h1>Change Photo</h1>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"artistForm\\\" (ngSubmit)=\\\"updatePhoto(artistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n<!--       <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('imgpath').invalid && profileForm.get('imgpath').dirty}\\\">\\n          <label for=\\\"imgpath\\\" class=\\\"col-sm-2 control-label\\\">Image Path</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imgpath\\\" [formControl]=\\\"imgpath\\\" placeholder=\\\"Img Path\\\">\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('imgoriname').invalid && profileForm.get('imgoriname').dirty}\\\">\\n          <label for=\\\"imgoriname\\\" class=\\\"col-sm-2 control-label\\\">Image Oriname</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imgoriname\\\" [formControl]=\\\"imgoriname\\\" placeholder=\\\"Img Oriname\\\">\\n          </div>\\n      </div> -->\\n      <div class=\\\"col-lg-6 col-sm-6 col-12\\\">\\n          <label for=\\\"artistimage\\\" class=\\\"col-sm-3 control-label\\\"></label>\\n          <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n          <br><br>\\n          <div class=\\\"input-group\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"artistimage\\\" id=\\\"artistimage\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n            </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\">     </label>\\n          <div class=\\\"col-sm-10\\\">\\n              <br>\\n              <button [disabled]=\\\"this.loading == true\\\" type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/editartistphoto/editartistphoto.component.html\n// module id = ./src/app/components/artist/editartistphoto/editartistphoto.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtist } from '../../../interface/artist';\n\n@Component({\n  selector: 'app-editartistphoto',\n  templateUrl: './editartistphoto.component.html',\n  styleUrls: ['./editartistphoto.component.css']\n})\nexport class EditartistphotoComponent implements OnInit {\n  artistForm: FormGroup\n  userObj: any;\n  artist: IArtist;\n  artistid: String;\n  filesToUpload: Array<File> = [];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  artistphotopath = new FormControl('', [Validators.nullValidator]);\n  artistphotoname = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.artistForm = this.fb.group({\n      artistphotopath: this.artistphotopath,\n      artistphotoname: this.artistphotoname\n    });\n    this.route.params.subscribe((params: any) => {\n      this.artistid = params['id'];\n      this.getArtist(this.artistid);\n    });\n  }\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n          this.router.navigate(['listartist']);\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.deletedFilename = this.artist.artistphotoname;\n    this.displayImg = this.artist.artistphotopath;\n    this.artistForm.patchValue({\n      artistphotopath: data.artistphotopath,\n      artistphotoname: data.artistphotoname\n    });\n  }\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    this.newfile = this.filesToUpload[0]['name'];\n    console.log('content file: ' + this.filesToUpload);\n    this.uploadNewPhoto(this.filesToUpload);  \n  }\n\n  uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('artistimage',files[0],files[0]['name']);\n    this.loading = true;\n    this.artistService.uploadArtistphoto(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.displayImg = data.filedata.artistphotopath;\n        let payloadData: any = this.artistForm.value;\n        this.artistService.deleteArtistPhoto(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.artistphotoname);\n            }   \n          });\n           \n        this.artistForm.value.artistphotopath = data.filedata.artistphotopath;\n        this.artistForm.value.artistphotoname = data.filedata.artistphotoname;\n\n        console.log('Update database photo - ' + this.displayImg);\n        this.artistService.updateArtistphoto(this.artistid, this.artistForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n          }\n        });\n\n      }\n    });    \n  }\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/editartistphoto/editartistphoto.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/listartist/listartist.component.css\n// module id = ./src/app/components/artist/listartist/listartist.component.css\n// module chunks = main","module.exports = \"<script>\\n    $(document).ready(function(){\\n        $('[data-toggle=\\\"tooltip\\\"]').tooltip();   \\n    });\\n</script>\\n    \\n<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>List Artist</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12 col-md-7\\\">\\n                        <label for=\\\"artistname\\\">Artist Name</label>\\n                        <div class=\\\"input-group col-sm-10\\\">\\n                            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-12 col-md-3\\\">\\n                        <label for=\\\"status\\\">Status</label>\\n                        <div class=\\\"input-group col-sm-10\\\">\\n                            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                                <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                                <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                            </select>\\n                        </div>\\n                    </div><br>\\n                    <div class=\\\"col-sm-12 col-md-2\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                    </div> \\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"artists && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No artist found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            It seems like you havn't entered any artists for the selected criteria. Please add the artist <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddArtists()\\\">here</a>.\\n        </div>\\n    </div>\\n  \\n  \\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"artists && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"50%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('artistname')\\\">Artist Name</a></th>\\n                            <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('status')\\\">Status</a></th>\\n                            <th width=\\\"20%\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let artst of artists; let artIndex = index'>\\n                            <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showArtist(artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ artst.artistname}}</a></td>\\n                            <td>{{ artst.stsvalue}}</td>\\n                            <td>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editArtistPhoto(artst._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Photo\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editArtist(artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Data\\\">\\n                                    <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(artIndex, artst._id, artst.artistname,artst.artistphotoname)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Artist\\\">\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                        \\n                    </tbody>\\n                </table>\\n            </div>\\n  \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"artists && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\"class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div>\\n  \\n        </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/listartist/listartist.component.html\n// module id = ./src/app/components/artist/listartist/listartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtist } from '../../../interface/artist';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-listartist',\n  templateUrl: './listartist.component.html',\n  styleUrls: ['./listartist.component.css']\n})\nexport class ListartistComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artists: IArtist[];\n  totalrows: number;\n  pgCounter: number;\n  qartistname: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n/*   sts: any = [  {id: '',desc: 'Select option'},\n                {id: 'active', desc: 'active'}, \n                {id: 'inactive', desc: 'inactive'} \n              ]; */\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistname = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n  //startdt = new FormControl({value: '', disabled: true});\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      artistname: this.artistname,\n      status: this.status\n    });\n\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistname = params['artistname'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      this.getMsconfigGroupList('CSTATUS');\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistname = this.qartistname;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['listartist'],\n        {\n          queryParams: { artistname: this.reportForm.value.artistname, status: this.reportForm.value.status, page: 1, sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.artistService.getAggArtists(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        //this.artists = data.data.docs;\n        this.artists = data.data;\n        //this.totalrows = +data.data.total;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistname = formval.artistname;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Artists Result';\n        this.reportForm.patchValue({\n          artistname: this.qartistname,\n          status: this.qstatus\n        });\n        /* if (formval.status === 'active') {\n          this.reportTitle = 'Selected active Artists'\n        } else {\n          this.reportTitle = 'Selected inactive Artists'\n        } */\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listartist'],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: page, sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  showArtist(artistid): void {\n    this.router.navigate([`viewartist/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, artistid: string, artistname:string, artistphotoname:string) {\n    var totalalbum: number;\n    \n    let payload: any = {};\n    payload.artistid = artistid;\n    this.loading = true;\n    this.albumService.getAlbums(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        totalalbum = +data.data.total;\n        if (totalalbum > 0) {\n          this.toastr.warning('Can not delete artist. It already has albums.');\n        } else {\n          if(confirm('Do you really want to delete this artist: ' + artistname + ' record?')){\n            let payloadData: any = {};\n            payloadData.artistphotoname = artistphotoname;\n            this.loading = true;\n            this.artistService.deleteArtistPhoto(payloadData)\n            .subscribe(data => {\n               if (data.success === false) {\n                this.loading = false;\n                  if (data.errcode){\n                    this.authService.logout();\n                    this.router.navigate(['login']);\n                  }\n                  this.toastr.error(data.message);\n                } else {\n                  this.artistService.deleteArtist(artistid)\n                  .subscribe(data => {\n                    if (data.success === false) {\n                      this.loading = false;\n                      if (data.errcode){\n                        this.authService.logout();\n                        this.router.navigate(['login']);\n                      }\n                      this.toastr.error(data.message);\n                    } else {\n                      this.loading = false;\n                      this.artists.splice(idx, 1);\n                      this.totalrows = this.totalrows - 1;\n                      this.toastr.success(data.message);\n                    }\n                  });\n                }   \n              });\n          }\n        }\n      }\n    });    \n  }\n\n  editArtist(artistid): void {\n    this.router.navigate([`editartist/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n  editArtistPhoto(artistid): void {\n    this.router.navigate([`editartistphoto/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  sortArtist(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listartist'],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  toaddArtists(): void {\n    this.router.navigate(['/addartist']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/listartist/listartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/viewartist/viewartist.component.css\n// module id = ./src/app/components/artist/viewartist/viewartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h1>Artist Details</h1>\\n  </div>\\n  <form [formGroup]=\\\"artistForm\\\" class=\\\"form-horizontal\\\">\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n              <select class=\\\"form-control\\\" [formControl]=\\\"status\\\" disabled>\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ artist?.status }}</div> -->\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"artistphoto\\\" class=\\\"col-sm-2 control-label\\\">Photo</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <img src=\\\"{{ artist?.artistphotopath }}\\\" class=\\\"rounded float-right\\\" width=\\\"340\\\" height=\\\"340\\\">\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"listalbum\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n          <div class=\\\"input-group col-sm-10\\\" *ngIf=\\\"albums && totalrows > 0\\\">\\n              <div class=\\\"col-sm-12 col-md-10\\\">\\n                  <i>({{ totalrows }} albums found) </i> \\n              </div><br>\\n              <div class=\\\"col-sm-12 col-md-10\\\">\\n                  <div class=\\\"table-responsive\\\">\\n                      <table class=\\\"table table-striped\\\" width=\\\"50%\\\">\\n                          <thead>\\n                              <tr>\\n                                  <th width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                                  <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th>\\n                                  <th width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                                  <th width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                                  <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                              </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor='let albm of albums; let albIndex = index'>\\n                                  <td>{{ albm.albumname}}</td>\\n                                  <td>{{ albm.albumyear}}</td>\\n                                  <td>{{ albm.genrevalue}}</td>\\n                                  <td class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':true }}</td>\\n                                  <td>{{ albm.stsvalue}}</td>\\n                              </tr>\\n                              \\n                          </tbody>\\n                      </table>\\n                  </div>\\n        \\n                  <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n                      <nav aria-label=\\\"Page navigation\\\">\\n                          <ul class=\\\"pagination\\\">\\n                              <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                  <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                              </li>\\n                          </ul>\\n                      </nav>\\n                  </div>\\n        \\n              </div>\\n          </div>      \\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/artist/viewartist/viewartist.component.html\n// module id = ./src/app/components/artist/viewartist/viewartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewartist',\n  templateUrl: './viewartist.component.html',\n  styleUrls: ['./viewartist.component.css']\n})\nexport class ViewartistComponent implements OnInit {\n  artist: IArtist;\n  artistid: String;\n  userObj: any;\n  albums: IAlbum[];\n  private sub: Subscription;\n  totalrows: number;\n  pgCounter: number;\n  qalbumname: String;\n  qartistid: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n  sts: IMsconfigGroupList[];\n  artistForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  status = new FormControl('', [Validators.required]);\n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let artistid = params['id'];\n        this.artistid = artistid;\n        this.getMsconfigGroupList('CSTATUS');\n        this.getArtist(artistid);\n      });\n      this.route.queryParams.forEach((params: Params) => {\n        this.qartistid = params['artistid'] || '';\n        this.qpage = params['page'] || '';\n        this.qsort = params['sortby'] || '';\n\n        let payload: any = {};\n        this.qartistid = this.artistid;\n        payload.artistid = this.qartistid;\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n      })\n      this.artistForm = this.fb.group({\n        status: this.status\n      });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n        \n      }\n    });\n  }\n  populateForm(data): void {\n    this.artistForm.patchValue({\n      status: data.status\n    });\n  }\n\n  fetchReport(userid, formval) {\n    this.albumService.getArtistAlbums(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.albums = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistid = formval.artistid;\n        this.reportTitle = 'Albums Result';\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate([`viewartist/${this.artistid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewartist/${this.artistid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/artist/viewartist/viewartist.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.css\n// module id = ./src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Dashboard</h3>\\n  </div>\\n\\n  <form class=\\\"form-horizontal\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"labelname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n        <div class=\\\"input-group col-sm-6\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <div class=\\\"form-ele\\\">{{ this.name }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n        <div class=\\\"input-group col-sm-6\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n            <div class=\\\"form-ele\\\">{{ this.email }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n      <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n      <div class=\\\"input-group col-sm-6\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-earphone\\\"></i></div>\\n          <div class=\\\"form-ele\\\">{{ this.contactno }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n        <label for=\\\"balance\\\" class=\\\"col-sm-2 control-label\\\">Balance</label>\\n        <div class=\\\"input-group col-sm-6\\\">\\n            <div class=\\\"input-group-addon\\\">Rp</div>\\n            <div class=\\\"form-ele\\\">{{ this.balance }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-7\\\">\\n          <!-- You have {{ this.totalrows }} active artists. To see the details, click <a style=\\\"cursor:pointer\\\" (click)=\\\"toArtists()\\\">here</a>. -->\\n            You have <b><i><a style=\\\"cursor:pointer\\\" (click)=\\\"toArtists()\\\">({{ this.totalrows }})</a></i></b> active artists, <b><i><a style=\\\"cursor:pointer\\\" (click)=\\\"toAlbums()\\\">({{ this.totalalbums }})</a></i></b> active albums, \\n            and <b><i><a style=\\\"cursor:pointer\\\" (click)=\\\"toSongs()\\\">({{ this.totalsongs }})</a></i></b> active songs.\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LIS'\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-7\\\">\\n            You have logged in as Listener. <br>\\n            Please use the kaXet mobile apps to buy songs.\\n        </div>\\n    </div>\\n  </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/dashboard/dashboard.component.html\n// module id = ./src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { ArtistService } from '../../services/artist.service';\nimport { AlbumService } from '../../services/album.service';\nimport { SongService } from '../../services/song.service';\nimport { AuthService } from '../../services/auth.service';\nimport { IArtist } from '../../interface/artist';\nimport { IAlbum } from '../../interface/album';\nimport { IUser } from '../../interface/user';\nimport { UserService } from '../../services/user.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  artists: IArtist[];\n  albums: IAlbum[];  \n  user: IUser;\n  private sub: Subscription;\n  userObj: any;\n  totalrows: number;\n  totalalbums: number;\n  totalsongs: number;\n\n  constructor(\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private userService: UserService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  name: String;\n  email: String;\n  contactno: String;\n  balance: Number;\n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.name = this.userObj.name;\n\n    this.userService.getUser(this.userObj.userid).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.email = this.user.email;\n        this.contactno = this.user.contactno;\n        this.balance = this.user.balance;\n      }\n    });\n\n    let payload: any = {};\n    payload.status = 'STSACT';\n    this.fetchReport(this.userObj.userid, payload);\n  }\n\n  fetchReport(userid, formval) {\n    this.artistService.getArtists(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.artists = data.data.docs;\n        this.totalrows = +data.data.total;\n        this.albumService.getAlbums(userid, formval)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.albums = data.data.docs;\n            this.totalalbums = +data.data.total;\n            this.songService.getSongs(userid, formval)\n            .subscribe(data => {\n              if (data.success === false) {\n                if (data.errcode){\n                  this.authService.logout();\n                  this.router.navigate(['login']);\n                }\n                this.toastr.error(data.message);\n              } else {\n                this.totalsongs = +data.data.total;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  toArtists(): void {\n    this.router.navigate(['/listartist']);\n  }\n  toAlbums(): void {\n    this.router.navigate(['/listalbum']);\n  }\n  toSongs(): void {\n    this.router.navigate(['/listsong']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/dashboard/dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/kx-info-dialog/kx-info-dialog.component.css\n// module id = ./src/app/components/kx-info-dialog/kx-info-dialog.component.css\n// module chunks = main","module.exports = \"<div class=\\\"md-dialog-container\\\">\\n  <h3 mat-dialog-title>INFO</h3>\\n  <hr>\\n  <mat-dialog-content>\\n    <strong>{{data}}</strong>\\n  </mat-dialog-content>\\n  <hr>\\n  <mat-dialog-actions>\\n      <!-- <button mat-raised-button (click)=\\\"onCloseConfirm()\\\">Confirm</button> -->\\n      <button class=\\\"btn btn-info\\\" mat-raised-button (click)=\\\"onCloseCancel()\\\">Close</button>\\n  </mat-dialog-actions>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/kx-info-dialog/kx-info-dialog.component.html\n// module id = ./src/app/components/kx-info-dialog/kx-info-dialog.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-kx-info-dialog',\n  templateUrl: './kx-info-dialog.component.html',\n  styleUrls: ['./kx-info-dialog.component.css']\n})\nexport class KxInfoDialogComponent implements OnInit {\n\n  constructor( private dialogRef: MatDialogRef<KxInfoDialogComponent>,\n               @Inject(MAT_DIALOG_DATA) private data: string \n             ) \n  { }\n\n  ngOnInit() {\n    //this.changePosition();\n  }\n\n  onCloseConfirm() {\n    this.dialogRef.close('Confirm');\n  }\n\n  onCloseCancel() {\n    this.dialogRef.close('Cancel');\n  }\n\n  changePosition() {\n    this.dialogRef.updatePosition({ top: '50px', left: '50px' });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/kx-info-dialog/kx-info-dialog.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addconfig/addconfig.component.css\n// module id = ./src/app/components/msconfig/addconfig/addconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Add Config</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form  [formGroup]=\\\"addConfigForm\\\" (ngSubmit)=\\\"addMsconfig(addConfigForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addConfigForm.get('code').invalid && addConfigForm.get('code').dirty}\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"code\\\" id=\\\"code\\\" placeholder=\\\"Ms Code\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addConfigForm.get('code').dirty && addConfigForm.get('code').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addConfigForm.get('code').errors.required\\\">\\n                    Please enter the code\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addConfigForm.get('value').invalid && addConfigForm.get('value').dirty}\\\">\\n            <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"value\\\" id=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addConfigForm.get('value').dirty && addConfigForm.get('value').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addConfigForm.get('value').errors.required\\\">\\n                    Please enter the value\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addConfigForm.get('group').invalid && addConfigForm.get('group').dirty}\\\">\\n            <label for=\\\"group\\\" class=\\\"col-sm-2 control-label\\\">Group <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"group\\\">\\n                    <option *ngFor=\\\"let g of grouplist\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addConfigForm.get('group').dirty && addConfigForm.get('group').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addConfigForm.get('group').errors.required\\\">\\n                    Please select config group\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Description</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <textarea [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" id=\\\"desc\\\" rows=\\\"10\\\" [formControl]=\\\"desc\\\" placeholder=\\\"Description\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" >\\n            <label for=\\\"genreimage\\\" class=\\\"col-sm-2 control-label\\\">Config Photo</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" #inputimg type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"genreimage\\\" id=\\\"genreimage\\\" placeholder=\\\"Genreimage\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-5\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"addConfigForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n            </div>\\n            <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n                <sup>*</sup> required\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addconfig/addconfig.component.html\n// module id = ./src/app/components/msconfig/addconfig/addconfig.component.html\n// module chunks = main","import { Component, OnInit,ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-addconfig',\n  templateUrl: './addconfig.component.html',\n  styleUrls: ['./addconfig.component.css']\n})\nexport class AddconfigComponent implements OnInit {\n  addConfigForm: FormGroup;\n  userObj: any;\n  //status: any = ['active', 'inactive'];\n  filesToUpload: Array<File> = [];\n  msconfigid: String;\n  grouplist: IMsconfigGroupList[];\n  loading = false;\n  @ViewChild('inputimg')genreimageVar: any;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  code = new FormControl('', [Validators.required]);\n  value = new FormControl('', [Validators.required]);\n  group = new FormControl('', [Validators.required]);\n  desc = new FormControl('', [Validators.nullValidator]);\n  filepath: String;\n  filename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.msconfigid = '';\n    this.addConfigForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      group: this.group,\n      desc: this.desc,\n      genreimage: this.filesToUpload,\n      filepath: this.filepath,\n      filename: this.filename\n    });\n    this.getMsconfiggroup();\n  }\n  getMsconfiggroup(){\n    this.msconfigService.getMsconfiggroup().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.grouplist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.grouplist = [{code:'', value:'Error group list'}];\n        }\n      }\n    });\n  }\n  addMsconfig(formdata:any): void {\n    if (this.addConfigForm.dirty && this.addConfigForm.valid) {\n      const files: Array<File> = this.filesToUpload;\n      let theForm = this.addConfigForm.value;\n      this.loading = true;\n      if (this.genreimageVar.nativeElement.value) {\n        let lformData: FormData = new FormData();\n        //console.log('Ini file: '+ files[0]['name']); \n        lformData.append('genreimage',files[0],files[0]['name']);\n        //console.log(lformData.getAll('artistimage'));\n        //console.dir(theForm);\n        this.msconfigService.uploadGenrephoto(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.toastr.error(data.message);\n          } else {\n              theForm.filepath = data.filedata.filepath;\n              theForm.filename = data.filedata.filename;\n              theForm.status = 'STSACT';\n              //console.log('Ini file path: '+ theForm.artistphotopath);\n              if (this.msconfigid !== '') {\n                theForm.msconfigid = this.msconfigid;\n              }\n              this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.loading = false;\n                  this.toastr.error(data.message);\n                } else {\n                  this.loading = false;\n                  this.toastr.success(data.message);\n                  //this.router.navigate(['listartist']);\n                }\n                this.addConfigForm.reset();\n                this.genreimageVar.nativeElement.value = \"\";\n              });\n          }   \n        });\n      }else {\n        theForm.status = 'STSACT';\n        //console.log('Ini file path: '+ theForm.artistphotopath);\n        if (this.msconfigid !== '') {\n          theForm.msconfigid = this.msconfigid;\n        }\n        this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n            //this.router.navigate(['listartist']);\n          }\n          this.addConfigForm.reset();\n          this.genreimageVar.nativeElement.value = \"\";\n        });\n      }\n    }\n  }\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.filesToUpload);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/addconfig/addconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addgroup/addgroup.component.css\n// module id = ./src/app/components/msconfig/addgroup/addgroup.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Add Group</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form  [formGroup]=\\\"addGroupForm\\\" (ngSubmit)=\\\"addMsgroup(addGroupForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addGroupForm.get('code').invalid && addGroupForm.get('code').dirty}\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"code\\\" id=\\\"code\\\" placeholder=\\\"Ms Code\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addGroupForm.get('code').dirty && addGroupForm.get('code').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addGroupForm.get('code').errors.required\\\">\\n                    Please enter the code\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addGroupForm.get('value').invalid && addGroupForm.get('value').dirty}\\\">\\n            <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value <sup>*</sup></label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"value\\\" id=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"addGroupForm.get('value').dirty && addGroupForm.get('value').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addGroupForm.get('value').errors.required\\\">\\n                    Please enter the value\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Description</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <textarea [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" id=\\\"desc\\\" rows=\\\"10\\\" [formControl]=\\\"desc\\\" placeholder=\\\"Description\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-5\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"addGroupForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n            </div>\\n            <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n                <sup>*</sup> required\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/addgroup/addgroup.component.html\n// module id = ./src/app/components/msconfig/addgroup/addgroup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-addgroup',\n  templateUrl: './addgroup.component.html',\n  styleUrls: ['./addgroup.component.css']\n})\nexport class AddgroupComponent implements OnInit {\n  addGroupForm: FormGroup;\n  userObj: any;\n  //status: any = ['active', 'inactive'];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  code = new FormControl('', [Validators.required]);\n  value = new FormControl('', [Validators.required]);\n  desc = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.addGroupForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      desc: this.desc\n    });\n  }\n  addMsgroup(formdata:any): void {\n    if (this.addGroupForm.dirty && this.addGroupForm.valid) {\n      let theForm = this.addGroupForm.value;\n      this.loading = true;\n      theForm.group = 'GROUP';      \n      theForm.status = 'STSACT';\n      //console.log('Ini file path: '+ theForm.artistphotopath);\n      this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          this.toastr.error(data.message);\n        } else {\n          this.loading = false;\n          this.toastr.success(data.message);\n          //this.router.navigate(['listartist']);\n        }\n        this.addGroupForm.reset();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/addgroup/addgroup.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfig/editconfig.component.css\n// module id = ./src/app/components/msconfig/editconfig/editconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Config</h3>\\n    </div>\\n    <form [formGroup]=\\\"msconfigForm\\\" (ngSubmit)=\\\"saveMsconfig(msconfigForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ this.mscode }}</div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': msconfigForm.get('value').invalid && msconfigForm.get('value').dirty}\\\">\\n            <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"value\\\" [formControl]=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"msconfigForm.get('value').dirty && msconfigForm.get('value').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter the Ms config value</span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': msconfigForm.get('group').invalid && msconfigForm.get('group').dirty}\\\">\\n            <label for=\\\"group\\\" class=\\\"col-sm-2 control-label\\\">Group</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"group\\\">\\n                    <option *ngFor=\\\"let g of grouplist\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"msconfigForm.get('group').dirty && msconfigForm.get('group').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"msconfigForm.get('group').errors.required\\\">\\n                    Please select Ms Config Group\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Description</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <textarea class=\\\"form-control\\\" id=\\\"desc\\\" rows=\\\"10\\\" [formControl]=\\\"desc\\\" placeholder=\\\"Desc\\\"></textarea>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': msconfigForm.get('status').invalid && msconfigForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"msconfigForm.get('status').dirty && msconfigForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"msconfigForm.get('status').errors.required\\\">\\n                    Please select config status\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"msconfigForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfig/editconfig.component.html\n// module id = ./src/app/components/msconfig/editconfig/editconfig.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editconfig',\n  templateUrl: './editconfig.component.html',\n  styleUrls: ['./editconfig.component.css']\n})\nexport class EditconfigComponent implements OnInit {\n  msconfigForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  //sts: any = ['active', 'inactive'];\n  grouplist: IMsconfigGroupList[];\n  msconfigid: String;\n  btnLbl: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  mscode: String;\n  code = new FormControl('', [Validators.required]);\n  value = new FormControl('', [Validators.required]);\n  group = new FormControl('', [Validators.required]);\n  desc = new FormControl('', [Validators.nullValidator]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.msconfigid = params['id'];\n      this.getMsconfig(this.msconfigid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfiggroup();\n    this.msconfigForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      group: this.group,\n      desc: this.desc,\n      status: this.status\n    });\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n  getMsconfiggroup(){\n    this.msconfigService.getMsconfiggroup().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.grouplist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.grouplist = [{code:'', value:'Error group list'}];\n        }\n      }\n    });\n  }\n\n  getMsconfig(id){\n    this.msconfigService.getMsconfigAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('MsConfig id is incorrect in the URL');\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.mscode = data.code;\n    this.msconfigForm.patchValue({\n      code: data.code,\n      value: data.value,\n      group: data.group,\n      desc: data.desc,\n      status: data.status\n    });\n  }\n\n  saveMsconfig(formdata:any): void {\n    if (this.msconfigForm.valid) {\n      const theForm:any = this.msconfigForm.value;\n      if (this.msconfigid !== '') {\n        theForm.msconfigid = this.msconfigid;\n      \n      }\n      this.msconfigService.saveMsconfig(this.userObj.userid, theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.msconfigid) {\n            this.msconfigForm.reset();\n          }\n      });\n    }\n  }\n  onBack(): void {\n    this.router.navigate(['/listconfig'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/editconfig/editconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfigfile/editconfigfile.component.css\n// module id = ./src/app/components/msconfig/editconfigfile/editconfigfile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Change File</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"msconfigForm\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"col-lg-6 col-sm-6 col-12\\\">\\n            <label for=\\\"genreimage\\\" class=\\\"col-sm-3 control-label\\\"></label>\\n            <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n            <br><br>\\n            <div class=\\\"input-group\\\">\\n                <label class=\\\"input-group-btn\\\">\\n                    <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                        Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"genreimage\\\" id=\\\"genreimage\\\" style=\\\"display:none\\\">\\n                    </span>\\n                </label>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n              </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">     </label>\\n            <div class=\\\"col-sm-10\\\">\\n                <br>\\n                <button [disabled]=\\\"this.loading == true\\\" type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/editconfigfile/editconfigfile.component.html\n// module id = ./src/app/components/msconfig/editconfigfile/editconfigfile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IAggMsconfig } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editconfigfile',\n  templateUrl: './editconfigfile.component.html',\n  styleUrls: ['./editconfigfile.component.css']\n})\nexport class EditconfigfileComponent implements OnInit {\n  msconfigForm: FormGroup\n  userObj: any;\n  msconfig: IAggMsconfig;\n  msconfigid: String;\n  filesToUpload: Array<File> = [];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  filepath = new FormControl('', [Validators.nullValidator]);\n  filename = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.msconfigForm = this.fb.group({\n      filepath: this.filepath,\n      filename: this.filename\n    });\n    this.route.params.subscribe((params: any) => {\n      let msconfigid = params['id'];\n      this.msconfigid = msconfigid;\n      this.getMsconfig(msconfigid);\n    });\n  }\n  getMsconfig(id){\n    this.msconfigService.getMsconfigAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.msconfig = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('MsConfig id is incorrect in the URL');\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.deletedFilename = this.msconfig.filename;\n    this.displayImg = this.msconfig.filepath;\n    this.msconfigForm.patchValue({\n      filepath: data.filepath,\n      filename: data.filename\n    });\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    this.newfile = this.filesToUpload[0]['name'];\n    console.log('content file: ' + this.filesToUpload);\n    this.uploadNewPhoto(this.filesToUpload);  \n  }\n\n  uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('genreimage',files[0],files[0]['name']);\n    this.loading = true;\n    this.msconfigService.uploadGenrephoto(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        this.displayImg = data.filedata.filepath;\n        let payloadData: any = this.msconfigForm.value;\n        this.msconfigService.deleteGenrephoto(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.filename);\n            }   \n          });\n        this.msconfigForm.value.msconfigid = this.msconfigid;   \n        this.msconfigForm.value.filepath = data.filedata.filepath;\n        this.msconfigForm.value.filename = data.filedata.filename;\n\n        console.log('Update database photo - ' + this.displayImg);\n        this.msconfigService.updateMsconfigfile(this.userObj.userid, this.msconfigForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n          }\n        });\n\n      }\n    });    \n  }\n  onBack(): void {\n    this.router.navigate(['/listconfig'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/editconfigfile/editconfigfile.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/listconfig/listconfig.component.css\n// module id = ./src/app/components/msconfig/listconfig/listconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>List Config</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                      <label for=\\\"code\\\">Ms Code</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"code\\\" [formControl]=\\\"code\\\" placeholder=\\\"Ms Code\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                      <label for=\\\"code\\\">Ms Value</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"value\\\" [formControl]=\\\"value\\\" placeholder=\\\"Ms Value\\\">\\n                      </div>\\n                  </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12 col-md-3\\\">\\n                        <label for=\\\"labelid\\\">Group</label>\\n                        <div class=\\\"input-group col-sm-10\\\">\\n                            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"group\\\">\\n                                <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                                <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the group</option>\\n                                <option value=\\\"GROUP\\\">Group Config</option>\\n                                <option *ngFor=\\\"let g of grouplist\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                            </select>\\n                          </div>\\n                    </div>\\n                    <div class=\\\"col-sm-12 col-md-3\\\">\\n                        <label for=\\\"status\\\">Status</label>\\n                        <div class=\\\"input-group col-sm-10\\\">\\n                            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                              <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-12 col-md-3\\\">\\n                        <label for=\\\"submit\\\"> </label>\\n                        <div class=\\\"input-group col-sm-10\\\">\\n                          <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                        </div>\\n                    </div>                  \\n                </div>\\n\\n            </form>\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"msconfigs && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No config found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            There is NO any configs found for the selected criteria.\\n        </div>\\n    </div>\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"msconfigs && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('code')\\\">Code</a></th>\\n                            <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('value')\\\">Value</a></th>\\n                            <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('group')\\\">Group</a></th>\\n                            <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortConfig('status')\\\">Status</a></th>\\n                            <th width=\\\"20%\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let config of msconfigs; let cfgIndex = index'>\\n                            <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showConfig(config._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ config.code}}</a></td>\\n                            <td>{{ config.value }}</td>\\n                            <td>{{ config.groupname }}</td>\\n                            <td>{{ config.stsvalue}}</td>\\n                            <td>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editConfigFiles(config._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Config File\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editConfig(config._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Config Data\\\">\\n                                    <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(cfgIndex, config._id, config.code, config.filename)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Config\\\">\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div> \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"msconfigs && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div> \\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/listconfig/listconfig.component.html\n// module id = ./src/app/components/msconfig/listconfig/listconfig.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { IAggMsconfig } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-listconfig',\n  templateUrl: './listconfig.component.html',\n  styleUrls: ['./listconfig.component.css']\n})\nexport class ListconfigComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  totalrows: number;\n  pgCounter: number;\n  qcode: String;\n  qvalue: String;\n  qgroup: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  msconfigs: IAggMsconfig[];\n  sts: IMsconfigGroupList[] = [{code:'', value:'Error ms config list'}];\n  grouplist: IMsconfigGroupList[] = [{code:'', value:'Error ms config list'}];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  code = new FormControl('',[Validators.nullValidator]);\n  value = new FormControl('',[Validators.nullValidator]);\n  group = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('',[Validators.nullValidator]);  \n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      code: this.code,\n      value: this.value,\n      group: this.group,\n      status: this.status\n    });\n\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GROUP');\n\n    this.route.queryParams.forEach((params: Params) => {\n      this.qcode = params['code'] || '';\n      this.qvalue = params['value'] || '';\n      this.qgroup = params['group'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.code = this.qcode;\n      payload.value = this.qvalue;\n      payload.group = this.qgroup;\n      payload.status = this.qstatus;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(payload);\n\n      this.reportForm.patchValue({\n        code: this.qcode,\n        value: this.qvalue,\n        group: this.qgroup,\n        status: this.qstatus\n      });\n    })\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GROUP') {\n            this.grouplist = data.data;\n          }\n        }\n      }\n    });\n  }\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n       this.router.navigate(['listconfig'],\n        {\n          queryParams: {\n            code: this.reportForm.value.code,\n            value: this.reportForm.value.value,\n            group: this.reportForm.value.group,\n            status: this.reportForm.value.status,\n            page: 1, \n            sortby: null }\n        }\n      ); \n      //this.fetchReport(this.reportForm.value);\n    }\n  }\n\n  fetchReport(formval) {\n    this.loading = true;\n    this.msconfigService.getAggMsconfig(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.msconfigs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qcode = formval.code;\n        this.qvalue = formval.value;\n        this.qgroup = formval.group;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Ms Config Result';\n        \n        this.reportForm.patchValue({\n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus\n        });\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listconfig'],\n      {\n        queryParams: {\n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortConfig(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listconfig'],\n      {\n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  showConfig(msconfigid): void {\n    this.router.navigate([`viewconfig/${msconfigid}`],\n      { \n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }        \n      }\n    );\n  }\n\n  editConfigFiles(msconfigid): void {\n    this.router.navigate([`editconfigfile/${msconfigid}`],\n      {\n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  editConfig(msconfigid): void {\n    this.router.navigate([`editconfig/${msconfigid}`],\n      {\n        queryParams: { \n          code: this.qcode,\n          value: this.qvalue,\n          group: this.qgroup,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, msconfigid: string, code:string, filename:string) {\n\n    this.loading = true;\n\n    if(confirm('Do you really want to delete this config: ' + code + ' record?')){\n      if (filename) {\n        let payloadData: any = {};\n        payloadData.filename = filename;\n        this.msconfigService.deleteGenrephoto(payloadData)\n        .subscribe(data => {\n            if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.filename);\n            }   \n          });\n      }\n      this.msconfigService.deleteMsconfig(msconfigid)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          if (data.errcode){\n            this.authService.logout();\n            this.router.navigate(['login']);\n          }\n          this.toastr.error(data.message);\n        } else {\n          this.loading = false;\n          this.msconfigs.splice(idx, 1);\n          this.totalrows = this.totalrows - 1;\n          this.toastr.success(data.message);\n        }\n      });  \n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/listconfig/listconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/viewconfig/viewconfig.component.css\n// module id = ./src/app/components/msconfig/viewconfig/viewconfig.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Config Details</h3>\\n    </div>\\n    <form [formGroup]=\\\"msconfigForm\\\" class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"code\\\" class=\\\"col-sm-2 control-label\\\">Code</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ msconfig?.code }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"value\\\" class=\\\"col-sm-2 control-label\\\">Value</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ msconfig?.value }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"group\\\" class=\\\"col-sm-2 control-label\\\">Group</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ msconfig?.groupname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"desc\\\" class=\\\"col-sm-2 control-label\\\">Desc</label>\\n            \\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ msconfig?.desc }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\" disabled>\\n                      <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n                <!-- <div class=\\\"form-ele\\\">{{ artist?.status }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"genrephoto\\\" class=\\\"col-sm-2 control-label\\\">Image</label>\\n            <div class=\\\"input-group col-sm-10\\\" *ngIf=\\\"msconfig?.filepath != ''\\\">\\n              <img src=\\\"{{ msconfig?.filepath }}\\\" class=\\\"rounded float-right\\\" width=\\\"340\\\" height=\\\"340\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/msconfig/viewconfig/viewconfig.component.html\n// module id = ./src/app/components/msconfig/viewconfig/viewconfig.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { IAggMsconfig } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewconfig',\n  templateUrl: './viewconfig.component.html',\n  styleUrls: ['./viewconfig.component.css']\n})\nexport class ViewconfigComponent implements OnInit {\n\n  userObj: any;\n  private sub: Subscription;\n  sts: IMsconfigGroupList[];\n  msconfig: IAggMsconfig;\n  msconfigForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private msconfigService: MsconfigService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let msconfigid = params['id'];\n        this.getMsconfigGroupList('CSTATUS');\n        this.getMsconfig(msconfigid);\n      });\n    this.msconfigForm = this.fb.group({\n      status: this.status\n    });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.sts = data.data;\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n  getMsconfig(id){\n    this.msconfigService.getMsconfigAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.msconfig = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('MsConfig id is incorrect in the URL');\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.msconfigForm.patchValue({\n      status: data.status\n    });\n  }\n  onBack(): void {\n    this.router.navigate(['/listconfig'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/msconfig/viewconfig/viewconfig.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.css\n// module id = ./src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!-- Fixed navbar -->\\n<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n              <span class=\\\"sr-only\\\">Toggle navigation</span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n          <a class=\\\"navbar-brand\\\" *ngIf=\\\"!authService.isLoggedIn()\\\" routerLink=\\\"login\\\">kaXet</a>\\n          <a class=\\\"navbar-brand\\\" *ngIf=\\\"authService.isLoggedIn()\\\" routerLink=\\\"report\\\">kaXet</a>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n          <ul class=\\\"nav navbar-nav\\\">\\n              \\n<!--               <li ><a routerLink=\\\"report\\\" *ngIf=\\\"authService.isLoggedIn()\\\" routerLinkActive=\\\"active\\\">Report</a></li>\\n              <li><a routerLink=\\\"editexpense\\\" *ngIf=\\\"authService.isLoggedIn()\\\" routerLinkActive=\\\"active\\\">Add Expense</a></li> -->\\n              <li><a routerLink=\\\"about\\\" routerLinkActive=\\\"active\\\">About</a></li>\\n              <li *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n                <ul class=\\\"menu\\\">\\n                      <li>\\n                          Artist\\n                          <ul>\\n                              <li routerLink=\\\"addartist\\\" routerLinkActive=\\\"active\\\">Add Artist</li>\\n                              <li routerLink=\\\"listartist\\\" routerLinkActive=\\\"active\\\">Manage Artist</li>\\n                          </ul>\\n                      </li>\\n                </ul>\\n              </li>\\n              <li *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n                <ul class=\\\"menu\\\"> \\n                      <li>\\n                        Album\\n                        <ul>\\n                            <li routerLink=\\\"addalbum\\\" routerLinkActive=\\\"active\\\">Add Album</li>\\n                            <li routerLink=\\\"listalbum\\\" routerLinkActive=\\\"active\\\">Manage Album</li>\\n                        </ul>\\n                    </li>\\n                  </ul>\\n              </li>\\n              <li *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\">\\n                <ul class=\\\"menu\\\">\\n                    <li>\\n                        Song\\n                        <ul>\\n                            <li routerLink=\\\"addsong\\\" routerLinkActive=\\\"active\\\">Add Song</li>\\n                            <li routerLink=\\\"listsong\\\" routerLinkActive=\\\"active\\\">Manage Song</li>\\n                        </ul>\\n                    </li>\\n                  </ul>\\n              </li>\\n              <li *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'ADM'\\\">\\n                <a routerLink=\\\"usermanagement\\\" [queryParams]=\\\"{status:'STSPEND',veremail:'Y'}\\\" routerLinkActive=\\\"active\\\">Manage Label</a>\\n              </li>\\n              <li *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'ADM'\\\">\\n                <a routerLink=\\\"songmanagement\\\" [queryParams]=\\\"{songpublish:'N'}\\\" routerLinkActive=\\\"active\\\">Manage Song</a>\\n              </li>\\n              <li *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'ADM'\\\">\\n                    <ul class=\\\"menu\\\">\\n                        <li>\\n                            Master Config\\n                            <ul>\\n                                <li routerLink=\\\"addconfig\\\" routerLinkActive=\\\"active\\\">Add Config</li>\\n                                <li routerLink=\\\"addgroup\\\" routerLinkActive=\\\"active\\\">Add Group</li>\\n                                <li routerLink=\\\"listconfig\\\" routerLinkActive=\\\"active\\\">Manage Config</li>\\n                            </ul>\\n                        </li>\\n                      </ul>\\n              </li>\\n          </ul>\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\n              <li *ngIf=\\\"!authService.isLoggedIn()\\\">\\n                  <a routerLink=\\\"login\\\" routerLinkActive=\\\"active\\\">Log In</a>\\n              </li>\\n              <li *ngIf=\\\"authService.isLoggedIn()\\\">\\n                 <ul class=\\\"dropdown menu\\\" data-responsive-menu=\\\"drilldown medium-dropdown\\\">\\n                      <li>\\n                          Welcome {{ authService.currentUser.name }}\\n                          <ul>\\n                              <li routerLink=\\\"profile\\\" routerLinkActive=\\\"active\\\">My Profile</li>\\n                              <li routerLink=\\\"updateemail\\\" routerLinkActive=\\\"active\\\">Change Email</li>\\n                              <li routerLink=\\\"password\\\" routerLinkActive=\\\"active\\\">Change Password</li>\\n                              <li routerLink=\\\"logout\\\" routerLinkActive=\\\"active\\\">Logout</li>\\n                          </ul>\\n                      </li>\\n                  </ul>\\n              </li>\\n          </ul>\\n      </div>\\n  </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/navbar/navbar.component.html\n// module id = ./src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/navbar/navbar.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/addsong/addsong.component.css\n// module id = ./src/app/components/song/addsong/addsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Song</h3>\\n  </div>  \\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"addSongForm\\\" (ngSubmit)=\\\"addSong(addSongForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" *ngIf=\\\"progressvalue > 0\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n                <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n                <sup>{{ this.progressvalue }} %</sup>\\n        </div>  \\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('artistid').invalid && addSongForm.get('artistid').dirty}\\\">\\n      <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n            <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('artistid').dirty && addSongForm.get('artistid').errors\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('artistid').errors.required\\\">\\n            Please enter the artist\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('albumid').invalid && addSongForm.get('albumid').dirty}\\\">\\n      <label for=\\\"albumid\\\" class=\\\"col-sm-2 control-label\\\">Album<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the album</option>\\n            <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('albumid').dirty && addSongForm.get('albumid').errors\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('albumid').errors.required\\\">\\n            Please enter the album\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songname').invalid && addSongForm.get('songname').dirty}\\\">\\n      <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"songname\\\" id=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songname').dirty && addSongForm.get('songname').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songname').errors.required\\\">\\n              Please enter the song name\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <textarea [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" id=\\\"songlyric\\\" rows=\\\"10\\\" [formControl]=\\\"songlyric\\\" placeholder=\\\"Song Lyric\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songgenre').invalid && addSongForm.get('songgenre').dirty}\\\">\\n      <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n          <select [disabled]=\\\"this.loading == true\\\" class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n              <option *ngFor=\\\"let a of genre\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n          </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songgenre').dirty && addSongForm.get('songgenre').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songgenre').errors.required\\\">\\n              Please select song genre\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songprice').invalid && addSongForm.get('songprice').dirty}\\\">\\n      <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\">Rp</div>\\n          <input [disabled]=\\\"this.loading == true\\\" type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"songprice\\\" [formControl]=\\\"songprice\\\" placeholder=\\\"Song Price\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songprice').dirty && addSongForm.get('songprice').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songprice').errors.required\\\">\\n              Please enter price\\n          </span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songprice').errors.pattern\\\">\\n              Please enter a valid amount\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songprvw').invalid && addSongForm.get('songprvw').dirty}\\\">\\n      <label for=\\\"songprvw\\\" class=\\\"col-sm-2 control-label\\\">Song Preview<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" #inputprev type=\\\"file\\\" (change)=\\\"prvwfileChangeEvent($event)\\\" name=\\\"songprvw\\\" id=\\\"songprvw\\\" placeholder=\\\"Song preview\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songfile').invalid && addSongForm.get('songfile').dirty}\\\">\\n      <label for=\\\"songfile\\\" class=\\\"col-sm-2 control-label\\\">Song File<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n          <input [disabled]=\\\"this.loading == true\\\" #inputsong type=\\\"file\\\" (change)=\\\"songfileChangeEvent($event)\\\" name=\\\"songfile\\\" id=\\\"songfile\\\" placeholder=\\\"Song file\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\">  </label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n                <mat-progress-bar mode=\\\"determinate\\\" value=\\\"{{this.progressvalue}}\\\"></mat-progress-bar>\\n                <sup>{{ this.progressvalue }} %</sup>\\n        </div>  \\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-sm-2 control-label\\\"></label>\\n      <div class=\\\"col-sm-5\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addSongForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n          <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n      </div>\\n      <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n          <sup>*</sup> required\\n      </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/addsong/addsong.component.html\n// module id = ./src/app/components/song/addsong/addsong.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-addsong',\n  templateUrl: './addsong.component.html',\n  styleUrls: ['./addsong.component.css']\n})\nexport class AddsongComponent implements OnInit {\n  addSongForm: FormGroup;\n  userObj: any;\n  genre: IMsconfigGroupList[];\n  PrvwfilesToUpload: Array<File> = [];\n  SongfilesToUpload: Array<File> = [];\n  songid: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  loading = false;\n  progressvalue = 0;\n  @ViewChild('inputprev')inputpreVar: any;\n  @ViewChild('inputsong')inputsongVar: any;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistid = new FormControl('', [Validators.required]);  \n  albumid = new FormControl('', [Validators.required]);  \n  songname = new FormControl('', [Validators.required]);\n  songlyric = new FormControl('', [Validators.required]);  \n  songgenre = new FormControl('', [Validators.required]);\n  songprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  songprvwpath: String;\n  songprvwname: String;\n  songfilepath: String;\n  songfilename: String;\n\n  ngOnInit() {\n    this.progressvalue = 0;\n    this.userObj =  this.authService.currentUser;\n    this.getMsconfigGroupList('GENRE');\n    this.getArtistList(this.userObj.userid);\n    this.getAlbumList(this.userObj.userid);\n    this.songid = '';\n    this.addSongForm = this.fb.group({\n      artistid: this.artistid,\n      albumid: this.albumid,\n      songname: this.songname,\n      songlyric: this.songlyric,\n      songgenre: this.songgenre,\n      songprice: this.songprice,\n      songprvw: this.PrvwfilesToUpload,\n      songfile: this.SongfilesToUpload,\n      songprvwpath: this.songprvwpath,\n      songprvwname: this.songprvwname,\n      songfilepath: this.songfilepath,\n      songfilename: this.songfilename,\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.genre = data.data;\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getAlbumList(id){\n    this.albumService.getAlbumList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'Error album list'}];\n        }\n      }\n    });\n  }\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      }\n    });\n  }\n  addSong(formdata:any): void {\n    this.progressvalue = 0;\n    if (this.addSongForm.dirty && this.addSongForm.valid) {\n      this.progressvalue = 10;\n      const prvwfiles: Array<File> = this.PrvwfilesToUpload;\n      let theForm = this.addSongForm.value;\n      this.progressvalue = 20;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ prvwfiles[0]['name']);\n\n      lformData.append('songprvw',prvwfiles[0],prvwfiles[0]['name']);\n\n      this.loading = true;\n      this.progressvalue = 30;\n      this.songService.uploadSongPreview(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.toastr.error(data.message);\n          } else {\n            this.progressvalue = 40;\n              theForm.songprvwpath = data.filedata.songprvwpath;\n              theForm.songprvwname = data.filedata.songprvwname;\n              const songfiles: Array<File> = this.SongfilesToUpload;\n              lformData.append('songfile',songfiles[0],songfiles[0]['name']);\n              this.progressvalue = 50;\n              this.songService.uploadSongFile(lformData)\n              .subscribe(data => {\n                  if (data.success === false) {\n                    this.loading = false;\n                    this.progressvalue = 0;\n                    this.toastr.error(data.message);\n                  } else {\n                    this.progressvalue = 60;\n                    theForm.songfilepath = data.filedata.songfilepath;\n                    theForm.songfilename = data.filedata.songfilename;  \n                    theForm.status = 'STSACT';\n                    if (this.songid !== '') {\n                      theForm.songid = this.songid;\n                    }\n                    this.progressvalue = 80;\n                    this.songService.saveSong(this.userObj.userid, theForm.artistid, theForm.albumid, theForm)\n                    .subscribe(data => {\n                      if (data.success === false) {\n                        this.loading = false;\n                        this.progressvalue = 0;\n                        this.toastr.error(data.message);\n                      } else {\n                        this.loading = false;\n                        this.progressvalue = 100;\n                        this.toastr.success(data.message);\n                        //this.router.navigate(['listsong']);\n                      }\n                      this.addSongForm.reset();\n                      this.progressvalue = 0;\n                      this.inputpreVar.nativeElement.value = \"\";\n                      this.inputsongVar.nativeElement.value = \"\";\n                    });\n                  }      \n              });\n          }   \n        });\n \n    }\n  }\n\n  prvwfileChangeEvent(fileInput:any): void {\n    this.PrvwfilesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.PrvwfilesToUpload);\n  }\n\n  songfileChangeEvent(fileInput:any): void {\n    this.SongfilesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.SongfilesToUpload);\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/addsong/addsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsong/editsong.component.css\n// module id = ./src/app/components/song/editsong/editsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Song</h3>\\n    </div>\\n\\n    <form [formGroup]=\\\"songForm\\\" (ngSubmit)=\\\"saveSong(songForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songname').invalid && songForm.get('songname').dirty}\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songname').dirty && songForm.get('songname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} song name</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('artistid').invalid && songForm.get('artistid').dirty}\\\">\\n            <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n                    <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('artistid').dirty && songForm.get('artistid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('artistid').errors.required\\\">\\n                    Please select artist\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('albumid').invalid && songForm.get('albumid').dirty}\\\">\\n            <label for=\\\"albumid\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n                    <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('albumid').dirty && songForm.get('albumid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('albumid').errors.required\\\">\\n                    Please select album song\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <textarea class=\\\"form-control\\\" id=\\\"songlyric\\\" rows=\\\"10\\\" [formControl]=\\\"songlyric\\\" placeholder=\\\"Song Lyric\\\"></textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songgenre').invalid && songForm.get('songgenre').dirty}\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Song Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                    <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songgenre').dirty && songForm.get('songgenre').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songgenre').errors.required\\\">\\n                    Please select song genre\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songprice').invalid && songForm.get('songprice').dirty}\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"songprice\\\" [formControl]=\\\"songprice\\\" placeholder=\\\"Enter price\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songprice').dirty && songForm.get('songprice').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songprice').errors.required\\\">\\n                    Please enter price\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songprice').errors.pattern\\\">\\n                    Please enter a valid amount\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songpublish').invalid && songForm.get('songpublish').dirty}\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Song Published?</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ this.songpublish }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n              <div class=\\\"form-ele\\\">{{ this.songbuy }}</div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('status').invalid && songForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('status').dirty && songForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('status').errors.required\\\">\\n                    Please select song status\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"songForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsong/editsong.component.html\n// module id = ./src/app/components/song/editsong/editsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-editsong',\n  templateUrl: './editsong.component.html',\n  styleUrls: ['./editsong.component.css']\n})\nexport class EditsongComponent implements OnInit {\n  songForm: FormGroup;\n  userObj: any;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  songid: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  partistid: String;\n  btnLbl: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  artistid = new FormControl('', [Validators.required]);  \n  albumid = new FormControl('', [Validators.required]);  \n  songname = new FormControl('', [Validators.required]);\n  songlyric = new FormControl('', [Validators.required]);  \n  songgenre = new FormControl('', [Validators.required]);\n  songprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  status = new FormControl('', [Validators.required]);\n  songpublish : String;\n  songbuy : Number;\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.songid = params['id'];\n      this.btnLbl = \"Update\"\n    });\n    this.getSelectedSong(this.songid);\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.userObj =  this.authService.currentUser;\n    this.getArtistList(this.userObj.userid);\n\n    this.songForm = this.fb.group({\n      artistid: this.artistid,\n      albumid: this.albumid,\n      songname: this.songname,\n      songlyric: this.songlyric,\n      songgenre: this.songgenre,\n      songprice: this.songprice,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,         \n      status: this.status\n    });\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      }\n    });\n  }\n\n  getSelectedSong(id){\n    this.songService.getSong(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.partistid = data.data[0].artistid;\n          this.getAlbumListbyArtist(this.userObj.userid, this.partistid)\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n          this.router.navigate(['listsong']);\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.songpublish = data.songpublish;\n    this.songbuy = data.songbuy;    \n    this.songForm.patchValue({\n      artistid: data.artistid,\n      albumid: data.albumid,\n      songname: data.songname,\n      songlyric: data.songlyric,\n      songgenre: data.songgenre,\n      songprice: data.songprice,\n      songpublish: data.songpublish,\n      songbuy: data.songbuy,         \n      status: data.status\n    });\n  }\n\n  saveSong(formdata:any): void {\n    if (this.songForm.valid) {\n      const theForm:any = this.songForm.value;\n      if (this.songid !== '') {\n        theForm.songid = this.songid;\n      \n      }\n      this.songService.saveSong(this.userObj.userid,theForm.artistid, theForm.albumid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.songid) {\n            this.songForm.reset();\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listsong'], { preserveQueryParams: true });\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/editsong/editsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsongfiles/editsongfiles.component.css\n// module id = ./src/app/components/song/editsongfiles/editsongfiles.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Change Song Files</h3>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"songForm\\\" (ngSubmit)=\\\"updateSong(songForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"input-group col-sm-10\\\">\\n          <label for=\\\"songprvw\\\" class=\\\"col-sm-3 control-label\\\">Song Preview</label>\\n          <div class=\\\"input-group\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" (change)=\\\"PrvwfileChangeEvent($event)\\\" name=\\\"songprvw\\\" id=\\\"songprvw\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newprvwfile }}\\\">  \\n            </div>\\n      </div>\\n      <br><br>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <label for=\\\"songfile\\\" class=\\\"col-sm-3 control-label\\\">Song File</label>\\n          <div class=\\\"input-group\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span *ngIf=\\\"this.loading == false\\\" class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input [disabled]=\\\"this.loading == true\\\" type=\\\"file\\\" (change)=\\\"SongfileChangeEvent($event)\\\" name=\\\"songfile\\\" id=\\\"songfile\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newsongfile }}\\\">  \\n            </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\">     </label>\\n          <div class=\\\"col-sm-10\\\">\\n              <br>\\n              <button type=\\\"button\\\" [disabled]=\\\"this.loading == true\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/editsongfiles/editsongfiles.component.html\n// module id = ./src/app/components/song/editsongfiles/editsongfiles.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ISong } from '../../../interface/song';\n\n@Component({\n  selector: 'app-editsongfiles',\n  templateUrl: './editsongfiles.component.html',\n  styleUrls: ['./editsongfiles.component.css']\n})\nexport class EditsongfilesComponent implements OnInit {\n  songForm: FormGroup\n  userObj: any;\n  song: ISong;\n  songid: String;\n  PrvwfilesToUpload: Array<File> = [];\n  SongfilesToUpload: Array<File> = [];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  songprvwpath = new FormControl('', [Validators.nullValidator]);\n  songprvwname = new FormControl('', [Validators.nullValidator]);\n  songfilepath = new FormControl('', [Validators.nullValidator]);\n  songfilename = new FormControl('', [Validators.nullValidator]);\n  newprvwfile: String;\n  newsongfile: String;\n  deletedPrvwFile: String;\n  deletedSongFile: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.songForm = this.fb.group({\n      songprvwpath: this.songprvwpath,\n      songprvwname: this.songprvwname,\n      songfilepath: this.songfilepath,\n      songfilename: this.songfilename,\n    });\n    this.route.params.subscribe((params: any) => {\n      this.songid = params['id'];\n      this.getSong(this.songid);\n    });\n  }\n  getSong(id){\n    this.songService.getSong(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.song = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n          this.router.navigate(['listsong']);\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.deletedPrvwFile = this.song.songprvwname;\n    this.deletedSongFile = this.song.songfilename;\n    this.songForm.patchValue({\n      songprvwpath: data.songprvwpath,\n      songprvwname: data.songprvwname,\n      songfilepath: data.songfilepath,\n      songfilename: data.songfilename\n    });\n  }\n\n  PrvwfileChangeEvent(fileInput:any): void {\n    this.PrvwfilesToUpload = <Array<File>>fileInput.target.files;\n    this.newprvwfile = this.PrvwfilesToUpload[0]['name'];\n    this.uploadNewPreview(this.PrvwfilesToUpload);  \n  }\n\n  SongfileChangeEvent(fileInput:any): void {\n    this.SongfilesToUpload = <Array<File>>fileInput.target.files;\n    this.newsongfile = this.SongfilesToUpload[0]['name'];\n    this.uploadNewSong(this.SongfilesToUpload);  \n  }\n\n  uploadNewPreview(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('songprvw',files[0],files[0]['name']);\n    this.loading = true;\n    this.songService.uploadSongPreview(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        let payloadData: any = this.songForm.value;\n        this.songService.deleteSongPreview(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error deleted ' + data.message);\n            } else {\n              if (payloadData) {\n                console.log('File deleted - ' + payloadData.songprvwname);\n              }\n            }   \n          });\n        this.songForm.value.songprvwpath = data.filedata.songprvwpath;\n        this.songForm.value.songprvwname = data.filedata.songprvwname;\n          \n        this.songService.updateSongPreview(this.songid, this.songForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            console.log('Success update song preview.');\n            this.toastr.success(data.message);\n          }\n        });\n      }\n    });    \n  }\n\n  uploadNewSong(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('songfile',files[0],files[0]['name']);\n    this.loading = true;\n    this.songService.uploadSongFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        this.toastr.error(data.message);\n      } else {\n        let payloadData: any = this.songForm.value;\n        this.songService.deleteSongFile(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.songfilename);\n            }   \n          });\n           \n        this.songForm.value.songfilepath = data.filedata.songfilepath;\n        this.songForm.value.songfilename = data.filedata.songfilename;\n\n        this.songService.updateSongFile(this.songid, this.songForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            console.log('Success update song file.');\n            this.toastr.success(data.message);\n          }\n        });\n      }\n    });    \n  }\n  onBack(): void {\n    this.router.navigate(['/listsong'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/editsongfiles/editsongfiles.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/listsong/listsong.component.css\n// module id = ./src/app/components/song/listsong/listsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>List Song</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\n                <label for=\\\"artistid\\\">Artist</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n                        <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                        <option value=\\\"\\\">Select the artist</option>\\n                        <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\n                <label for=\\\"albumid\\\">Album</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n                        <option value=\\\"\\\">Select the album</option>\\n                        <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n\\n\\n          </div><br>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                  <label for=\\\"songname\\\">Song Name</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-2\\\">\\n                  <label for=\\\"albumyear\\\">Album Year</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songgenre\\\">Genre</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                        <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>\\n          </div><br>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songpublish\\\">Publish?</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songpublish\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                        <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>  \\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songbuy\\\">Buy?</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songbuy\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                        <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>  \\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"status\\\">Status</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                        <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div><br>\\n              <div class=\\\"col-sm-12 col-md-2\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n              </div>                  \\n          </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songs && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No song found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems like you havn't entered any songs for the selected criteria. Please add the song <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddSongs()\\\">here</a>.\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"songs && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Name</a></th>\\n                          <th width=\\\"20%\\\">Artist</th>\\n                          <th width=\\\"20%\\\">Album</th>\\n                          <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('albumyear')\\\">Year</a></th>\\n                          <th width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songgenre')\\\">Genre</a></th>\\n                          <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th width=\\\"20%\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let song of songs; let songIndex = index'>\\n                          <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showSong(song._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ song.songname}}</a></td>\\n                          <td>{{ song.artist }}</td>\\n                          <td>{{ song.album }}</td>\\n                          <td>{{ song.albumyear}}</td>\\n                          <td>{{ song.genrevalue}}</td>\\n                          <td class=\\\"text-right\\\">{{ song.songprice | currency: 'IDR':true }}</td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editSongFiles(song._id, song.songpublish, song.songbuy)\\\">\\n                                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Song File\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editSong(song._id, song.songpublish, song.songbuy)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Song Data\\\">\\n                                  <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(songIndex, song._id, song.songpublish, song.songbuy, song.songname, song.songprvwname, song.songfilename)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Song\\\">\\n                                  <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                          </td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div> \\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div> \\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/listsong/listsong.component.html\n// module id = ./src/app/components/song/listsong/listsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { IAggSong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-listsong',\n  templateUrl: './listsong.component.html',\n  styleUrls: ['./listsong.component.css']\n})\nexport class ListsongComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  songs: IAggSong[];\n  totalrows: number;\n  pgCounter: number;\n  qsongname: String;\n  qartistid: String;\n  qalbumid: String;\n  qalbumyear: String;\n  qsonggenre: String;\n  qsongpublish: String;\n  qsongbuy: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  ynlist: IMsconfigGroupList[];\n\n  currsongpublish: String;\n  currsongbuy: Number;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  songname = new FormControl('',[Validators.nullValidator]);\n  artistid = new FormControl('',[Validators.nullValidator]);\n  albumid = new FormControl('',[Validators.nullValidator]);  \n  albumyear = new FormControl('',[Validators.nullValidator]);\n  songgenre = new FormControl('',[Validators.nullValidator]);\n  songpublish = new FormControl('',[Validators.nullValidator]);\n  songbuy = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      songname: this.songname,\n      artistid: this.artistid,\n      albumid: this.albumid,\n      albumyear: this.albumyear,\n      songgenre: this.songgenre,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getMsconfigGroupList('YRN');\n    this.getArtistList(this.userObj.userid);\n    this.getAlbumList(this.userObj.userid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qsongname = params['songname'] || '';\n      this.qartistid = params['artistid'] || '';\n      this.qalbumid = params['albumid'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qsonggenre = params['songgenre'] || '';\n      this.qsongpublish = params['songpublish'] || '';\n      this.qsongbuy = params['songbuy'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistid = this.qartistid;\n      payload.albumid = this.qalbumid;\n      payload.songname = this.qsongname;\n      payload.albumyear = this.qalbumyear;\n      payload.songgenre = this.qsonggenre;\n      payload.songpublish = this.qsongpublish;\n      payload.songbuy = this.qsongbuy;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n\n      this.reportForm.patchValue({\n        songname: this.qsongname,\n        artistid: this.qartistid,\n        albumid: this.qalbumid,\n        albumyear: this.qalbumyear,\n        songgenre: this.qsonggenre,\n        songpublish: this.qsongpublish,\n        songbuy: this.qsongbuy,\n        status: this.qstatus\n      });\n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n          if (groupid == 'YRN') {\n            this.ynlist = data.data;\n          }\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getAlbumList(id){\n    this.albumService.getAlbumList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'Error album list'}];\n        }\n      }\n    });\n  }\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      }\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['listsong'],\n        {\n          queryParams: {\n            songname: this.reportForm.value.songname,\n            artistid: this.reportForm.value.artistid,\n            albumid: this.reportForm.value.albumid,\n            albumyear: this.reportForm.value.albumyear,\n            songgenre: this.reportForm.value.songgenre,\n            songpublish: this.reportForm.value.songpublish,\n            songbuy: this.reportForm.value.songbuy,\n            status: this.reportForm.value.status,\n            page: 1, \n            sortby: null }\n        }\n      );\n\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.songService.getAggSongs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n\n        this.qsongname = formval.songname;\n        this.qartistid = formval.artistid;\n        this.qalbumid = formval.albumid;\n        this.qalbumyear = formval.albumyear;\n        this.qsonggenre = formval.songgenre;\n        this.qsongpublish = formval.songpublish;\n        this.qsongbuy = formval.songbuy;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Songs Result';\n        if (this.qartistid) {\n          this.getAlbumListbyArtist(this.userObj.userid, this.qartistid);\n        } else {\n          this.getAlbumList(this.userObj.userid);\n        }\n        \n        this.reportForm.patchValue({\n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus\n        });\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listsong'],\n      {\n        queryParams: {\n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listsong'],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n  }\n\n  editSongFiles(songid, songpublish, songbuy): void {\n    if (songpublish == 'Y') {\n      this.toastr.warning(\"This song files has been published. The file can not be edited\");\n    } else {\n      //this.toastr.warning(\"This song id: \" + songid);      \n      this.router.navigate([`editsongfiles/${songid}`],\n        {\n          queryParams: { \n            songname: this.qsongname,\n            artistid: this.qartistid,\n            albumid: this.qalbumid,\n            albumyear: this.qalbumyear,\n            songgenre: this.qsonggenre,\n            songpublish: this.qsongpublish,\n            songbuy: this.qsongbuy,\n            status: this.qstatus,\n            page: this.qpage || 1, \n            sortby: this.qsort }\n        }\n      );\n    }\n\n  }\n\n  showSong(songid): void {\n    this.router.navigate([`viewsong/${songid}`],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  editSong(songid, songpublish, songbuy): void {\n\n    if (songbuy > 0) {\n      this.toastr.warning(\"This song has been purchased. Data can not be edited\");\n    } else {\n      this.router.navigate([`editsong/${songid}`],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n        }\n      );\n    }\n  }\n\n  confirmDel(idx: number, songid: string, songpublish, songbuy, songname, songprvwname, songfilename) {\n    \n    if (songbuy > 0) {\n      this.toastr.warning(\"This song has been purchased. Data can not be deleted\");\n    } else {\n      if(confirm('Do you really want to delete this song: ' + songname + ' record?')){\n        this.loading = true;\n        let payload: any = {};\n        payload.songprvwname = songprvwname;\n        this.songService.deleteSongPreview(payload)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error delete preview' + data.message);\n            } else {\n              console.log('Success delete preview...');\n            }   \n          });\n        let payloadData: any = {};\n        payloadData.songfilename = songfilename;\n        this.songService.deleteSongFile(payloadData)\n        .subscribe(data => {\n            if (data.success === false) {\n              console.log('Error delete songfile' + data.message);\n            } else {\n              console.log('Success delete SongFile... ');\n            }   \n          });\n        this.songService.deleteSong(songid)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.songs.splice(idx, 1);\n            this.totalrows = this.totalrows - 1;\n            this.toastr.success(data.message);\n          }\n        });\n      }\n    }\n  }\n\n  toaddSongs(): void {\n    this.router.navigate(['/addsong']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/listsong/listsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/viewsong/viewsong.component.css\n// module id = ./src/app/components/song/viewsong/viewsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Song Details</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artist\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.artist }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"album\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.album }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            \\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songlyric }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\" disabled>\\n                  <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songgenre }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <div class=\\\"form-ele\\\">{{ song?.songprice | currency: 'IDR':true }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprvwpath\\\" class=\\\"col-sm-2 control-label\\\">Preview</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n              <a href=\\\"{{ song?.songprvwpath }}\\\"><img src=\\\"assets/images/play-prvw.jpg\\\" alt=\\\"Preview\\\" style=\\\"float:center;width:30px;height:30px;border:0;\\\" title=\\\"Play Preview\\\"></a>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.songprvwpath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songfilepath\\\" class=\\\"col-sm-2 control-label\\\">File</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n                <a href=\\\"{{ song.songfilepath }}\\\"><img src=\\\"assets/images/play-song.jpg\\\" alt=\\\"Song\\\" style=\\\"float:center;width:30px;height:30px;border:0;\\\" title=\\\"Play Song\\\"></a>\\n                <!-- <div class=\\\"form-ele\\\">{{ song?.songfilepath }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Publish?</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songpublish }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songbuy }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <select class=\\\"form-control\\\" [formControl]=\\\"status\\\" disabled>\\n                    <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n              </select>\\n              <!-- <div class=\\\"form-ele\\\">{{ song?.status }}</div> -->\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">    </label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/song/viewsong/viewsong.component.html\n// module id = ./src/app/components/song/viewsong/viewsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IAggSong } from '../../../interface/song';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-viewsong',\n  templateUrl: './viewsong.component.html',\n  styleUrls: ['./viewsong.component.css']\n})\nexport class ViewsongComponent implements OnInit {\n  userObj: any;\n  song: IAggSong;\n  genre: IMsconfigGroupList[];\n  sts: IMsconfigGroupList[];\n  songForm: FormGroup;\n\n  private sub: Subscription;\n\n  constructor(    \n    private fb: FormBuilder,\n    private authService: AuthService,\n    private songService: SongService,\n    private msconfigService: MsconfigService,    \n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  songgenre = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let songid = params['id'];\n        this.getMsconfigGroupList('CSTATUS');\n        this.getMsconfigGroupList('GENRE');\n        this.getSong(songid);\n      });\n    this.songForm = this.fb.group({\n      songgenre: this.songgenre,\n      status: this.status\n    });  \n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getSong(id){\n    this.songService.getSongAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.song = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.songForm.patchValue({\n      songgenre: data.songgenre,\n      status: data.status\n    });\n  }\n\n  onBack(): void {\n    if (this.userObj.usertype === 'ADM') {\n      this.router.navigate(['/songmanagement'], { preserveQueryParams: true });\n    } else {\n      this.router.navigate(['/listsong'], { preserveQueryParams: true });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/song/viewsong/viewsong.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songmgt/songmgt.component.css\n// module id = ./src/app/components/songmgt/songmgt.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>List Song</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\n                <label for=\\\"labelid\\\">Label</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"labelid\\\">\\n                        <!-- <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option> -->\\n                        <option value=\\\"\\\">Select the artist</option>\\n                        <option *ngFor=\\\"let label of userlist\\\" [ngValue]=\\\"label._id\\\">{{label.name}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\n              <label for=\\\"songname\\\">Song Name</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n              </div>\\n            </div>            \\n        </div>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                  <label for=\\\"artistname\\\">Artist Name</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                <label for=\\\"albumname\\\">Album Name</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"albumyear\\\">Album Year</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Year\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songgenre\\\">Genre</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n                        <option *ngFor=\\\"let g of genre\\\" [ngValue]=\\\"g.code\\\">{{g.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songpublish\\\">Publish?</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songpublish\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                        <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>  \\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songbuy\\\">Buy?</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songbuy\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the option</option>\\n                        <option *ngFor=\\\"let a of ynlist\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>  \\n          </div>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"status\\\">Status</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                        <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div><br>\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"submit\\\"> </label>\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n              </div>                  \\n          </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songs && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No song found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            There is NO any songs found for the selected criteria.\\n        </div>\\n    </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"songs && totalrows > 0 && this.loading == false\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Name</a></th>\\n                          <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('label')\\\">Label</a></th>\\n                          <th width=\\\"10%\\\">Artist</th>\\n                          <th width=\\\"20%\\\">Album</th>\\n                          <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songbuy')\\\">Purchase</a></th>\\n                          <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Publish?</a></th>\\n                          <th width=\\\"5%\\\">Preview</th>\\n                          <th width=\\\"5%\\\">Song</th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th width=\\\"20%\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let song of songs; let songIndex = index'>\\n                          <td><a style=\\\"font-size:12px;cursor:pointer\\\" (click)=\\\"showSong(song._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ song.songname}}</a></td>\\n                          <td style=\\\"font-size:12px\\\">{{ song.label }}</td>\\n                          <td style=\\\"font-size:12px\\\">{{ song.artist }}</td>\\n                          <td style=\\\"font-size:12px\\\">{{ song.album }}</td>\\n                          <td class=\\\"text-right\\\" style=\\\"font-size:12px\\\">{{ song.songbuy}} x {{ song.songprice | currency: 'IDR':true }}</td>\\n                          <td style=\\\"font-size:12px\\\">{{ song.songpublish }}</td>\\n                          <td><a href=\\\"{{ song.songprvwpath }}\\\"><img src=\\\"assets/images/play-prvw.jpg\\\" alt=\\\"Preview\\\" style=\\\"float:center;width:30px;height:30px;border:0;\\\" title=\\\"Play Preview\\\"></a></td>\\n                          <td><a href=\\\"{{ song.songfilepath }}\\\"><img src=\\\"assets/images/play-song.jpg\\\" alt=\\\"Song\\\" style=\\\"float:center;width:30px;height:30px;border:0;\\\" title=\\\"Play Song\\\"></a></td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td>\\n                               <img src=\\\"assets/images/topublish.png\\\" alt=\\\"Publish\\\" style=\\\"cursor:pointer;float:center;width:47px;height:42px;border:0;\\\" (click)=\\\"publishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Publish\\\">\\n                               <img src=\\\"assets/images/tounpublish.png\\\" alt=\\\"Unpublish\\\" style=\\\"cursor:pointer;float:center;width:47px;height:42px;border:0;\\\" (click)=\\\"unpublishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Unpublish\\\">\\n<!--                               <button type=\\\"button\\\" class=\\\"btn-xs btn-success\\\" aria-label=\\\"Publish\\\" (click)=\\\"publishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Publish Song\\\">\\n                                  <span class=\\\"glyphicon glyphicon-ok\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"UnPublish\\\" (click)=\\\"unpublishSong(song._id, song.songname, song.songpublish)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Cancel Publish Song\\\">\\n                                  <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button> -->\\n                          </td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div> \\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div> \\n      </div>\\n\\n  </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/songmgt/songmgt.component.html\n// module id = ./src/app/components/songmgt/songmgt.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { SongadminService } from '../../services/admin/songadmin.service';\nimport { IAggSong } from '../../interface/song';\nimport { IUserList } from '../../interface/user';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\n\n\n@Component({\n  selector: 'app-songmgt',\n  templateUrl: './songmgt.component.html',\n  styleUrls: ['./songmgt.component.css']\n})\nexport class SongmgtComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  userlist: IUserList[];\n  songs: IAggSong[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelid: String;\n  qsongname: String;\n  qartistname: String;\n  qalbumname: String;\n  qalbumyear: String;\n  qsonggenre: String;\n  qsongpublish: String;\n  qsongbuy: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  genre: IMsconfigGroupList[];\n  ynlist: IMsconfigGroupList[];\n\n  currsongpublish: String;\n  currsongbuy: Number;\n  loading = false;\n\n  constructor(    \n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe,\n    private songadminService: SongadminService,\n  ) { }\n\n  songname = new FormControl('',[Validators.nullValidator]);\n  labelid = new FormControl('',[Validators.nullValidator]);\n  artistname = new FormControl('',[Validators.nullValidator]);\n  albumname = new FormControl('',[Validators.nullValidator]);  \n  albumyear = new FormControl('',[Validators.nullValidator]);\n  songgenre = new FormControl('',[Validators.nullValidator]);\n  songpublish = new FormControl('',[Validators.nullValidator]);\n  songbuy = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      labelid: this.labelid,\n      songname: this.songname,\n      artistname: this.artistname,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      songgenre: this.songgenre,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,\n      status: this.status\n    });\n    this.getMsconfigGroupList('CSTATUS');\n    this.getMsconfigGroupList('GENRE');\n    this.getMsconfigGroupList('YRN');\n    this.getLabels();\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelid = params['labelid'] || '';\n      this.qsongname = params['songname'] || '';\n      this.qartistname = params['artistname'] || '';\n      this.qalbumname = params['albumname'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qsonggenre = params['songgenre'] || '';\n      this.qsongpublish = params['songpublish'] || '';\n      this.qsongbuy = params['songbuy'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.labelid = this.qlabelid;\n      payload.artistname = this.qartistname;\n      payload.albumname = this.qalbumname;\n      payload.songname = this.qsongname;\n      payload.albumyear = this.qalbumyear;\n      payload.songgenre = this.qsonggenre;\n      payload.songpublish = this.qsongpublish;\n      payload.songbuy = this.qsongbuy;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(payload);\n\n      this.reportForm.patchValue({\n        labelid: this.qlabelid,\n        songname: this.qsongname,\n        artistname: this.qartistname,\n        albumname: this.qalbumname,\n        albumyear: this.qalbumyear,\n        songgenre: this.qsonggenre,\n        songpublish: this.qsongpublish,\n        songbuy: this.qsongbuy,\n        status: this.qstatus\n      });\n    })\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'CSTATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'GENRE') {\n            this.genre = data.data;\n          }\n          if (groupid == 'YRN') {\n            this.ynlist = data.data;\n          }\n        } else {\n          this.genre = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getLabels(){\n    this.labelmgtService.getLabelList().subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.userlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.userlist = [{_id:'', name:'Error label list'}];\n        }\n      }\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.reportForm.value);\n        this.router.navigate(['songmanagement'],\n        {\n          queryParams: {\n            labelid: this.reportForm.value.labelid,\n            songname: this.reportForm.value.songname,\n            artistname: this.reportForm.value.artistname,\n            albumname: this.reportForm.value.albumname,\n            albumyear: this.reportForm.value.albumyear,\n            songgenre: this.reportForm.value.songgenre,\n            songpublish: this.reportForm.value.songpublish,\n            songbuy: this.reportForm.value.songbuy,\n            status: this.reportForm.value.status,\n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(formval) {\n    this.loading = true;\n    this.songadminService.getAggSongs(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        this.qlabelid = formval.labelid;\n        this.qsongname = formval.songname;\n        this.qartistname = formval.artistname;\n        this.qalbumname = formval.albumname;\n        this.qalbumyear = formval.albumyear;\n        this.qsonggenre = formval.songgenre;\n        this.qsongpublish = formval.songpublish;\n        this.qsongbuy = formval.songbuy;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Songs Result';\n        \n        this.reportForm.patchValue({\n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumid: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus\n        });\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['songmanagement'],\n      {\n        queryParams: {\n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['songmanagement'],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  showSong(songid): void {\n    this.router.navigate([`viewsong/${songid}`],\n      {\n        queryParams: { \n          labelid: this.qlabelid,\n          songname: this.qsongname,\n          artistname: this.qartistname,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  publishSong(songid, songname, songpublish): void {\n    \n    this.loading = true;\n    if (songpublish === 'Y') {\n      this.loading = false;\n      this.toastr.warning('This song has already been published.');\n    } else {\n      if(confirm('Do you really want to publish this song: ' + songname + ' record?')){\n        let payload: any = {};\n        payload.status = 'STSACT';\n        this.songadminService.publishSong(songid, payload)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n  }\n\n  unpublishSong(songid, songname, songpublish): void {\n    \n    this.loading = true;\n    if (songpublish === 'N') {\n      this.loading = false;\n      this.toastr.warning('This song is already still unpublished.');\n    } else {\n      if(confirm('Do you really want to unpublish this song: ' + songname + ' record?')){\n        let payload: any = {};\n        payload.status = 'STSACT';\n        this.songadminService.cancelpublishSong(songid, payload)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/songmgt/songmgt.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/emailverification/emailverification.component.css\n// module id = ./src/app/components/user/emailverification/emailverification.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <table bgcolor=\\\"#EFF5F6\\\" style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 100%; background-color: rgb(239, 245, 246); margin: 0px; padding: 0px; border: 0px; \\\">\\n        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n          <tr style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n            <td style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 540px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; text-align: center; margin: 0 auto; padding: 0; border: 0;\\\">\\n                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                    <td style=\\\"width: 100%; margin: 0; padding: 0;\\\">\\n      <!--                <a href=\\\"#\\\">\\n                        <img alt=\\\"Relay Foods\\\" src=\\\"http://www6.dev-chop-chop.org/JIX8STE8/images/relay-small.png\\\" style=\\\"display: block; outline: 0; margin: 0; padding: 0; border: 0;\\\">\\n                      </a> -->\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </td>\\n          </tr>\\n      \\n          <tr style=\\\"margin: 0px; padding: 0px; \\\" bgcolor=\\\"#EFF5F6\\\">\\n            <td style=\\\"margin: 0; padding: 0;\\\">\\n              <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; text-align: center; border-right-color: rgb(224, 224, 224); border-left-color: rgb(224, 224, 224); margin: 0px auto; padding: 0px 0px 50px; border-style: none; border-width: 0px 1px; \\\"\\n                bgcolor=\\\"transparent\\\">\\n                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                    <td style=\\\"margin: 0; padding: 0;\\\">\\n                      <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; margin: 0; padding: 0; border: 0;\\\">\\n                        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                            <td style=\\\"width: 100%; text-align: left; margin: 0; padding: 0;\\\" align=\\\"left\\\">\\n                              <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 100%; margin: 0px; padding: 0px; border: 0px; \\\" bgcolor=\\\"#eff5f6\\\">\\n                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                  <tr style=\\\"line-height: 1px; font-size: 1px; margin: 0px; padding: 0px; \\\" bgcolor=\\\"#eff5f6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"10\\\">&nbsp;</td>\\n                                  </tr>\\n                                  <tr style=\\\"line-height: 1px; font-size: 1px; margin: 0px; padding: 0px; \\\" bgcolor=\\\"#eff5f6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"10\\\">&nbsp;</td>\\n                                  </tr>\\n                                  <tr style=\\\"margin: 0px; padding: 0px; \\\" bgcolor=\\\"#eff5f6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\">\\n                                      <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: center; border-right-color: rgb(224, 224, 224); border-left-color: rgb(224, 224, 224); margin: 0px auto; padding: 0px 0px 50px; border-style: none; border-width: 1px 1px; \\\"\\n                                        bgcolor=\\\"transparent\\\">\\n                                        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"margin: 0; padding: 0;\\\">\\n                                              <h3 style=\\\"color: rgb(44, 44, 44); font-size: 24px; text-align: left; margin: 0px; padding: 0px; \\\" align=\\\"left\\\">Thanks for the confirmation.</h3>\\n                                            </td>\\n                                          </tr>\\n                                        </tbody>\\n                                      </table>\\n                                    </td>\\n                                  </tr>\\n                                  <tr style=\\\"line-height: 1px; font-size: 1px; margin: 0px; padding: 0px; \\\" bgcolor=\\\"#eff5f6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"10\\\">&nbsp;</td>\\n                                  </tr>\\n                                      <tr style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n            <td style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 540px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; text-align: left; font-size: 14px; line-height: 20px; color: #666; margin: 0 auto; padding: 0; border: 0;\\\"align=\\\"left\\\">\\n                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                    <td style=\\\"margin: 0; padding: 0;\\\" >{{ this.remarks1 }}\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </td>\\n          </tr>\\n              <tr style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n            <td style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 540px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; text-align: left; font-size: 14px; line-height: 30px; color: #666; margin: 0 auto; padding: 0; border: 0;\\\" align=\\\"left\\\">\\n                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                    <td style=\\\"margin: 0; padding: 0;\\\">{{ this.remarks2 }} <a href=\\\"mailto:cs.kaxet10@gmail.com\\\">{{ this.csemail.value }}</a>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </td>\\n          </tr>\\n                                  <tr style=\\\"line-height: 1px; font-size: 1px; margin: 0px; padding: 0px; \\\" bgcolor=\\\"#eff5f6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"10\\\">&nbsp;</td>\\n                                  </tr>\\n                                </tbody>\\n                              </table>\\n                              <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: center; background-color: rgb(255, 255, 255); margin: 0px; padding: 0px 0px 50px; border-width: 0px 1px; \\\" bgcolor=\\\"#fff\\\">\\n                                <tbody>\\n                                  <tr style=\\\"background-color: #eff5f6; margin: 0; padding: 0;\\\" bgcolor=\\\"#eff5f6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\">\\n                                      <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: center; border-right-color: rgb(224, 224, 224); border-right-style: solid; border-left-color: rgb(224, 224, 224); border-left-style: solid; border-top-color: rgb(224, 224, 224); border-top-style: solid; color: rgb(44, 44, 44); font-size: 18px; font-weight: bold; background-color: rgb(255, 255, 255); margin: 0px auto; padding: 0px 0px 50px; border-width: 1px 1px 0px; \\\"\\n                                        bgcolor=\\\"#fff\\\">\\n                                        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"height: 55px; text-align: left; margin: 0; padding: 0;\\\" align=\\\"left\\\">\\n                                              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; color: #2c2c2c; font-size: 18px; font-weight: bold; margin: 0; padding: 0; border: 0;\\\">\\n                                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                                    <td style=\\\"height: 55px; text-align: left; width: 50%; background-color: #7eced3; margin: 0; padding: 0 20px;\\\" align=\\\"left\\\" bgcolor=\\\"#7eced3\\\"><span style=\\\"margin: 0; padding: 0;\\\" xml=\\\"lang\\\">Account</span>\\n                                                    </td>\\n                                                  </tr>\\n                                                </tbody>\\n                                              </table>\\n                                            </td>\\n                                          </tr>\\n                                        </tbody>\\n                                      </table>\\n                                    </td>\\n                                  </tr>\\n                                </tbody>\\n                              </table>\\n      <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: left; border-right-color: rgb(224, 224, 224); border-right-style: solid; border-left-color: rgb(224, 224, 224); border-left-style: solid; border-top-color: rgb(224, 224, 224); border-top-style: solid; font-size: 18px; line-height: 22px; color: rgb(51, 51, 51); background-color: rgb(249, 248, 248); margin: 0px auto; padding: 0px 0px 50px; border-width: 1px 1px 0px; \\\"\\n                                bgcolor=\\\"#f9f8f8\\\">\\n                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                    <td style=\\\"width: 10px; border-left-style: solid; border-left-width: 10px; border-left-color: #7eced3; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                    <td style=\\\"margin: 0; padding: 18px 0;\\\">\\n                                      <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"font-size: 14px; color: rgb(102, 102, 102); margin: 0px; padding: 0px; \\\">Username: </td>\\n                                          </tr>\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"margin: 0; padding: 0;\\\">\\n                                              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                                    <td style=\\\"margin: 0; padding: 0;\\\">{{ this.username }}</td>\\n                                                  </tr>\\n                                                </tbody>\\n                                              </table>\\n                                            </td>\\n                                          </tr>\\n                                        </tbody>\\n                                      </table>\\n                                    </td>\\n                                    <td style=\\\"width: 20px; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                  </tr>\\n                                </tbody>\\n                              </table>                       \\n                              <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: left; border-right-color: rgb(224, 224, 224); border-right-style: solid; border-left-color: rgb(224, 224, 224); border-left-style: solid; border-top-color: rgb(224, 224, 224); border-top-style: solid; font-size: 18px; line-height: 22px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0px auto; padding: 0px 0px 50px; border-width: 1px 1px 0px; \\\"\\n                                bgcolor=\\\"#fff\\\">\\n                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                    <td style=\\\"width: 20px; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                    <td style=\\\"margin: 0; padding: 18px 0;\\\">\\n                                      <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"font-size: 14px; color: rgb(102, 102, 102); margin: 0px; padding: 0px; \\\">Name: </td>\\n                                          </tr>\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"margin: 0; padding: 0;\\\">\\n                                              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                                    <td style=\\\"margin: 0; padding: 0;\\\">{{ this.name }}</td>\\n                                                  </tr>\\n                                                </tbody>\\n                                              </table>\\n                                            </td>\\n                                          </tr>\\n                                        </tbody>\\n                                      </table>\\n                                    </td>\\n                                    <td style=\\\"width: 20px; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                  </tr>\\n                                </tbody>\\n                              </table>\\n                              <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: left; border-right-color: rgb(224, 224, 224); border-right-style: solid; border-left-color: rgb(224, 224, 224); border-left-style: solid; border-top-color: rgb(224, 224, 224); border-top-style: solid; font-size: 18px; line-height: 22px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0px auto; padding: 0px 0px 50px; border-width: 1px 1px 0px; \\\"\\n                                bgcolor=\\\"#fff\\\">\\n                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                    <td style=\\\"width: 20px; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                    <td style=\\\"margin: 0; padding: 18px 0;\\\">\\n                                      <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"font-size: 14px; color: rgb(102, 102, 102); margin: 0px; padding: 0px; \\\">Email: </td>\\n                                          </tr>\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"margin: 0; padding: 0;\\\">\\n                                              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                                    <td style=\\\"margin: 0; padding: 0;\\\">{{ this.email }}</td>\\n                                                  </tr>\\n                                                </tbody>\\n                                              </table>\\n                                            </td>\\n                                          </tr>\\n                                        </tbody>\\n                                      </table>\\n                                    </td>\\n                                    <td style=\\\"width: 20px; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                  </tr>\\n                                </tbody>\\n                              </table>\\n        <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: left; border-right-color: rgb(224, 224, 224); border-right-style: solid; border-left-color: rgb(224, 224, 224); border-left-style: solid; border-top-color: rgb(224, 224, 224); border-top-style: solid; font-size: 18px; line-height: 22px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0px auto; padding: 0px 0px 50px; border-width: 1px 1px 0px; \\\"\\n                                bgcolor=\\\"#fff\\\">\\n                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                    <td style=\\\"width: 20px; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                    <td style=\\\"margin: 0; padding: 18px 0;\\\">\\n                                      <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                        <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"font-size: 14px; color: rgb(102, 102, 102); margin: 0px; padding: 0px; \\\">Usertype: </td>\\n                                          </tr>\\n                                          <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                            <td style=\\\"margin: 0; padding: 0;\\\">\\n                                              <table style=\\\"border-collapse: collapse; border-spacing: 0 !important; width: 100%; font-size: 18px; line-height: 22px; color: #333; text-align: left; margin: 0; padding: 0; border: 0;\\\">\\n                                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                                  <tr style=\\\"margin: 0; padding: 0;\\\">\\n                                                    <td style=\\\"margin: 0; padding: 0;\\\">{{ this.utype }}</td>\\n                                                  </tr>\\n                                                </tbody>\\n                                              </table>\\n                                            </td>\\n                                          </tr>\\n                                        </tbody>\\n                                      </table>\\n                                    </td>\\n                                    <td style=\\\"width: 20px; margin: 0; padding: 0;\\\">&nbsp;</td>\\n                                  </tr>\\n                                </tbody>\\n                              </table>\\n                              <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: left; font-size: 18px; line-height: 22px; color: rgb(51, 51, 51); background-color: rgb(255, 255, 255); margin: 0px auto; padding: 0px 0px 50px; border: 1px solid rgb(224, 224, 224); \\\"\\n                                bgcolor=\\\"#fff\\\">\\n                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                  <tr style=\\\"background-color: #eff5f6; margin: 0; padding: 0;\\\" bgcolor=\\\"#EFF5F6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\">\\n                                      \\n                                    </td>\\n                                  </tr>\\n                                 \\n                                </tbody>\\n                              </table>\\n                              <table style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 600px; text-align: left; font-size: 18px; line-height: 20px; color: rgb(51, 51, 51); margin: 0px auto; padding: 0px 0px 50px; border: 0px solid rgb(224, 224, 224); \\\" bgcolor=\\\"#fff\\\">\\n                                <tbody style=\\\"margin: 0; padding: 0;\\\">\\n                                  <tr style=\\\"background-color: #eff5f6; margin: 0; padding: 0;\\\" bgcolor=\\\"#EFF5F6\\\">\\n                                    <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"20\\\">&nbsp;</td>\\n                                  </tr>\\n                                </tbody>\\n                              </table>\\n                            </td>\\n                            <td style=\\\"margin: 0; padding: 0;\\\">&nbsp;</td>\\n                          </tr>\\n                        </tbody>\\n                      </table>\\n                    </td>\\n                  </tr>\\n                </tbody>\\n              </table>\\n            </td>\\n          </tr>\\n          <tr style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n            <td style=\\\"margin: 0px; padding: 0px; border: none; \\\" bgcolor=\\\"transparent\\\">\\n              \\n            </td>\\n          </tr>\\n          <tr style=\\\"margin: 0px; padding: 0px; \\\" bgcolor=\\\"#EFF5F6\\\">\\n            <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"20\\\">&nbsp;</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n        <div>\\n          <meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\n          <table bgcolor=\\\"#EFF5F6\\\" style=\\\"border-collapse: collapse; border-spacing: 0px !important; width: 100%; min-width: 600px; font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif; font-size: 14px; line-height: 0px; text-align: center; background-color: rgb(239, 245, 246); margin: 0px; padding: 0px; border-width: 10px 0px 0px; \\\">\\n            <tbody>\\n              <tr style=\\\"margin: 0; padding: 0;\\\">\\n                <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"20\\\">&nbsp;</td>\\n              </tr>\\n              <tr style=\\\"margin: 0; padding: 0;\\\">\\n                <td style=\\\"margin: 0; padding: 0;\\\" height=\\\"20\\\">&nbsp;</td>\\n              </tr>\\n              <tr style=\\\"margin: 0; padding: 0;\\\">\\n                <td style=\\\"margin: 0; padding: 0;\\\" bgcolor=\\\"#E1E7E8\\\" height=\\\"8\\\">&nbsp;</td>\\n              </tr>\\n              <tr style=\\\"background-color: #e1e7e8; margin: 0; padding: 0;\\\" bgcolor=\\\"#E1E7E8\\\">\\n                <td style=\\\"margin: 0; padding: 0;\\\">\\n                  \\n                </td>\\n              </tr>\\n              <tr style=\\\"background-color: #e1e7e8; margin: 0; padding: 0;\\\" bgcolor=\\\"#E1E7E8\\\">\\n                <td style=\\\"margin: 0; padding: 0;\\\">&nbsp;</td>\\n              </tr>\\n        \\n            </tbody>\\n          </table>\\n          <br>\\n          <!-- / wrap table -->\\n         \\n        </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/emailverification/emailverification.component.html\n// module id = ./src/app/components/user/emailverification/emailverification.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-emailverification',\n  templateUrl: './emailverification.component.html',\n  styleUrls: ['./emailverification.component.css']\n})\nexport class EmailverificationComponent implements OnInit {\n  private sub: Subscription;\n  remarks: IMsconfigGroupList[];\n  csemail: IMsconfigGroupList;\n  username: string;\n  name: string;\n  email: string;\n  utype: string;\n  remarks1: String;\n  remarks2: String;\n  loading = false;\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private notifService: NotifService,\n              private msconfigService: MsconfigService,\n              private toastr: ToastrService,) \n              { }\n\n  ngOnInit() {\n    this.sub = this.route.queryParams.subscribe(\n      params => {\n        let hash = params['id'];\n        let postind = params['post'];\n        this.getMsconfigGroupList('REMARKS');\n        this.notifService.recvemailverification(hash)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            this.router.navigate(['login']);\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.username = data.message.username;\n            this.name = data.message.name;\n            this.email = data.message.email;\n            this.utype = data.message.usertype;\n            if (postind === 'Y') {\n              this.remarks1 = \"Your email has been verified.\";\n              this.remarks2 = \"If you have any queries, please send email to \";\n            } else {\n              this.remarks1 = this.getremarksvalue('REMARKS1');\n              this.remarks2 = this.getremarksvalue('REMARKS2');\n            }\n          }\n        });    \n      });\n    \n    this.getMsconfigVal('CSEML','EMAIL');\n    \n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.remarks = data.data;\n        } else {\n          this.remarks = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n    \n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.csemail = data.data[0];\n        } else {\n          this.csemail = {code:'', value:'Error ms config list'};\n        }\n      }\n    });\n  }\n  getremarksvalue(premarks) : String {\n    var result: String = '';\n\n    for (let oremark of this.remarks) {\n      if (premarks === oremark.code){\n        result = oremark.value;\n     }\n    }\n    return result;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/emailverification/emailverification.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.css\n// module id = ./src/app/components/user/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  \\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginUser(loginForm.value)\\\" class=\\\"form-signin\\\" novalidate autocomplete=\\\"off\\\">\\n      <h3>Please sign in</h3>\\n      <label for=\\\"inputUser\\\" class=\\\"sr-only\\\">Username</label>\\n      <input type=\\\"text\\\" id=\\\"inputUser\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" placeholder=\\\"Username\\\" autofocus>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('username').dirty && loginForm.get('username').invalid\\\">\\n          Please enter username\\n      </div>\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" placeholder=\\\"Password\\\">\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('password').dirty && loginForm.get('password').invalid\\\">\\n          Please enter password\\n      </div>\\n      <br><br>\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" >Sign in</button>\\n      <br>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 col-sm-6 col-xs-6\\\">Forgot Password</div>\\n          <div class=\\\"col-md-6 col-sm-6 col-xs-6\\\" style=\\\"text-align: right\\\"><a [routerLink]=\\\"['/register']\\\">Register</a></div>\\n      </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/login/login.component.html\n// module id = ./src/app/components/user/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n    username = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.authService.logout();\n  }\n  \n  loginForm: FormGroup = this.fb.group({\n    username: this.username,\n    password: this.password,\n  });\n\n  loginUser(formdata:any): void {\n    if (this.loginForm.dirty && this.loginForm.valid) {\n      this.authService.login(this.loginForm.value)\n        .subscribe(data => {\n          if (data.json().success === false) {\n            this.toastr.error(data.json().message);\n          } else {\n            this.toastr.success('Login successful.');\n            this.router.navigate(['report']);\n          }\n          this.loginForm.reset();\n        });\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/login/login.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  template: ''\n})\n\nexport class LogoutComponent implements OnInit {\n  \n    constructor(private authService: AuthService,\n        private router: Router,\n        private toastr: ToastrService) { \n    }\n\n    ngOnInit(){\n        this.authService.logout();\n        this.toastr.success('You have been logged out.');\n        this.router.navigate(['login']);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/logout.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/password/password.component.css\n// module id = ./src/app/components/user/password/password.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>Change Password</h1>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"updatePassword(passwordForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('oldpassword').invalid && passwordForm.get('oldpassword').dirty}\\\">\\n            <label for=\\\"oldpassword\\\" class=\\\"col-sm-2 control-label\\\">Existing Password</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-lock\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"oldpassword\\\" [formControl]=\\\"oldpassword\\\" placeholder=\\\"Existing Password\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"passwordForm.get('oldpassword').dirty && passwordForm.get('oldpassword').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('oldpassword').errors.required\\\">\\n                    Please enter existing password\\n                </span>\\n            </div>\\n        </div>\\n  \\n        <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup').errors }\\\">\\n  \\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.password').invalid && passwordForm.get('passwordGroup.password').dirty}\\\">\\n                <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">New Password</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [formControl]=\\\"password\\\" placeholder=\\\"New Pasword\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\"  *ngIf=\\\"passwordForm.get('passwordGroup.password').dirty && passwordForm.get('passwordGroup.password').errors\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.required\\\">\\n                        Please enter password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.pattern\\\">\\n                        Password must be minimum 6 and maximum 12 characters AND contain one letter, number & special characters\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.retypepass').invalid && passwordForm.get('passwordGroup.retypepass').dirty}\\\">\\n                <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\">Retype Password <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"(passwordForm.get('passwordGroup.retypepass').touched || passwordForm.get('passwordGroup.retypepass').dirty) && (passwordForm.get('passwordGroup.retypepass').errors || passwordForm.get('passwordGroup').errors)\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                        Please confirm your password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                        Password do not match\\n                    </span>\\n                </div>\\n            </div>\\n  \\n        </div>\\n    \\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"passwordForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n  \\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/password/password.component.html\n// module id = ./src/app/components/user/password/password.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent implements OnInit {\n\n  passwordForm: FormGroup;\n  userObj: any;\n  loading = false;\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n    oldpassword = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n    retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.passwordForm = this.fb.group({\n      oldpassword: this.oldpassword,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n  \n  updatePassword(formdata:any): void {\n    if (this.passwordForm.dirty && this.passwordForm.valid) {\n      let theForm = this.passwordForm.value;\n      const thePass = this.passwordForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n      this.loading = true;\n      this.userService.updatePassword(this.userObj.userid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n          }\n          this.passwordForm.reset();\n      });\n    }\n  }\n  onBack(): void {\n    this.router.navigate(['/report']);\n  }\n}\n\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n  let passwordControl = c.get('password');\n  let confirmControl = c.get('retypepass');\n\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n      return null;\n  }\n  return { 'mismatchedPassword': true };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/password/password.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/postregistered/postregistered.component.css\n// module id = ./src/app/components/user/postregistered/postregistered.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Confirmation</h3>\\n  </div>\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"../../../cassetteicon.png\\\">\\n    <h4>Thank You</h4>\\n\\n    Label User: {{ this.uname }} <br>\\n    email : {{ this.qemailto }} <br>\\n    <br>\\n    <div class=\\\"alert alert-success\\\" *ngIf=\\\"this.uname != 'err'\\\">\\n      <!-- status:PENDING APPROVAL <br> -->\\n      {{ this.getremarksvalue('REMARKS3') }} <br>\\n      <!-- {{ this.remarks[1].value }} {{ this.csemail.value }}. -->\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"this.uname == 'err'\\\">\\n      Oops, Sorry.. {{ this.getremarksvalue('REMARKS4') }}.\\n    </div>    \\n    <br>\\n    <div class=\\\"col-sm-10\\\">\\n        <button type=\\\"button\\\" (click)=\\\"onLogin()\\\" class=\\\"btn btn-info\\\">Back to Login</button>\\n    </div>  \\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/postregistered/postregistered.component.html\n// module id = ./src/app/components/user/postregistered/postregistered.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { MsconfigService } from '../../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../../interface/msconfig';\n\n@Component({\n  selector: 'app-postregistered',\n  templateUrl: './postregistered.component.html',\n  styleUrls: ['./postregistered.component.css']\n})\nexport class PostregisteredComponent implements OnInit {\n  private sub: Subscription;\n  uname: String;\n  remarks: IMsconfigGroupList[];\n  csemail: IMsconfigGroupList;\n  qemailto: String;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private msconfigService: MsconfigService\n              ) { }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(\n      params => {\n        let param = params['nm'];\n        let strlist = param.split(\"?\");\n        this.uname = strlist[0];\n        this.qemailto = strlist[1];\n      });\n    this.getMsconfigGroupList('REMARKS');\n    this.getMsconfigVal('CSEML','EMAIL');\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.remarks = data.data;\n        } else {\n          this.remarks = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n    \n  }\n  getMsconfigVal(code, groupid){\n    this.msconfigService.getMsconfigvalue(code, groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.csemail = data.data[0];\n        } else {\n          this.csemail = {code:'', value:'Error ms config list'};\n        }\n      }\n    });\n  }\n  getremarksvalue(premarks) : String {\n    var result: String = '';\n\n    for (let oremark of this.remarks) {\n      if (premarks === oremark.code){\n        result = oremark.value;\n     }\n    }\n    return result;\n  }\n\n  onLogin(): void {\n    this.router.navigate(['/login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/postregistered/postregistered.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.css\n// module id = ./src/app/components/user/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>My Profile</h1>\\n    </div>\\n    <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n    <div class=\\\"clearfix\\\">\\n      <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUser(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.username }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('name').invalid && profileForm.get('name').dirty}\\\">\\n              <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [formControl]=\\\"name\\\" placeholder=\\\"Name\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('name').dirty && profileForm.get('name').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} name</span>\\n              </div>\\n          </div>\\n<!--           <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('email').invalid && profileForm.get('email').dirty}\\\">\\n              <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\">@</div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [formControl]=\\\"email\\\" placeholder=\\\"Email\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('email').dirty && profileForm.get('email').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter a valid email</span>\\n              </div>\\n          </div> -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">@</div>\\n                <div class=\\\"form-ele\\\">{{ userObj.email }}</div>\\n            </div>\\n            <div class=\\\"text-warning\\\" *ngIf=\\\"authService.currentUser.verified_email == 'N'\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Email is not verified yet. Please verify by clicking <a style=\\\"cursor:pointer\\\" (click)=\\\"verifyEmail(userObj.username, userObj.name, userObj.email)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Verify\\\">HERE</a> !</span>\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('contactno').invalid && profileForm.get('contactno').dirty}\\\">\\n              <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactno\\\" [formControl]=\\\"contactno\\\" placeholder=\\\"Contact No\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('contactno').dirty && profileForm.get('contactno').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Contact Number</span>\\n              </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('bankaccno').invalid && profileForm.get('bankaccno').dirty}\\\">\\n              <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankaccno\\\" [formControl]=\\\"bankaccno\\\" placeholder=\\\"Bank Account No\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('bankaccno').dirty && profileForm.get('bankaccno').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Bank Account Number</span>\\n              </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\">\\n            <label for=\\\"bankcode\\\" class=\\\"col-sm-2 control-label\\\">Bank Code</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-bitcoin\\\"></i></div>\\n                <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankcode\\\" id=\\\"bankcode\\\" placeholder=\\\"Bank Code\\\">\\n            </div>\\n          </div>\\n          <div *ngIf=\\\"authService.isLoggedIn() && authService.currentUser.usertype == 'LBL'\\\" class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('bankname').invalid && profileForm.get('bankname').dirty}\\\">\\n              <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankname\\\" [formControl]=\\\"bankname\\\" placeholder=\\\"Bank Name\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('bankname').dirty && profileForm.get('bankname').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Bank Name</span>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"usertype\\\" class=\\\"col-sm-2 control-label\\\">User Type</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.usertype }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"lastlogin\\\" class=\\\"col-sm-2 control-label\\\">Last Login</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-calendar\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.lastlogin | date:'medium' }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-sm-2 control-label\\\"></label>\\n              <div class=\\\"col-sm-10\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"profileForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                  <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Cancel</button>\\n              </div>\\n          </div>\\n      </form>                \\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/profile/profile.component.html\n// module id = ./src/app/components/user/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\nimport { MatDialog } from '@angular/material';\nimport { KxInfoDialogComponent } from '../../kx-info-dialog/kx-info-dialog.component';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  profileForm: FormGroup\n  userObj: any;\n  user: IUser;\n  loading = false;\n//  dialogResult = \"\";\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private notifService: NotifService,\n    private router: Router,\n    private toastr: ToastrService,\n    private dialog: MatDialog) { }\n\n  name = new FormControl('', [Validators.required]);\n  //email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankcode = new FormControl('', [Validators.nullValidator]);\n  bankname = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.profileForm = this.fb.group({\n      name: this.name,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankcode: this.bankcode,\n      bankname: this.bankname\n    });\n\n    this.userService.getUser(this.userObj.userid).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.populateForm(this.user);\n      }\n    });    \n  }\n\n  populateForm(data): void {\n    this.profileForm.patchValue({\n      name: data.name,\n      //email: data.email,\n      contactno: data.contactno,\n      bankaccno: data.bankaccno,\n      bankcode: data.bankcode,\n      bankname: data.bankname\n    });\n  }\n\n  updateUser(formdata:any): void {\n    if (this.profileForm.dirty && this.profileForm.valid) {\n        this.loading = true;\n        this.userService.updateUser(this.userObj.userid, this.profileForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n            let theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n            theUser.user.name = this.profileForm.value.name;\n            localStorage.setItem('currentUser', JSON.stringify(theUser));\n          }\n        });\n      }\n    }\n\n    verifyEmail(username, name, email) {\n      let payload: any = {};\n      payload.email = email;\n      payload.name = name;\n      payload.username = username;\n      this.loading = true;\n      this.userService.emailVerify(payload)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          this.toastr.error(data.message);\n        } else {\n          const nm = data.name;\n          let payload1: any = {};\n          payload1.emailto = email;\n          payload1.vlink = data.vlink;\n          this.notifService.sendemailverification(payload1)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n                disableClose: true,\n                width: '400px',\n                data: 'Hi ' + name + ', We are sorry to inform that the email verification failed to be sent to ' + email + '. Please try again in few minutes.'\n              });\n              //below code is to get result from modal dialog\n        /*       dialogRef.afterClosed().subscribe(result => {\n                console.log(`Dialog closed: ${result}`);\n                this.dialogResult = result;\n              }); */\n            } else {\n              this.loading = false;\n              let dialogRef = this.dialog.open(KxInfoDialogComponent, {\n                disableClose: true,\n                width: '400px',\n                data: 'Hi ' + name + ', email verification has been sent to ' + email + '. Please follow the instruction in the email.'\n              });\n            }\n          });    \n        }\n      });\n    }\n\n    onBack(): void {\n      this.router.navigate(['/report']);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/profile/profile.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.css\n// module id = ./src/app/components/user/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Register Label</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser(registerForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('name').invalid && registerForm.get('name').dirty}\\\">\\n          <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Label Name <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Label Name\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('name').dirty && registerForm.get('name').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('name').errors.required\\\">\\n                  Please enter your label name\\n              </span>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('email').invalid && registerForm.get('email').dirty}\\\">\\n          <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\">@</div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('email').invalid\\\">\\n                  Please enter a valid email\\n              </span>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('contactno').invalid && registerForm.get('contactno').dirty}\\\">\\n        <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-earphone\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"contactno\\\" id=\\\"contactno\\\" placeholder=\\\"Contact No\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('contactno').dirty && registerForm.get('contactno').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('contactno').errors.required\\\">\\n                Please enter your contact no\\n            </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('bankaccno').invalid && registerForm.get('bankaccno').dirty}\\\">\\n        <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-bitcoin\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankaccno\\\" id=\\\"bankaccno\\\" placeholder=\\\"Bank Account No\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('bankaccno').dirty && registerForm.get('bankaccno').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('bankaccno').errors.required\\\">\\n                Please enter your bank account no\\n            </span>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"bankcode\\\" class=\\\"col-sm-2 control-label\\\">Bank Code</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-bitcoin\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankcode\\\" id=\\\"bankcode\\\" placeholder=\\\"Bank Code\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('bankname').invalid && registerForm.get('bankname').dirty}\\\">\\n        <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-bitcoin\\\"></i></div>\\n            <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankname\\\" id=\\\"bankname\\\" placeholder=\\\"Bank Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('bankname').dirty && registerForm.get('bankname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('bankname').errors.required\\\">\\n                Please enter your bank name\\n            </span>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"usertype\\\" class=\\\"col-sm-2 control-label\\\">Usertype</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n            <div class=\\\"form-ele\\\">{{ this.usertype.value }}</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('username').invalid && registerForm.get('username').dirty}\\\">\\n          <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('username').dirty && registerForm.get('username').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.required\\\">\\n                  Please enter username\\n              </span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.minlength\\\">\\n                  Username must be longer than 3 characters.\\n              </span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.maxlength\\\">\\n                  Username cannot be longer than 16 characters.\\n              </span>\\n          </div>\\n      </div>\\n\\n       <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup').errors }\\\">\\n           \\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.password').invalid && registerForm.get('passwordGroup.password').dirty}\\\">\\n              <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">Password <sup>*</sup></label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Pasword\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\"  *ngIf=\\\"registerForm.get('passwordGroup.password').dirty && registerForm.get('passwordGroup.password').errors\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.required\\\">\\n                      Please enter password\\n                  </span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.pattern\\\">\\n                      Password must be minimum 6 and maximum 12 characters AND contain one letter, number & special characters\\n                  </span>\\n              </div>\\n          \\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.retypepass').invalid && registerForm.get('passwordGroup.retypepass').dirty}\\\">\\n              <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\">Retype Password <sup>*</sup></label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                  <input [disabled]=\\\"this.loading == true\\\" type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"(registerForm.get('passwordGroup.retypepass').touched || registerForm.get('passwordGroup.retypepass').dirty) && (registerForm.get('passwordGroup.retypepass').errors || registerForm.get('passwordGroup').errors)\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                      Please confirm your password\\n                  </span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                      Password do not match\\n                  </span>\\n              </div>\\n          </div>\\n       </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\"></label>\\n          <div class=\\\"col-sm-5\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n              <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\">Reset</button>\\n          </div>\\n          <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n              <sup>*</sup> required\\n          </div>\\n      </div>\\n  </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/register/register.component.html\n// module id = ./src/app/components/user/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { NotifService } from '../../../services/notif.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private userService: UserService,\n    private notifService: NotifService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  \n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankcode = new FormControl('', [Validators.nullValidator]);\n  bankname = new FormControl('', [Validators.required]);\n  usertype = new FormControl('LBL', [Validators.required]);\n  username = new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]);\n  password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n  retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      name: this.name,\n      email: this.email,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankcode: this.bankcode,\n      bankname: this.bankname,\n      usertype: this.usertype,\n      username: this.username,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n  registerUser(formdata:any): void {\n    if (this.registerForm.dirty && this.registerForm.valid) {\n      let theForm = this.registerForm.value;      \n      const thePass = this.registerForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n      this.loading = true;\n      this.userService.register(theForm)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.loading = false;\n          this.toastr.error(data.message);\n        } else {\n          //this.toastr.success(data.message);\n          //this.loading = false;\n          const nm = data.name;\n          let payload: any = {};\n          payload.emailto = theForm.email;\n          payload.vlink = data.vlink;\n          this.notifService.sendemailverification(payload)\n          .subscribe(data => {\n            if (data.success === false) {\n              this.loading = false;\n              this.router.navigate([`postregistered/err?${theForm.email}`]);\n            } else {\n              this.loading = false;\n              this.router.navigate([`postregistered/${nm}?${theForm.email}`]);\n            }\n          });    \n        }\n        this.registerForm.reset();\n      });\n\n    }\n  }\n}\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n  let passwordControl = c.get('password');\n  let confirmControl = c.get('retypepass');\n\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n      return null;\n  }\n  return { 'mismatchedPassword': true };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/register/register.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/updateemail/updateemail.component.css\n// module id = ./src/app/components/user/updateemail/updateemail.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Change email</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div class=\\\"clearfix\\\">\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateEmail(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"oldemail\\\" class=\\\"col-sm-2 control-label\\\">Existing Email</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\">@</div>\\n                <div class=\\\"form-ele\\\">{{ userObj.email }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('email').invalid && profileForm.get('email').dirty}\\\">\\n          <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">New Email</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\">@</div>\\n              <input [disabled]=\\\"this.loading == true\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [formControl]=\\\"email\\\" placeholder=\\\"New Email\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\"  *ngIf=\\\"profileForm.get('email').dirty && profileForm.get('email').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">\\n                  Please enter email\\n              </span>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"profileForm.invalid || this.loading == true\\\" class=\\\"btn btn-primary\\\">Update</button>\\n              <button type=\\\"reset\\\" [disabled]=\\\"this.loading == true\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Cancel</button>\\n          </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/updateemail/updateemail.component.html\n// module id = ./src/app/components/user/updateemail/updateemail.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\n\n@Component({\n  selector: 'app-updateemail',\n  templateUrl: './updateemail.component.html',\n  styleUrls: ['./updateemail.component.css']\n})\nexport class UpdateemailComponent implements OnInit {\n  profileForm: FormGroup\n  userObj: any;\n  user: IUser;\n  loading = false;\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  email = new FormControl('', [Validators.email]);\n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.profileForm = this.fb.group({\n      email: this.email\n    });\n  }\n\n  updateEmail(formdata:any): void {\n    if (this.profileForm.dirty && this.profileForm.valid) {\n        this.loading = true;\n        this.userService.updateEmail(this.userObj.userid, this.profileForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.toastr.success(data.message);\n            let theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n            theUser.user.email = this.profileForm.value.email;\n            localStorage.setItem('currentUser', JSON.stringify(theUser));\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/report']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/updateemail/updateemail.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/usermgt.component.css\n// module id = ./src/app/components/usermgt/usermgt.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>LABEL MANAGEMENT</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div *ngIf=\\\"this.loading == false\\\" class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                  <label for=\\\"username\\\">User Name</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [formControl]=\\\"username\\\" placeholder=\\\"User Name\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                <label for=\\\"name\\\">Label Name</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [formControl]=\\\"name\\\" placeholder=\\\"Label Name\\\">\\n                </div>\\n              </div>\\n          </div><br>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"status\\\">Status</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option value=\\\"\\\">Select the status</option>\\n                            <option *ngFor=\\\"let a of sts\\\" [ngValue]=\\\"a.code\\\">{{a.value}}</option>\\n                      </select>\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                    <label for=\\\"veremail\\\">Email Verified?</label>\\n                    <div class=\\\"input-group col-sm-10\\\">\\n                        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                        <select class=\\\"form-control\\\" [formControl]=\\\"veremail\\\">\\n                              <option value=\\\"\\\">Select the option</option>\\n                              <option *ngFor=\\\"let b of yn\\\" [ngValue]=\\\"b.code\\\">{{b.value}}</option>\\n                        </select>\\n                    </div>\\n                </div><br>\\n              <div class=\\\"col-sm-12 col-md-2\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n              </div>                  \\n          </div>\\n      </form>\\n    </div>\\n  </div>  \\n\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"labellist && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No LABELS found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            No Labels found from above criterias.\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"labellist && totalrows > 0 && this.loading == false\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n                <div class=\\\"table-responsive\\\"> \\n                        <table class=\\\"table table-striped\\\">\\n                            <thead>\\n                                    <tr>\\n                                        <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('username')\\\">User Name</a></th>\\n                                        <th width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('name')\\\">Label Name</a></th>\\n                                        <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('email')\\\">Email</a></th>\\n                                        <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('verified_email')\\\">Email Verified?</a></th>\\n                                        <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortLabel('status')\\\">Status</a></th>\\n                                        <th width=\\\"20%\\\">Action</th>\\n                                    </tr>\\n                                </thead>\\n                                <tbody>\\n                                    <tr *ngFor='let lbl of labellist; let lblIndex = index'>\\n                                        <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showLabel(lbl._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ lbl.username}}</a></td>\\n                                        <td>{{ lbl.name}}</td>\\n                                        <td>{{ lbl.email}}</td>\\n                                        <td>{{ lbl.verified_email }}</td>\\n                                        <td>{{ lbl.stsvalue}}</td>\\n                                        <td>\\n                                            <button type=\\\"button\\\" class=\\\"btn-xs btn-success\\\" aria-label=\\\"Activate\\\" (click)=\\\"activateLabel(lbl._id, lbl.name, lbl.status)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Activate Label\\\">\\n                                                <span class=\\\"glyphicon glyphicon-ok\\\" aria-hidden=\\\"true\\\"></span>\\n                                            </button>\\n                                            <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Deactivate\\\" (click)=\\\"deactivateLabel(lbl._id, lbl.name, lbl.status)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Deactivate Label\\\">\\n                                                <span class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></span>\\n                                            </button>\\n                                        </td>\\n                                    </tr>     \\n                                </tbody>    \\n                        </table>\\n                </div>\\n                <div style=\\\"text-align:center\\\" *ngIf=\\\"labellist && totalrows > 10\\\">\\n                        <nav aria-label=\\\"Page navigation\\\">\\n                            <ul class=\\\"pagination\\\">\\n                                <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                    <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                                </li>\\n                            </ul>\\n                        </nav>\\n                </div> \\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/usermgt.component.html\n// module id = ./src/app/components/usermgt/usermgt.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service';\nimport { AuthService } from '../../services/auth.service';\nimport { UsermgtService } from '../../services/admin/usermgt.service';\nimport { IUser } from '../../interface/user';\nimport { MsconfigService } from '../../services/admin/msconfig.service';\nimport { IMsconfigGroupList } from '../../interface/msconfig';\n\n@Component({\n  selector: 'app-usermgt',\n  templateUrl: './usermgt.component.html',\n  styleUrls: ['./usermgt.component.css']\n})\nexport class UsermgtComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  labellist: IUser[];\n  totalrows: number;\n  pgCounter: number;\n  qlabelname: String;\n  qusername: String;\n  qstatus: String;\n  qveremail: String;\n  qpage: number;\n  qsort: String;\n  sts: IMsconfigGroupList[];\n  yn:IMsconfigGroupList[];\n  loading = false;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private labelmgtService: UsermgtService,\n    private msconfigService: MsconfigService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  name = new FormControl('',[Validators.nullValidator]);\n  username = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('', [Validators.nullValidator]);\n  veremail = new FormControl('', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      name: this.name,\n      username: this.username,\n      status: this.status,\n      veremail: this.veremail\n    });\n    this.getMsconfigGroupList('STATUS');\n    this.getMsconfigGroupList('YRN');\n    this.route.queryParams.forEach((params: Params) => {\n      this.qlabelname = params['name'] || '';\n      this.qusername = params['username'] || '';\n      this.qstatus = params['status'] || '';\n      this.qveremail = params['veremail'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.name = this.qlabelname;\n      payload.username = this.qusername;\n      payload.veremail = this.qveremail;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n\n      this.reportForm.patchValue({\n        name: this.qlabelname,\n        username: this.qusername,\n        status: this.qstatus,\n        veremail: this.qveremail\n      });\n    })\n  }\n\n  getMsconfigGroupList(groupid){\n    this.msconfigService.getMsconfigbygroup(groupid).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          if (groupid == 'STATUS') {\n            this.sts = data.data;\n          }\n          if (groupid == 'YRN') {\n            this.yn = data.data;\n          } \n          \n        } else {\n          this.sts = [{code:'', value:'Error ms config list'}];\n          this.yn = [{code:'', value:'Error ms config list'}];\n        }\n      }\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        //this.fetchReport(this.userObj.userid, this.reportForm.value);\n        this.router.navigate(['usermanagement'],\n        {\n          queryParams: {\n            name: this.reportForm.value.name,\n            username: this.reportForm.value.username,\n            status: this.reportForm.value.status,\n            veremail: this.reportForm.value.veremail,\n            page: 1, \n            sortby: null }\n        }\n      );\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.loading = true;\n    this.labelmgtService.getUserLabels(formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.loading = false;\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.loading = false;\n        this.labellist = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n\n        this.qlabelname = formval.name;\n        this.qusername = formval.username;\n        this.qstatus = formval.status;\n        this.qveremail = formval.veremail;\n        this.reportTitle = 'Labels Result';\n        \n        this.reportForm.patchValue({\n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail\n        });\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['usermanagement'],\n      {\n        queryParams: {\n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortLabel(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['usermanagement'],\n      {\n        queryParams: { \n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  activateLabel(userid: string, labelname: string, status: string) {\n\n    this.loading = true;\n    if (status == 'STSACT') {\n      this.loading = false;\n      this.toastr.warning('The label is already active.');\n    } else {\n      if(confirm('Do you really want to activate this label: ' + labelname + ' record?')){\n        let payloadData: any = {};\n        payloadData.status = 'STSACT';\n        this.labelmgtService.updateLabelStatus(userid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.userObj.userid, this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n  }\n\n  deactivateLabel(userid: string, labelname: string, status: string) {\n    \n    this.loading = true;\n    if (status != 'STSACT') {\n      this.loading = false;\n      this.toastr.warning('The label is already NOT active.');\n    } else {\n      if(confirm('Do you really want to deactivate this label: ' + labelname + ' record?')){\n        let payloadData: any = {};\n        payloadData.status = 'STSINACT';\n        this.labelmgtService.updateLabelStatus(userid, payloadData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.loading = false;\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.loading = false;\n            this.fetchReport(this.userObj.userid, this.reportForm.value);\n            this.toastr.success(data.message);\n          }\n        });\n      } else {\n        this.loading = false;\n      }\n    }\n  }\n  \n  showLabel(userid): void {\n    this.router.navigate([`viewlabel/${userid}`],\n      {\n        queryParams: { \n          name: this.qlabelname,\n          username: this.qusername,\n          status: this.qstatus,\n          veremail: this.qveremail,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usermgt/usermgt.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/viewlabel/viewlabel.component.css\n// module id = ./src/app/components/usermgt/viewlabel/viewlabel.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>LABEL DETAILS</h3>\\n  </div>\\n  <ngx-loading [show]=\\\"loading\\\" [config]=\\\"{ backdropBorderRadius: '14px' }\\\"></ngx-loading>\\n  <div class=\\\"clearfix\\\">\\n    <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUser(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.username }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.name }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">@</div>\\n                <div class=\\\"form-ele\\\">{{ user.email }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.contactno }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.bankaccno }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.bankname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"lastlogin\\\" class=\\\"col-sm-2 control-label\\\">Last Login</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-calendar\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ user.lastlogin | date:'medium' }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"balance\\\" class=\\\"col-sm-2 control-label\\\">Balance</label>\\n            <div class=\\\"input-group col-sm-6\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <div class=\\\"form-ele\\\">{{ user.balance }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">       </label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>                \\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/usermgt/viewlabel/viewlabel.component.html\n// module id = ./src/app/components/usermgt/viewlabel/viewlabel.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\n\n@Component({\n  selector: 'app-viewlabel',\n  templateUrl: './viewlabel.component.html',\n  styleUrls: ['./viewlabel.component.css']\n})\nexport class ViewlabelComponent implements OnInit {\n  profileForm: FormGroup\n  user: IUser;\n  loading = false;\n  private sub: Subscription;\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankname = new FormControl('', [Validators.required]);\n  lastlogin = new FormControl('', [Validators.required]);\n  balance = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(\n      params => {\n        let labelid = params['id'];\n        this.getLabel(labelid);\n      });\n    this.profileForm = this.fb.group({\n      name: this.name,\n      email: this.email,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankname: this.bankname,\n      lastlogin: this.lastlogin,\n      balance: this.balance\n    });\n  }\n  \n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getLabel(id){\n    this.userService.getUser(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.populateForm(this.user);\n      }\n    });   \n  }\n\n  populateForm(data): void {\n    this.profileForm.patchValue({\n      name: data.name,\n      email: data.email,\n      contactno: data.contactno,\n      bankaccno: data.bankaccno,\n      bankname: data.bankname,\n      lastlogin: this.lastlogin,\n      balance: this.balance\n    });\n  }\n  onBack(): void {\n    this.router.navigate(['../usermanagement'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/usermgt/viewlabel/viewlabel.component.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivate } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\nimport { ToastrService } from '../common/toastr.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n        private router: Router,\n        private toastr: ToastrService) { }\n    \n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n        return this.checkLoggedIn(state.url);\n    }\n\n    checkLoggedIn(url: string): boolean {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        }\n\n        this.toastr.info(\"Please login to access this page.\")\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class MsconfigService {\n  public jwtToken: string;\n  public adminurl: String;\n\n  constructor(private http: Http, private globals: Globals) {\n      this.adminurl = globals.adminurl;\n      const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      if (theUser) {\n        this.jwtToken = theUser.token;\n      }            \n   }\n\n  uploadGenrephoto(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(`${this.adminurl}/api/genrephotoupload`, oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  \n  deleteGenrephoto(oGenre){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(`${this.adminurl}/api/genrephotodelete`, oGenre, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  saveMsconfig(userid, oMsconfig){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/msconfig/${userid}`, JSON.stringify(oMsconfig), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteMsconfig(msconfigid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`${this.adminurl}/api/msconfig/${msconfigid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateMsconfigfile(userid, oMsconfig){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/msconfig/${userid}`, JSON.stringify(oMsconfig), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggMsconfig(oMsconfig) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/mscfgaggreport`, JSON.stringify(oMsconfig), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfigAgg(msconfigid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/msconfigagg/${msconfigid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfig(msconfigid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/msconfig/${msconfigid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfigbygroup(msconfiggroup) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/msconfigbygroup/${msconfiggroup}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getMsconfigvalue(msconfigcode, msconfiggroup) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/msconfigvalue/${msconfigcode}?group=${msconfiggroup}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  getMsconfiggroup() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/msconfiggroup`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/admin/msconfig.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class SongadminService {\n  public jwtToken: string;\n  public adminurl: String;\n  \n  constructor(private http: Http, private globals: Globals) {\n      this.adminurl = globals.adminurl;\n      const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      if (theUser) {\n        this.jwtToken = theUser.token;\n      }        \n   }\n  \n  publishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/publishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  cancelpublishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/cancelpublishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  getAggSongs(oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/songadm/aggreport`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/songadm/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongAgg(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/songaggregate/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/admin/songadmin.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class UsermgtService {\n  public jwtToken: string;\n  public adminurl: String;\n\n  constructor(private http: Http, private globals: Globals) {\n      this.adminurl = globals.adminurl;\n      const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      if (theUser) {\n        this.jwtToken = theUser.token;\n      }    \n   }\n\n   registerAdmin(oUser) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post(`${this.adminurl}/registerAdmin`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  } \n\n  getUserLabels(oLabels) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`${this.adminurl}/api/userlabelreport`, JSON.stringify(oLabels), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateLabelStatus(labelid, oLabel){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/changelabelstatus/${labelid}`, JSON.stringify(oLabel), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateLabelBalance(labelid, oLabel){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`${this.adminurl}/api/changelabelbalance/${labelid}`, JSON.stringify(oLabel), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getLabelList() {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`${this.adminurl}/api/labellist`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/admin/usermgt.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class AlbumService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  uploadAlbumphoto(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post('api/albumphotoupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  saveAlbum(userid, artistid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/${userid}?artistid=${artistid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateAlbumphoto(albumid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updatealbumphoto/${albumid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteAlbumPhoto(oAlbum){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('api/albumphotodelete', oAlbum, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/report/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtistAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/artistalbumreport/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/album/aggreport/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbum(albumid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/album/${albumid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbumList(userid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/albumlist/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbumListbyArtist(userid,artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/albumlistbyartist/${userid}?artistid=${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteAlbum(albumid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`api/album/${albumid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/album.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class ArtistService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  uploadArtistphoto(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    //console.log(oFile.getAll('artistimage'));\n    return this.http.post('api/artistphotoupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  saveArtist(userid, oArtist){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artist/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateArtistphoto(artistid, oArtist){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updateartistphoto/${artistid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteArtistPhoto(oArtist){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('api/artistphotodelete', oArtist, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtists(userid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artist/report/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggArtists(userid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/artist/aggreport/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtist(artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/artist/${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtistList(userid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/artistlist/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteArtist(artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`api/artist/${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/artist.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nimport { IUser } from '../interface/user';\n\n@Injectable()\nexport class AuthService {\n\n  public currentUser: IUser;\n  \n  constructor(private http: Http) { }\n\n  isLoggedIn(): boolean {\n    try {\n        const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n        if (theUser) {\n            this.currentUser = theUser.user;\n        }\n    } catch (e) {\n        return false;\n    }\n    return !!this.currentUser;\n  }\n\n  login(oUser) {\n    let headers = new Headers({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n\n    return this.http.post('api/login', JSON.stringify(oUser), options)\n    .do((response: Response) => {\n        if (response.json().success) {\n            this.currentUser = <IUser>response.json().message;\n            let userObj: any = {};\n            userObj.user = response.json().message;\n            userObj.token = response.json().token;\n\n            localStorage.setItem('currentUser', JSON.stringify(userObj)); \n        }\n        response.json();\n    })\n    .catch(this.handleError);\n  }\n\n  logout(): void {\n    this.currentUser = null;\n    localStorage.removeItem('currentUser');\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Globals } from '../app.global';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class NotifService {\n  public jwtToken: string;\n  public notifurl: String;\n\n  constructor(private http: Http, private globals: Globals) { \n    this.notifurl = globals.notifurl;\n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {  \n      this.jwtToken = theUser.token;\n    }    \n  }\n\n  sendemailverification(oLink) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post(`${this.notifurl}/sendverification`,JSON.stringify(oLink), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  recvemailverification(hash) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.get(`${this.notifurl}/verify?id=${hash}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/notif.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class SongService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  uploadSongPreview(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    \n    return this.http.post('api/songprvwupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  uploadSongFile(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    \n    return this.http.post('api/songfileupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  deleteSongPreview(oSong){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('api/songprvwdelete', oSong, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteSongFile(oSong){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('api/songfiledelete', oSong, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  saveSong(userid, artistid, albumid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/${userid}?artistid=${artistid}&albumid=${albumid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  publishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/publishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  cancelPublishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/cancelpublishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateSongPreview(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updatesongpreview/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  updateSongFile(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/updatesongfile/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/song/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongAgg(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`api/songaggregate/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`api/song/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggSongs(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/aggreport/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongs(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/report/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongList(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`api/song/list/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  \n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/song.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class UserService {\n  public jwtToken: string;\n\n  constructor(private http: Http) {\n      const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      if (theUser) {  \n        this.jwtToken = theUser.token;\n      }    \n  }\n\n/*   uploadpreview(oFile){\n    console.log(oFile.getAll('usrimage'));\n    return this.http.post('http://localhost:2000/flupload', oFile)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n */\n  register(oUser) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post('register', JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getUser(userid) {\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.get(`api/user/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateUser(userid, oUser){\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.put(`api/user/${userid}`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n/*   updatePhoto(userid, oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/editphoto/${userid}`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n \n  deletePhoto(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post('http://localhost:2000/api/delphoto', JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n*/\n\n  updatePassword(userid, oUser){\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.put(`api/password/${userid}`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateEmail(userid, oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/email/${userid}`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n  \n  emailVerify(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`api/emailverify`, JSON.stringify(oUser), options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n      console.error(error);\n      return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}