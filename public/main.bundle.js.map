{"version":3,"sources":["/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/$_gendir lazy","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.module.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/common/toastr.service.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/about/about.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/about/about.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/about/about.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/addalbum/addalbum.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/addalbum/addalbum.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/addalbum/addalbum.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbum/editalbum.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbum/editalbum.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbum/editalbum.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbumphoto/editalbumphoto.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbumphoto/editalbumphoto.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbumphoto/editalbumphoto.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/listalbum/listalbum.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/listalbum/listalbum.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/listalbum/listalbum.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/viewalbum/viewalbum.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/viewalbum/viewalbum.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/viewalbum/viewalbum.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/addartist/addartist.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/addartist/addartist.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/addartist/addartist.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartist/editartist.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartist/editartist.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartist/editartist.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartistphoto/editartistphoto.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartistphoto/editartistphoto.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartistphoto/editartistphoto.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/listartist/listartist.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/listartist/listartist.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/listartist/listartist.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/viewartist/viewartist.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/viewartist/viewartist.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/viewartist/viewartist.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/dashboard/dashboard.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/dashboard/dashboard.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/dashboard/dashboard.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/navbar/navbar.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/navbar/navbar.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/navbar/navbar.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/addsong/addsong.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/addsong/addsong.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/addsong/addsong.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsong/editsong.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsong/editsong.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsong/editsong.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsongfiles/editsongfiles.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsongfiles/editsongfiles.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsongfiles/editsongfiles.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/listsong/listsong.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/listsong/listsong.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/listsong/listsong.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/viewsong/viewsong.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/viewsong/viewsong.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/viewsong/viewsong.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/login/login.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/login/login.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/login/login.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/logout.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/password/password.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/password/password.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/password/password.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/profile/profile.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/profile/profile.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/profile/profile.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/register/register.component.css","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/register/register.component.html","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/register/register.component.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/guards/auth.guard.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/album.service.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/artist.service.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/auth.service.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/song.service.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/user.service.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/environments/environment.ts","/Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,+MAA+M,qD;;;;;;;;;;;;;;;;ACArK;AAO1C,IAAa,YAAY;IALzB;QAME,UAAK,GAAG,OAAO,CAAC;IAClB,CAAC;IAAD,mBAAC;AAAD,CAAC;AAFY,YAAY;IALxB,wEAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,0EAAmC;QACnC,yEAAkC;KACnC,CAAC;GACW,YAAY,CAExB;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACwB;AACtB;AACY;AAEvD,sBAAsB;AACgC;AACN;AACM;AACI;AACF;AACF;AAEtD,oBAAoB;AACoC;AACb;AAEI;AACwB;AACE;AACS;AACA;AACH;AACV;AACD;AACY;AACU;AACA;AACA;AACH;AACkB;AACtB;AACG;AACA;AACA;AACe;AACtB;AACG;AACe;AACf;AACA;AAElF,IAAM,SAAS,GAAW;IACxB,EAAC,IAAI,EAAE,EAAE,EAAC,UAAU,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC;IAC9C,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,wGAAiB,EAAC;IAC9C,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,+FAAc,EAAC;IACxC,EAAC,IAAI,EAAC,OAAO,EAAE,SAAS,EAAC,0FAAc,EAAC;IACxC,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,2FAAe,EAAE,WAAW,EAAC,CAAC,qEAAS,CAAC,EAAC;IACnE,EAAC,IAAI,EAAC,SAAS,EAAE,SAAS,EAAC,qGAAgB,EAAE,WAAW,EAAC,CAAC,qEAAS,CAAC,EAAC;IACrE,EAAC,IAAI,EAAC,UAAU,EAAE,SAAS,EAAC,wGAAiB,EAAE,WAAW,EAAC,CAAC,qEAAS,CAAC,EAAC;IACvE,EAAC,IAAI,EAAC,QAAQ,EAAE,SAAS,EAAC,sGAAkB,EAAE,WAAW,EAAC,CAAC,qEAAS,CAAC,EAAC;IACtE,EAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,6GAAkB,EAAE;IAC9E,EAAC,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,gHAAmB,EAAE;IACpF,EAAC,IAAI,EAAE,YAAY,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,gHAAmB,EAAE;IAChF,EAAC,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAC,+HAAwB,EAAE,WAAW,EAAC,CAAC,qEAAS,CAAC,EAAC;IAC1F,EAAC,IAAI,EAAE,gBAAgB,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,gHAAmB,EAAE;IACpF,EAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,yGAAiB,EAAE;IAC5E,EAAC,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,4GAAkB,EAAE;IAC9E,EAAC,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,4GAAkB,EAAE;IAClF,EAAC,IAAI,EAAE,eAAe,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,4GAAkB,EAAE;IAClF,EAAC,IAAI,EAAE,oBAAoB,EAAE,SAAS,EAAC,2HAAuB,EAAE,WAAW,EAAC,CAAC,qEAAS,CAAC,EAAC;IACxF,EAAC,IAAI,EAAE,SAAS,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,qGAAgB,EAAE;IAC1E,EAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,wGAAiB,EAAE;IAC5E,EAAC,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAC,uHAAsB,EAAE,WAAW,EAAC,CAAC,qEAAS,CAAC,EAAC;IACtF,EAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,wGAAiB,EAAE;IAChF,EAAC,IAAI,EAAE,cAAc,EAAE,WAAW,EAAE,CAAE,qEAAS,CAAC,EAAE,SAAS,EAAE,wGAAiB,EAAE;CACjF,CAAC;AA8CF,IAAa,SAAS;IAAtB;IAAyB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAb,SAAS;IA5CrB,uEAAQ,CAAC;QACR,YAAY,EAAE;YACZ,qEAAY;YACZ,6FAAe;YACf,+FAAc;YACd,wGAAiB;YACjB,wGAAiB;YACjB,qGAAgB;YAChB,2FAAe;YACf,0FAAc;YACd,sGAAkB;YAClB,gHAAmB;YACnB,gHAAmB;YACnB,gHAAmB;YACnB,6GAAkB;YAClB,+HAAwB;YACxB,yGAAiB;YACjB,4GAAkB;YAClB,4GAAkB;YAClB,4GAAkB;YAClB,2HAAuB;YACvB,qGAAgB;YAChB,wGAAiB;YACjB,uHAAsB;YACtB,wGAAiB;YACjB,wGAAiB;SAClB;QACD,OAAO,EAAE;YACP,gFAAa;YACb,mEAAW;YACX,2EAAmB;YACnB,iEAAU;YACV,qEAAY,CAAC,OAAO,CAAC,SAAS,CAAC;SAChC;QACD,SAAS,EAAE,CAAC,8EAAa;YACvB,2EAAW;YACX,qEAAS;YACT,2EAAW;YACX,+EAAa;YACb,6EAAY;YACZ,4EAAW;YACX,kEAAQ,CAAC;QACX,SAAS,EAAE,CAAC,qEAAY,CAAC;KAC1B,CAAC;GACW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;ACjHqB;AAI3C,IAAa,aAAa;IAExB;IAAgB,CAAC;IACjB,+BAAO,GAAP,UAAQ,OAAe,EAAE,KAAc;QACrC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;IAChC,CAAC;IACD,4BAAI,GAAJ,UAAK,OAAe,EAAE,KAAc;QAClC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC;IAC7B,CAAC;IACD,+BAAO,GAAP,UAAQ,OAAe,EAAE,KAAc;QACrC,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC;IAChC,CAAC;IACD,6BAAK,GAAL,UAAM,OAAe,EAAE,KAAc;QACnC,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC;IAC9B,CAAC;IACH,oBAAC;AAAD,CAAC;AAfY,aAAa;IADzB,yEAAU,EAAE;;GACA,aAAa,CAezB;AAfyB;;;;;;;;ACJ1B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,iS;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD,IAAa,cAAc;IAEzB;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IAEH,qBAAC;AAAD,CAAC;AAPY,cAAc;IAL1B,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,6FAAqC;QACrC,4FAAoC;KACrC,CAAC;;GACW,cAAc,CAO1B;AAP0B;;;;;;;;ACP3B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,wTAAwT,wFAAwF,udAAud,mBAAmB,ucAAuc,0FAA0F,ozBAAozB,0FAA0F,+xBAA+xB,4FAA4F,+aAA+a,GAAG,+cAA+c,4FAA4F,05BAA05B,4FAA4F,23B;;;;;;;;;;;;;;;;;;;;;;;;;;ACArkK;AACgD;AACzC;AACd;AACmB;AACG;AACF;AACF;AAQ7D,IAAa,iBAAiB;IAQ5B,2BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QAPlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAb5B,UAAK,GAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAC,kBAAkB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAClQ,kBAAa,GAAgB,EAAE,CAAC;QAehC,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IANlG,CAAC;IAUL,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,aAAa;YAC9B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;IACD,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,QAAY;QAArB,iBAoCC;QAnCC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,IAAM,KAAK,GAAgB,IAAI,CAAC,aAAa,CAAC;YAC9C,IAAI,SAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAE5C,SAAS,CAAC,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACzD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,SAAO,CAAC,CAAC;YACrB,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC;iBAC1C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,SAAO,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;oBACtD,SAAO,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;oBACtD,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAE,SAAO,CAAC,cAAc,CAAC,CAAC;oBACvD,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;wBACxB,SAAO,CAAC,OAAO,GAAG,KAAI,CAAC,OAAO,CAAC;oBACjC,CAAC;oBACD,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC,QAAQ,EAAE,SAAO,CAAC;yBAC1E,SAAS,CAAC,cAAI;wBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnC,CAAC;wBACD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;oBAC5B,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QAEP,CAAC;IACH,CAAC;IAED,2CAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IACH,wBAAC;AAAD,CAAC;AAjGY,iBAAiB;IAL7B,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,yGAAwC;QACxC,wGAAuC;KACxC,CAAC;yDAUc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACnB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GAhBjB,iBAAiB,CAiG7B;AAjG6B;;;;;;;;;ACf9B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,8TAA8T,oFAAoF,mpBAAmpB,oBAAoB,iHAAiH,kFAAkF,2ZAA2Z,mBAAmB,4fAA4f,oFAAoF,ovBAAovB,sFAAsF,kYAAkY,GAAG,ggBAAggB,sFAAsF,4+BAA4+B,8EAA8E,mXAAmX,GAAG,orBAAorB,UAAU,0K;;;;;;;;;;;;;;;;;;;;;;;;;;ACA3lM;AACgD;AACzC;AACd;AACmB;AACG;AACF;AACF;AAQ7D,IAAa,kBAAkB;IAS7B,4BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QAPlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAd5B,QAAG,GAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAClC,UAAK,GAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAC,kBAAkB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAgBlQ,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACtG,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAPhD,CAAC;IASL,qCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,KAAI,CAAC,MAAM,GAAG,QAAQ;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,0CAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,qCAAQ,GAAR,UAAS,EAAE;QAAX,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;oBACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,yCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,QAAY;QAAtB,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACzB,IAAM,OAAO,GAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;gBACxB,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAEjC,CAAC;YACD,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC;iBACvE,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;gBACzB,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IACH,yBAAC;AAAD,CAAC;AA5GY,kBAAkB;IAL9B,wEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,2GAAyC;QACzC,0GAAwC;KACzC,CAAC;yDAWc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACnB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GAjBjB,kBAAkB,CA4G9B;AA5G8B;;;;;;;;;ACf/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,qbAAqb,mBAAmB,gPAAgP,uPAAuP,gBAAgB,+W;;;;;;;;;;;;;;;;;;;;;;;;ACA74B;AAC+B;AACxB;AACK;AACC;AACF;AAQ7D,IAAa,uBAAuB;IAOlC,iCACU,EAAe,EACf,WAAwB,EACxB,YAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAR/B,kBAAa,GAAgB,EAAE,CAAC;QAWhC,mBAAc,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACjE,mBAAc,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAH7D,CAAC;IAQL,0CAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC7B,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAQ,GAAR,UAAS,EAAE;QAAX,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;oBACtD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACtC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YACxB,cAAc,EAAE,IAAI,CAAC,cAAc;YACnC,cAAc,EAAE,IAAI,CAAC,cAAc;SACpC,CAAC,CAAC;IACL,CAAC;IAED,iDAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;IAED,gDAAc,GAAd,UAAe,WAAe;QAA9B,iBAyCC;QAxCC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,YAAY,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,CAAC;aAC5C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;gBAC/C,IAAI,aAAW,GAAQ,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC5C,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,aAAW,CAAC;qBAC9C,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,kCAAkC;wBAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,cAAc,CAAC,CAAC;oBAC9D,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEL,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;gBACnE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;gBAEnE,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,KAAI,CAAC,OAAO,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC;qBACrE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAI,CAAC,UAAU,CAAC;wBACjE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YAEL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAEH,8BAAC;AAAD,CAAC;AA9GY,uBAAuB;IALnC,wEAAS,CAAC;QACT,QAAQ,EAAE,oBAAoB;QAC9B,qHAA8C;QAC9C,oHAA6C;KAC9C,CAAC;yDASc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACV,6EAAY,oBAAZ,6EAAY,sDACnB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GAbpB,uBAAuB,CA8GnC;AA9GmC;;;;;;;;;ACbpC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,69DAA69D,GAAG,muBAAmuB,mBAAmB,+oBAA+oB,GAAG,27BAA27B,aAAa,YAAY,aAAa,glCAAglC,0LAA0L,iBAAiB,2CAA2C,eAAe,uCAAuC,iBAAiB,uCAAuC,kBAAkB,4DAA4D,0CAA0C,4CAA4C,cAAc,+/CAA+/C,+DAA+D,8BAA8B,gFAAgF,WAAW,uI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApjP;AAC+B;AAChB;AACtB;AACmB;AACG;AACF;AACF;AACA;AAU7D,IAAa,kBAAkB;IAkB7B,qBAAqB;IAErB,4BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QARlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAb5B,UAAK,GAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAC,kBAAkB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAClQ,QAAG,GAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAelC,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,WAAM,GAAG,IAAI,mEAAW,CAAC,QAAQ,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAN3D,CAAC;IAQL,qCAAQ,GAAR;QAAA,iBAqCC;QApCC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC9C,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC;YACtC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAE/C,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,QAAQ,EAAE,KAAI,CAAC,SAAS;gBACxB,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,KAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,KAAI,CAAC,OAAO;aACrB,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,0CAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBA0BC;QAzBC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;aAC9C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,+BAA+B;gBAC/B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBACxB,2BAA2B;gBAC3B,yCAAyC;gBACzC,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,8BAA8B;gBAC9B,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;gBACtC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,eAAe,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAChC;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,sCAAS,GAAT,UAAU,MAAM;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAChC;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAEH;;;;;;;;;;UAUM;IACJ,sCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,OAAS,CAAC,EAC3C;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,uCAAU,GAAV,UAAW,GAAW,EAAE,OAAe;QAAvC,iBAiCC;QAhCC,IAAI,SAAiB,CAAC;QAEtB,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;aACtD,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;gBACrE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,EAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,EAAC;wBACvD,KAAI,CAAC,YAAY,CAAC,WAAW,CAAC,OAAO,CAAC;6BACrC,SAAS,CAAC,cAAI;4BACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gCAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oCAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oCAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gCAClC,CAAC;gCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gCAC3B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gCACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACpC,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,OAAS,CAAC,EAC3C;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IACD,2CAAc,GAAd,UAAe,OAAO;QACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAkB,OAAS,CAAC,EAChD;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,UAAU,EAAE,IAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IACH,yBAAC;AAAD,CAAC;AAlQY,kBAAkB;IAL9B,wEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,2GAAyC;QACzC,0GAAwC;KACzC,CAAC;yDAsBc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACb,2EAAW,oBAAX,2EAAW,sDACjB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GA7BjB,kBAAkB,CAkQ9B;AAlQ8B;;;;;;;;;AClB/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,0eAA0e,oBAAoB,qWAAqW,sBAAsB,wWAAwW,oBAAoB,0WAA0W,qBAAqB,oUAAoU,4CAA4C,uWAAuW,iBAAiB,oPAAoP,yBAAyB,gYAAgY,aAAa,0pCAA0pC,oEAAoE,gBAAgB,iDAAiD,mBAAmB,iDAAiD,eAAe,sEAAsE,yCAAyC,iDAAiD,cAAc,geAAge,yEAAyE,8BAA8B,gFAAgF,WAAW,6gB;;;;;;;;;;;;;;;;;;;;;;;;;ACAtoK;AACe;AACA;AACF;AACF;AACA;AACE;AAW/D,IAAa,kBAAkB;IAkB7B,4BACU,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,MAAqB,EACrB,KAAqB,EACrB,MAAc;QANd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,qCAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,OAAO,CAAC;YAC7B,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC;IACJ,CAAC;IACD,wCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IACD,qCAAQ,GAAR,UAAS,EAAE;QAAX,iBAkBC;QAjBC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC3C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAC1C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBACxD,CAAC;YAEH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAa,GAAb,UAAc,EAAE;QAAhB,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBACzD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAkBC;QAjBC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;aACzC,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC5B,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,WAAW,GAAG,cAAc,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,IAAI,CAAC,OAAS,CAAC,EAChD;YACE,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACnC,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,qCAAQ,GAAR,UAAS,MAAM;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAa,IAAI,CAAC,OAAS,CAAC,EAChD;YACE,WAAW,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACnC,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACtE,CAAC;IAGH,yBAAC;AAAD,CAAC;AAlJY,kBAAkB;IAL9B,wEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,2GAAyC;QACzC,0GAAwC;KACzC,CAAC;yDAoBuB,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACb,2EAAW,oBAAX,2EAAW,sDAChB,6EAAa,oBAAb,6EAAa,sDACd,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM;GAzBb,kBAAkB,CAkJ9B;AAlJ8B;;;;;;;;;ACjB/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,4TAA4T,8FAA8F,k0BAAk0B,gGAAgG,43B;;;;;;;;;;;;;;;;;;;;;;;;;ACA1wC;AACgD;AACzC;AACd;AACmB;AACG;AACJ;AAO7D,IAAa,kBAAkB;IAO7B,4BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QANlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAX5B,uCAAuC;QACvC,kBAAa,GAAgB,EAAE,CAAC;QAahC,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAFpD,CAAC;IAML,qCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,WAAW,EAAE,IAAI,CAAC,aAAa;YAC/B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT,UAAU,QAAY;QAAtB,iBAoCC;QAnCC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YACzD,IAAM,KAAK,GAAgB,IAAI,CAAC,aAAa,CAAC;YAC9C,IAAI,SAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;YACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;YACzC,OAAO,CAAC,GAAG,CAAC,YAAY,GAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAE5C,SAAS,CAAC,MAAM,CAAC,aAAa,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC1D,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,GAAG,CAAC,SAAO,CAAC,CAAC;YACrB,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC;iBAC5C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,SAAO,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;oBACxD,SAAO,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;oBACxD,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAE,SAAO,CAAC,eAAe,CAAC,CAAC;oBACxD,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;wBACzB,SAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC;oBACnC,CAAC;oBACD,KAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC;yBAC1D,SAAS,CAAC,cAAI;wBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;wBACnC,CAAC;wBACD,KAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;oBAC7B,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QAEP,CAAC;IACH,CAAC;IAED,4CAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;IACrD,CAAC;IAEH,yBAAC;AAAD,CAAC;AA3EY,kBAAkB;IAL9B,wEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,4GAAyC;QACzC,2GAAwC;KACzC,CAAC;yDASc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACrB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GAdjB,kBAAkB,CA2E9B;AA3E8B;;;;;;;;;ACb/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,kUAAkU,wFAAwF,8oBAA8oB,oBAAoB,wGAAwG,gFAAgF,mXAAmX,GAAG,yrBAAyrB,UAAU,0K;;;;;;;;;;;;;;;;;;;;;;;;;ACA3vE;AACgD;AACzC;AACd;AACmB;AACG;AACJ;AAO7D,IAAa,mBAAmB;IAO9B,6BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QANlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAX5B,QAAG,GAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAclC,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAHhD,CAAC;IAKL,sCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC9B,KAAI,CAAC,MAAM,GAAG,QAAQ;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IACD,uCAAS,GAAT,UAAU,EAAE;QAAZ,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;oBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,0CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV,UAAW,QAAY;QAAvB,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1B,IAAM,OAAO,GAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;YAC1C,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;gBACzB,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAEnC,CAAC;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC;iBACvD,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;gBAC1B,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IACH,0BAAC;AAAD,CAAC;AAhFY,mBAAmB;IAL/B,wEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,8GAA0C;QAC1C,6GAAyC;KAC1C,CAAC;yDASc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACrB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GAdjB,mBAAmB,CAgF/B;AAhF+B;;;;;;;;;ACbhC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,iUAAiU,oFAAoF,uVAAuV,0FAA0F,odAAod,mBAAmB,sOAAsO,mPAAmP,gBAAgB,2V;;;;;;;;;;;;;;;;;;;;;;;;ACApuD;AAC+B;AACxB;AACK;AACG;AACJ;AAQ7D,IAAa,wBAAwB;IAOnC,kCACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAR/B,kBAAa,GAAgB,EAAE,CAAC;QAWhC,oBAAe,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAClE,oBAAe,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAH9D,CAAC;IAQL,2CAAQ,GAAR;QAAA,iBAUC;QATC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7B,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IACD,4CAAS,GAAT,UAAU,EAAE;QAAZ,iBAYC;QAXC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;oBACvD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC;QAC9C,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC;YACzB,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,eAAe,EAAE,IAAI,CAAC,eAAe;SACtC,CAAC,CAAC;IACL,CAAC;IACD,kDAAe,GAAf,UAAgB,SAAa;QAC3B,IAAI,CAAC,aAAa,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QACzD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAC7C,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC1C,CAAC;IAED,iDAAc,GAAd,UAAe,WAAe;QAA9B,iBAyCC;QAxCC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,aAAa,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QAC1D,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,SAAS,CAAC;aAC9C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;gBAChD,IAAI,aAAW,GAAQ,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC7C,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,aAAW,CAAC;qBAChD,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,kCAAkC;wBAClC,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,eAAe,CAAC,CAAC;oBAC/D,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEL,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;gBACtE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC;gBAEtE,OAAO,CAAC,GAAG,CAAC,0BAA0B,GAAG,KAAI,CAAC,UAAU,CAAC,CAAC;gBAC1D,KAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,KAAI,CAAC,QAAQ,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;qBACzE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,kCAAkC,GAAG,KAAI,CAAC,UAAU,CAAC;wBACjE,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YAEL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IAEH,+BAAC;AAAD,CAAC;AA7GY,wBAAwB;IALpC,wEAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,wHAA+C;QAC/C,uHAA8C;KAC/C,CAAC;yDASc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACrB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GAbpB,wBAAwB,CA6GpC;AA7GoC;;;;;;;;;ACbrC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,6DAA6D,mDAAmD,UAAU,EAAE,miDAAmiD,GAAG,s+BAAs+B,aAAa,YAAY,aAAa,+rBAA+rB,8LAA8L,mBAAmB,6CAA6C,eAAe,8iDAA8iD,iEAAiE,8BAA8B,+EAA+E,WAAW,qJ;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/yK;AAC+B;AAChB;AACtB;AACmB;AACG;AACF;AACF;AAQ7D,IAAa,mBAAmB;IAa9B,6BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QAPlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAV5B,QAAG,GAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAalC,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC5D,WAAM,GAAG,IAAI,mEAAW,CAAC,QAAQ,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAH3D,CAAC;IAIL,yDAAyD;IAEzD,sCAAQ,GAAR;QAAA,iBA6BC;QA5BC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YAC9C,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAE1C,iCAAiC;YACzB,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YACtC,yCAAyC;YAC/B,OAAO,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,CAAC;YAChD,WAAW;YACH,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAE/C,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,UAAU,EAAE,KAAI,CAAC,WAAW;gBAC5B,MAAM,EAAE,KAAI,CAAC,OAAO;aACrB,CAAC,CAAC;YACX,SAAS;QACL,CAAC,CAAC;IACJ,CAAC;IAED,uCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAyBC;QAxBC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC;aAC7C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC9B,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,CAAC;gBACtC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,gBAAgB,CAAC;gBAEpC;;;;oBAII;YACN,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EACjC;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACpG,CACF,CAAC;IACJ,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,wCAAU,GAAV,UAAW,QAAQ;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,QAAU,CAAC,EAC7C;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IAED,wCAAU,GAAV,UAAW,GAAW,EAAE,QAAgB;QAAxC,iBAiCC;QAhCC,IAAI,UAAkB,CAAC;QAEvB,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;aACxD,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,UAAU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC9B,EAAE,CAAC,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC;gBACvE,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,EAAE,EAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,EAAC;wBACvD,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,QAAQ,CAAC;6BACxC,SAAS,CAAC,cAAI;4BACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gCAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oCAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oCAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gCAClC,CAAC;gCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;gCAC5B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;gCACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BACpC,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAU,GAAV,UAAW,QAAQ;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,QAAU,CAAC,EAC7C;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IACD,6CAAe,GAAf,UAAgB,QAAQ;QACtB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,qBAAmB,QAAU,CAAC,EAClD;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IAED,wCAAU,GAAV,UAAW,MAAM;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,EACjC;YACE,WAAW,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,WAAW,EAAE,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SAC/G,CACF,CAAC;IACJ,CAAC;IAED,0CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IACH,0BAAC;AAAD,CAAC;AAzLY,mBAAmB;IAL/B,wEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,8GAA0C;QAC1C,6GAAyC;KAC1C,CAAC;yDAec,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACnB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GArBjB,mBAAmB,CAyL/B;AAzL+B;;;;;;;;;ACfhC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,odAAod,sBAAsB,yVAAyV,kBAAkB,yOAAyO,2BAA2B,mXAAmX,aAAa,unCAAunC,iEAAiE,iBAAiB,+CAA+C,iBAAiB,+CAA+C,kBAAkB,oEAAoE,0CAA0C,+CAA+C,cAAc,2cAA2c,uEAAuE,8BAA8B,gFAAgF,WAAW,ye;;;;;;;;;;;;;;;;;;;;;;;;ACAviH;AACe;AACA;AACF;AACF;AACE;AAU/D,IAAa,mBAAmB;IAiB9B,6BACU,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,MAAqB,EACrB,KAAqB,EACrB,MAAc;QALd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,sCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,QAAQ,CAAC;YAC/B,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC;IACN,CAAC;IACD,yCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IACD,uCAAS,GAAT,UAAU,EAAE;QAAZ,iBAiBC;QAhBC,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC7C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC7B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;gBACzD,CAAC;YAEH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAkBC;QAjBC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC;aAC3C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC7B,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,WAAW,GAAG,eAAe,CAAC;YACrC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,IAAI,CAAC,QAAU,CAAC,EAClD;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,yCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,uCAAS,GAAT,UAAU,MAAM;QACd,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAc,IAAI,CAAC,QAAU,CAAC,EAClD;YACE,WAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACrC,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,oCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACvE,CAAC;IACH,0BAAC;AAAD,CAAC;AAhIY,mBAAmB;IAL/B,wEAAS,CAAC;QACT,QAAQ,EAAE,gBAAgB;QAC1B,8GAA0C;QAC1C,6GAAyC;KAC1C,CAAC;yDAmBuB,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDAClB,6EAAa,oBAAb,6EAAa,sDACd,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM;GAvBb,mBAAmB,CAgI/B;AAhI+B;;;;;;;;;ACfhC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,2cAA2c,aAAa,wUAAwU,cAAc,yUAAyU,kBAAkB,8RAA8R,gBAAgB,0LAA0L,kBAAkB,gMAAgM,kBAAkB,0FAA0F,oBAAoB,0GAA0G,mBAAmB,6E;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9gE;AACe;AAEN;AACG;AACF;AACF;AACA;AAIA;AAQ1D,IAAa,kBAAkB;IAU7B,4BACU,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,WAAwB,EACxB,MAAqB,EACrB,KAAqB,EACrB,MAAc;QAPd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAOL,qCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAE9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAC7B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,IAAI,CAAC,SAAS,CAAC;gBACrC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YACnC,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,IAAI,OAAO,GAAQ,EAAE,CAAC;QACtB,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACjD,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAuCC;QAtCC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC;aAC7C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC9B,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;gBAClC,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC;qBAC3C,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;wBAC7B,KAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;wBACpC,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC;6BACzC,SAAS,CAAC,cAAI;4BACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gCAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oCAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oCAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gCAClC,CAAC;gCACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;4BAClC,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACN,KAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;4BACrC,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAS,GAAT;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;IACxC,CAAC;IACD,qCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,oCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IACH,yBAAC;AAAD,CAAC;AApGY,kBAAkB;IAL9B,wEAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,qGAAyC;QACzC,oGAAwC;KACzC,CAAC;yDAYuB,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACb,2EAAW,oBAAX,2EAAW,sDACX,2EAAW,oBAAX,2EAAW,sDAChB,6EAAa,oBAAb,6EAAa,sDACd,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM;GAlBb,kBAAkB,CAoG9B;AApG8B;;;;;;;;;ACnB/B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,4xFAA4xF,gCAAgC,if;;;;;;;;;;;;;;;;;;;;ACA1wF;AACQ;AAO1D,IAAa,eAAe;IAE1B,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,kCAAQ,GAAR;IACA,CAAC;IAEH,sBAAC;AAAD,CAAC;AAPY,eAAe;IAL3B,wEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;QACtB,+FAAsC;QACtC,8FAAqC;KACtC,CAAC;yDAGiC,2EAAW,oBAAX,2EAAW;GAFjC,eAAe,CAO3B;AAP2B;;;;;;;;;ACR5B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,oTAAoT,sFAAsF,0fAA0f,mBAAmB,4bAA4b,oFAAoF,4cAA4c,iBAAiB,wbAAwb,sFAAsF,slCAAslC,wFAAwF,6aAA6a,GAAG,0cAA0c,wFAAwF,g5BAAg5B,sFAAsF,8bAA8b,sFAAsF,s1B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA19L;AACgD;AACzC;AACd;AACmB;AACG;AACF;AACF;AACA;AAU7D,IAAa,gBAAgB;IAU3B,0BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QARlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAhB5B,UAAK,GAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAC,kBAAkB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAClQ,sBAAiB,GAAgB,EAAE,CAAC;QACpC,sBAAiB,GAAgB,EAAE,CAAC;QAiBpC,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IAPjG,CAAC;IAaL,mCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,QAAQ,EAAE,IAAI,CAAC,iBAAiB;YAChC,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;IACL,CAAC;IAED,wCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAa,EAAE;QAAf,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,kBAAkB,EAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,+CAAoB,GAApB,UAAqB,EAAE,EAAE,QAAQ;QAAjC,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,8BAA8B;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,kCAAO,GAAP,UAAQ,QAAY;QAApB,iBA8CC;QA7CC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACrD,IAAM,SAAS,GAAgB,IAAI,CAAC,iBAAiB,CAAC;YACtD,IAAI,SAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,WAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;YACzC,kDAAkD;YAElD,WAAS,CAAC,MAAM,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YAC/D,4CAA4C;YAC5C,uBAAuB;YACvB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,WAAS,CAAC;iBAC1C,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;oBAClD,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;oBAClD,IAAM,SAAS,GAAgB,KAAI,CAAC,iBAAiB,CAAC;oBACtD,WAAS,CAAC,MAAM,CAAC,UAAU,EAAC,SAAS,CAAC,CAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC/D,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,WAAS,CAAC;yBACzC,SAAS,CAAC,cAAI;wBACX,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;4BAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBAClC,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACN,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;4BAClD,SAAO,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;4BAClD,SAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;4BAC1B,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;gCACvB,SAAO,CAAC,MAAM,GAAG,KAAI,CAAC,MAAM,CAAC;4BAC/B,CAAC;4BACD,KAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,SAAO,CAAC,QAAQ,EAAE,SAAO,CAAC,OAAO,EAAE,SAAO,CAAC;iCACzF,SAAS,CAAC,cAAI;gCACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oCAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gCAClC,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oCAClC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gCACrC,CAAC;gCACD,KAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;4BAC3B,CAAC,CAAC,CAAC;wBACL,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACH,CAAC,CAAC,CAAC;QAEP,CAAC;IACH,CAAC;IAED,8CAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAED,8CAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACzD,CAAC;IAED,4CAAiB,GAAjB,UAAkB,aAAiB;QACjC,IAAI,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,8CAA8C;QAC9C,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IACH,uBAAC;AAAD,CAAC;AA5JY,gBAAgB;IAL5B,wEAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,sGAAuC;QACvC,qGAAsC;KACvC,CAAC;yDAYc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACb,2EAAW,oBAAX,2EAAW,sDACjB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GAnBjB,gBAAgB,CA4J5B;AA5J4B;;;;;;;;;AClB7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,4TAA4T,gFAAgF,0oBAA0oB,oBAAoB,wGAAwG,gFAAgF,kcAAkc,mBAAmB,yfAAyf,8EAA8E,qZAAqZ,iBAAiB,u1BAAu1B,kFAAkF,+XAA+X,GAAG,yfAAyf,kFAAkF,+9BAA+9B,sFAAsF,yYAAyY,GAAG,kxBAAkxB,iBAAiB,6FAA6F,4EAA4E,mXAAmX,GAAG,6qBAA6qB,UAAU,0K;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAl6P;AACgD;AACzC;AACd;AACmB;AACG;AACF;AACF;AACA;AAU7D,IAAa,iBAAiB;IAa5B,2BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QARlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAnB5B,QAAG,GAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAClC,UAAK,GAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAC,kBAAkB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAClQ,WAAM,GAAQ,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;QAmBxB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACrG,gBAAW,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzD,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;QACnG,WAAM,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAThD,CAAC;IAWL,oCAAQ,GAAR;QAAA,iBAoBC;QAnBC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,MAAM,GAAG,QAAQ;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAExC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,EAAE,EAAE,QAAQ;QAAjC,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,8BAA8B;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf,UAAgB,EAAE;QAAlB,iBAaC;QAZC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;oBACvC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,KAAI,CAAC,SAAS,CAAC;oBAC9D,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;oBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;IACL,CAAC;IAED,oCAAQ,GAAR,UAAS,QAAY;QAArB,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAM,OAAO,GAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YACxC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;gBACvB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAE/B,CAAC;YACD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,OAAO,EAAC,OAAO,CAAC;iBACrF,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACxB,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,6CAAiB,GAAjB,UAAkB,aAAiB;QACjC,IAAI,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,8CAA8C;QAC9C,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAEH,wBAAC;AAAD,CAAC;AApJY,iBAAiB;IAL7B,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wGAAwC;QACxC,uGAAuC;KACxC,CAAC;yDAec,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACb,2EAAW,oBAAX,2EAAW,sDACjB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GAtBjB,iBAAiB,CAoJ7B;AApJ6B;;;;;;;;;AClB9B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,6kBAA6kB,iPAAiP,oBAAoB,4WAA4W,iPAAiP,oBAAoB,6V;;;;;;;;;;;;;;;;;;;;;;;;ACAj5C;AAC+B;AACxB;AACK;AACD;AACA;AAQ7D,IAAa,sBAAsB;IAQjC,gCACU,EAAe,EACf,WAAwB,EACxB,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB;QALrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAT/B,sBAAiB,GAAgB,EAAE,CAAC;QACpC,sBAAiB,GAAgB,EAAE,CAAC;QAWpC,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/D,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/D,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC/D,iBAAY,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAL3D,CAAC;IAWL,yCAAQ,GAAR;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,UAAC,MAAW;YACtC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC3B,KAAI,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,wCAAO,GAAP,UAAQ,EAAE;QAAV,iBAYC;QAXC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACzC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACzB,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;oBACrD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACrC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,6CAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvB,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,YAAY,EAAE,IAAI,CAAC,YAAY;SAChC,CAAC,CAAC;IACL,CAAC;IAED,oDAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAChD,CAAC;IAED,oDAAmB,GAAnB,UAAoB,SAAa;QAC/B,IAAI,CAAC,iBAAiB,GAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC7C,CAAC;IAED,iDAAgB,GAAhB,UAAiB,WAAe;QAAhC,iBAsCC;QArCC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC;aAC5C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,aAAW,GAAQ,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAC3C,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,aAAW,CAAC;qBAC9C,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,EAAE,CAAC,CAAC,aAAW,CAAC,CAAC,CAAC;4BAChB,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,YAAY,CAAC,CAAC;wBAC5D,CAAC;oBACH,CAAC;gBACH,CAAC,CAAC,CAAC;gBACL,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAC9D,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAE9D,KAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;qBACnE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;wBAC5C,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAa,GAAb,UAAc,WAAe;QAA7B,iBAqCC;QApCC,IAAM,KAAK,GAAgB,WAAW,CAAC;QACvC,IAAI,SAAS,GAAa,IAAI,QAAQ,EAAE,CAAC;QACzC,SAAS,CAAC,MAAM,CAAC,UAAU,EAAC,KAAK,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,SAAS,CAAC;aACzC,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,aAAW,GAAQ,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAC3C,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,aAAW,CAAC;qBAC3C,SAAS,CAAC,cAAI;oBACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC/C,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,aAAW,CAAC,YAAY,CAAC,CAAC;oBAC5D,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEL,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAC9D,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAE9D,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,KAAI,CAAC,MAAM,EAAE,KAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;qBAChE,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;wBACzC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,uCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACrE,CAAC;IACH,6BAAC;AAAD,CAAC;AA5JY,sBAAsB;IALlC,wEAAS,CAAC;QACT,QAAQ,EAAE,mBAAmB;QAC7B,kHAA6C;QAC7C,iHAA4C;KAC7C,CAAC;yDAUc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACX,2EAAW,oBAAX,2EAAW,sDACjB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GAdpB,sBAAsB,CA4JlC;AA5JkC;;;;;;;;;ACbnC;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mhCAAmhC,mBAAmB,smBAAsmB,iBAAiB,2iDAA2iD,GAAG,0pBAA0pB,GAAG,2lBAA2lB,GAAG,ulBAAulB,GAAG,m5BAAm5B,aAAa,YAAY,aAAa,+nCAA+nC,0LAA0L,gBAAgB,2CAA2C,eAAe,uCAAuC,cAAc,uCAAuC,iBAAiB,uCAAuC,iBAAiB,4DAA4D,yCAAyC,4CAA4C,cAAc,gkDAAgkD,+DAA+D,8BAA8B,gFAAgF,WAAW,oI;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAt2S;AAC+B;AAChB;AACtB;AACmB;AACG;AACF;AACF;AACA;AAU7D,IAAa,iBAAiB;IAyB5B,2BACU,EAAe,EACf,WAAwB,EACxB,aAA4B,EAC5B,YAA0B,EAC1B,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,MAAqB,EACrB,QAAkB;QARlB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QACrB,aAAQ,GAAR,QAAQ,CAAU;QAf5B,UAAK,GAAQ,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,EAAE,WAAW,EAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,SAAS,EAAC,kBAAkB,EAAE,cAAc,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAE,MAAM,EAAE,YAAY,EAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAClQ,QAAG,GAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAClC,WAAM,GAAQ,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAgBzB,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1D,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,gBAAW,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC7D,YAAO,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAC,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,WAAM,GAAG,IAAI,mEAAW,CAAC,QAAQ,EAAE,CAAC,kEAAU,CAAC,aAAa,CAAC,CAAC,CAAC;IAT3D,CAAC;IAWL,oCAAQ,GAAR;QAAA,iBAkDC;QAjDC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAc;YAC5C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YAC1C,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;YAC5C,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YAChD,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACxC,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACtC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAClC,KAAI,CAAC,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAEpC,IAAI,OAAO,GAAQ,EAAE,CAAC;YACtB,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,OAAO,CAAC;YAC9B,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC;YAClC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC;YACpC,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,YAAY,CAAC;YACxC,OAAO,CAAC,OAAO,GAAG,KAAI,CAAC,QAAQ,CAAC;YAChC,OAAO,CAAC,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC;YAC1B,OAAO,CAAC,MAAM,GAAG,KAAI,CAAC,KAAK,CAAC;YAC5B,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAE/C,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,QAAQ,EAAE,KAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,KAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,KAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,KAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,KAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,KAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,KAAI,CAAC,OAAO;aACrB,CAAC,CAAC;QACL,CAAC,CAAC;IACJ,CAAC;IAED,yCAAa,GAAb,UAAc,EAAE;QAAhB,iBAWC;QAVC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YACjD,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC5B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,UAAU,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,UAAU,EAAC,mBAAmB,EAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAE;QAAf,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC/C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,+BAA+B;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,kBAAkB,EAAC,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACD,gDAAoB,GAApB,UAAqB,EAAE,EAAE,QAAQ;QAAjC,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACjE,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,IAAI,CAAC,CAAC,CAAC;gBAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;oBAC3B,8BAA8B;gBAChC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,GAAG,CAAC,EAAC,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,yBAAyB,EAAC,CAAC,CAAC;gBACnE,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAU,QAAY;QACpB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACjE,CAAC;IACH,CAAC;IAED,uCAAW,GAAX,UAAY,MAAM,EAAE,OAAO;QAA3B,iBAyBC;QAxBC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC;aAC5C,SAAS,CAAC,cAAI;YACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;gBACvB,KAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAI,CAAC,SAAS,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;gBAE5D,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC;gBAClC,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC;gBACpC,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC;gBACxC,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC;gBAChC,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC;gBAC9B,KAAI,CAAC,WAAW,GAAG,cAAc,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAO,GAAP,UAAQ,IAAI;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAC/B;YACE,WAAW,EAAE;gBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI;gBACV,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,uCAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;YAC/B,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,KAAK,CAAC;IACf,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAM;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,EAAC;YACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACtB,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;QAC5B,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,EAC/B;YACE,WAAW,EAAE;gBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,6CAAiB,GAAjB,UAAkB,aAAiB;QACjC,IAAI,MAAM,GAAW,aAAa,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,8CAA8C;QAC9C,IAAI,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,yCAAa,GAAb,UAAc,MAAM,EAAE,WAAW,EAAE,OAAO;QACxC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;QAClF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,uDAAuD;YACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,mBAAiB,MAAQ,CAAC,EAC9C;gBACE,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;oBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;oBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;oBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;iBAAE;aACvB,CACF,CAAC;QACJ,CAAC;IAEH,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAM;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,MAAQ,CAAC,EACzC;YACE,WAAW,EAAE;gBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;gBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;gBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;gBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;gBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;gBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;aAAE;SACvB,CACF,CAAC;IACJ,CAAC;IAED,oCAAQ,GAAR,UAAS,MAAM,EAAE,WAAW,EAAE,OAAO;QAEnC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;QAClF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAY,MAAQ,CAAC,EAC3C;gBACE,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,QAAQ,EAAE,IAAI,CAAC,SAAS;oBACxB,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,SAAS,EAAE,IAAI,CAAC,UAAU;oBAC1B,WAAW,EAAE,IAAI,CAAC,YAAY;oBAC9B,OAAO,EAAE,IAAI,CAAC,QAAQ;oBACtB,MAAM,EAAE,IAAI,CAAC,OAAO;oBACpB,IAAI,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC;oBACrB,MAAM,EAAE,IAAI,CAAC,KAAK;iBAAE;aACrB,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAED,sCAAU,GAAV,UAAW,GAAW,EAAE,MAAc,EAAE,WAAW,EAAE,OAAO;QAA5D,iBAsBC;QApBC,EAAE,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0DAA0D,CAAC,CAAC;QAClF,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,EAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,EAAC;gBACvD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC;qBAClC,SAAS,CAAC,cAAI;oBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;wBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;4BAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;4BAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBAClC,CAAC;wBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;wBAC1B,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,CAAC,CAAC;wBACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;IACH,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IACH,wBAAC;AAAD,CAAC;AAjUY,iBAAiB;IAL7B,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wGAAwC;QACxC,uGAAuC;KACxC,CAAC;yDA2Bc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDACT,+EAAa,oBAAb,+EAAa,sDACd,6EAAY,oBAAZ,6EAAY,sDACb,2EAAW,oBAAX,2EAAW,sDACjB,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa,sDACX,iEAAQ,oBAAR,iEAAQ;GAlCjB,iBAAiB,CAiU7B;AAjU6B;;;;;;;;;AClB9B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,ueAAue,kBAAkB,iWAAiW,gBAAgB,+VAA+V,eAAe,mXAAmX,mBAAmB,mWAAmW,mBAAmB,6TAA6T,0CAA0C,yWAAyW,sBAAsB,sWAAsW,sBAAsB,wWAAwW,qBAAqB,+WAA+W,iBAAiB,iWAAiW,gBAAgB,yV;;;;;;;;;;;;;;;;;;;;;;;ACAlnI;AACO;AACI;AACA;AACE;AAS/D,IAAa,iBAAiB;IAI5B,2BACU,WAAwB,EACxB,WAAwB,EACxB,MAAqB,EACrB,KAAqB,EACrB,MAAc;QAJd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAe;QACrB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;IACpB,CAAC;IAEL,oCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CACpC,gBAAM;YACJ,IAAI,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YAC1B,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACP,CAAC;IACD,uCAAW,GAAX;QACE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;IACzB,CAAC;IAED,mCAAO,GAAP,UAAQ,EAAE;QAAV,iBAgBC;QAfC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5C,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC3B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC;gBACvD,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;IACrE,CAAC;IACH,wBAAC;AAAD,CAAC;AA5CY,iBAAiB;IAL7B,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wGAAwC;QACxC,uGAAuC;KACxC,CAAC;yDAMuB,2EAAW,oBAAX,2EAAW,sDACX,2EAAW,oBAAX,2EAAW,sDAChB,6EAAa,oBAAb,6EAAa,sDACd,uEAAc,oBAAd,uEAAc,sDACb,+DAAM,oBAAN,+DAAM;GATb,iBAAiB,CA4C7B;AA5C6B;;;;;;;;;ACb9B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,u1C;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAC+B;AACxB;AACK;AACD;AAQ7D,IAAa,cAAc;IAEzB,wBAAoB,EAAe,EACzB,WAAwB,EACxB,MAAc,EACd,MAAqB;QAHX,OAAE,GAAF,EAAE,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAE7B,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAKxD,cAAS,GAAc,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IAXgC,CAAC;IAKpC,iCAAQ,GAAR;IACA,CAAC;IAOD,kCAAS,GAAT,UAAU,QAAY;QAAtB,iBAaC;QAZC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;iBACzC,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAClC,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC;gBACzC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;oBACzC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnC,CAAC;gBACD,KAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACzB,CAAC,CAAC,CAAC;QACP,CAAC;IACH,CAAC;IAEH;AAAA;AAjCa,cAAc;IAL1B,wEAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,kGAAqC;QACrC,iGAAoC;KACrC,CAAC;yDAGwB,mEAAW,oBAAX,mEAAW,sDACZ,2EAAW,oBAAX,2EAAW,sDAChB,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GALpB,cAAc,CAiC3B;AAjC2B;;;;;;;;;;;;;;;;;;;;;;;;ACZuB;AACT;AACkB;AACD;AAM1D,IAAa,eAAe;IAExB,yBAAoB,WAAwB,EAChC,MAAc,EACd,MAAqB;QAFb,gBAAW,GAAX,WAAW,CAAa;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IACjC,CAAC;IAED,kCAAQ,GAAR;QACI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;QACjD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;IACL,sBAAC;AAAD,CAAC;AAZY,eAAe;IAJ3B,wEAAS,CAAC;QACT,QAAQ,EAAE,EAAE;KACb,CAAC;yDAImC,2EAAW,oBAAX,2EAAW,sDACxB,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GAJxB,eAAe,CAY3B;AAZ2B;;;;;;;;;ACT5B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,kVAAkV,8FAA8F,q5BAAq5B,uDAAuD,4DAA4D,oHAAoH,qsCAAqsC,wHAAwH,0qD;;;;;;;;;;;;;;;;;;;;;;;;ACAvzF;AACgD;AACzC;AACK;AACD;AACA;AAO7D,IAAa,iBAAiB;IAK5B,2BAAoB,EAAe,EACzB,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACd,MAAqB;QAJX,OAAE,GAAF,EAAE,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAE7B,gBAAW,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACzD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC;QAC3H,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAJvB,CAAC;IAMpC,oCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,EAAE,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd,UAAe,QAAY;QAA3B,iBAqBC;QApBC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC;YAC/D,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3B,OAAO,OAAO,CAAC,aAAa,CAAC;YAE7B,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,OAAO,CAAC;iBACzD,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBACpC,CAAC;gBACD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEH,wBAAC;AAAD,CAAC;AAjDY,iBAAiB;IAL7B,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wGAAwC;QACxC,uGAAuC;KACxC,CAAC;yDAMwB,mEAAW,oBAAX,mEAAW,sDACZ,2EAAW,oBAAX,2EAAW,sDACX,2EAAW,oBAAX,2EAAW,sDAChB,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GATpB,iBAAiB,CAiD7B;AAjD6B;AAmD9B,yBAAyB,CAAkB;IACzC,IAAI,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxC,IAAI,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAEzC,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,EAAE,CAAC,CAAC,eAAe,CAAC,KAAK,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,MAAM,CAAC,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;AACxC;;;;;;;;;AC3EA;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,moBAAmoB,oBAAoB,iGAAiG,8EAA8E,koBAAkoB,oBAAoB,uGAAuG,gFAAgF,wsBAAwsB,wFAAwF,+xBAA+xB,wFAAwF,8yBAA8yB,sFAAsF,kjCAAkjC,oBAAoB,sYAAsY,qCAAqC,8f;;;;;;;;;;;;;;;;;;;;;;;;ACA7mL;AAC+B;AACxB;AACK;AACD;AACA;AAQ7D,IAAa,gBAAgB;IAM3B,0BAAoB,EAAe,EACzB,WAAwB,EACxB,WAAwB,EACxB,MAAc,EACd,MAAqB;QAJX,OAAE,GAAF,EAAE,CAAa;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAE/B,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAChD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IANnB,CAAC;IAQpC,mCAAQ,GAAR;QAAA,iBAsBC;QArBC,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;oBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;oBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,YAAY,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,uCAAY,GAAZ,UAAa,IAAI;QACf,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC;YAC1B,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;IACL,CAAC;IAED,qCAAU,GAAV,UAAW,QAAY;QAAvB,iBAkBG;QAjBD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;iBACvE,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,EAAC;wBAChB,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;wBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAClC,CAAC;oBACD,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,IAAI,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAClE,OAAO,CAAC,IAAI,CAAC,IAAI,GAAG,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC;oBAChD,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IACL;AAAA;AAvEa,gBAAgB;IAL5B,wEAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,sGAAuC;QACvC,qGAAsC;KACvC,CAAC;yDAOwB,mEAAW,oBAAX,mEAAW,sDACZ,2EAAW,oBAAX,2EAAW,sDACX,2EAAW,oBAAX,2EAAW,sDAChB,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GAVpB,gBAAgB,CAuE7B;AAvE6B;;;;;;;;;ACb7B;AACA;;;AAGA;AACA;;AAEA;;;AAGA;AACA,2C;;;;;;;ACXA,mUAAmU,gFAAgF,mzBAAmzB,kFAAkF,0vBAA0vB,0FAA0F,y0BAAy0B,0FAA0F,60BAA60B,wFAAwF,yjCAAyjC,uBAAuB,mFAAmF,wFAAwF,2vCAA2vC,uDAAuD,mEAAmE,oHAAoH,srCAAsrC,wHAAwH,6tD;;;;;;;;;;;;;;;;;;;;;;;ACAp5P;AACgD;AACzC;AACK;AACD;AAO7D,IAAa,iBAAiB;IAG5B,2BACU,EAAe,EACf,WAAwB,EACxB,MAAc,EACd,MAAqB;QAHrB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;QAG/B,SAAI,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,UAAK,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,KAAK,CAAC,CAAC,CAAC;QAChD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,cAAS,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACvD,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtD,aAAQ,GAAG,IAAI,mEAAW,CAAC,OAAO,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC3D,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACzG,aAAQ,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,OAAO,CAAC,+CAA+C,CAAC,CAAC,CAAC,CAAC;QAC3H,eAAU,GAAG,IAAI,mEAAW,CAAC,EAAE,EAAE,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAVpD,CAAC;IAYL,oCAAQ,GAAR;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,aAAa,EAAE,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC3B,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;aAC5B,EAAE,EAAC,SAAS,EAAE,eAAe,EAAC,CAAC;SACjC,CAAC,CAAC;IACL,CAAC;IACD,wCAAY,GAAZ,UAAa,QAAY;QAAzB,iBAmBC;QAlBC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;YACvD,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACtC,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC;YAC/D,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3B,OAAO,OAAO,CAAC,aAAa,CAAC;YAE7B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC;iBACjC,SAAS,CAAC,cAAI;gBACb,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC,CAAC,CAAC;oBAC3B,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBAClC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,CAAC;gBACD,KAAI,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;YAC5B,CAAC,CAAC,CAAC;QAEL,CAAC;IACH,CAAC;IACH,wBAAC;AAAD,CAAC;AAvDY,iBAAiB;IAL7B,wEAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,wGAAwC;QACxC,uGAAuC;KACxC,CAAC;yDAKc,mEAAW,oBAAX,mEAAW,sDACF,2EAAW,oBAAX,2EAAW,sDAChB,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GAPpB,iBAAiB,CAuD7B;AAvD6B;AAwD9B,yBAAyB,CAAkB;IACzC,IAAI,eAAe,GAAG,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IACxC,IAAI,cAAc,GAAG,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IAEzC,EAAE,CAAC,CAAC,eAAe,CAAC,QAAQ,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,EAAE,CAAC,CAAC,eAAe,CAAC,KAAK,KAAK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;QACjD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACD,MAAM,CAAC,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC;AACxC;;;;;;;;;;;;;;;;;;;;;;;;AC/E2C;AACwD;AAE5C;AACE;AAGzD,IAAa,SAAS;IAClB,mBAAoB,WAAwB,EAChC,MAAc,EACd,MAAqB;QAFb,gBAAW,GAAX,WAAW,CAAa;QAChC,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,iCAAa,GAAb,UAAc,GAAW;QACrB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;YAChC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mCAAmC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC;IACL,gBAAC;AAAD,CAAC;AAlBY,SAAS;IADrB,yEAAU,EAAE;yDAEwB,2EAAW,oBAAX,2EAAW,sDACxB,+DAAM,oBAAN,+DAAM,sDACN,6EAAa,oBAAb,6EAAa;GAHxB,SAAS,CAkBrB;AAlBqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC,IAAa,YAAY;IAGvB,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAED,uCAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA4C,EAAE,KAAK,EAAE,OAAO,CAAC;aAChF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,gCAAS,GAAT,UAAU,MAAM,EAAE,QAAQ,EAAE,MAAM;QAChC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,qCAAmC,MAAM,kBAAa,QAAU,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aACnH,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAgB,GAAhB,UAAiB,OAAO,EAAE,MAAM;QAC9B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gDAA8C,OAAS,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aACzG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAgB,GAAhB,UAAiB,MAAM;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA4C,EAAE,MAAM,EAAE,OAAO,CAAC;aAC/E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAS,GAAT,UAAU,MAAM,EAAE,MAAM;QACtB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA0C,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aACrG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,mCAAY,GAAZ,UAAa,MAAM,EAAE,MAAM;QACzB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,+CAA6C,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC;aACxG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,+BAAQ,GAAR,UAAS,OAAO;QACd,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAmC,OAAS,EAAE,OAAO,CAAC;aACtE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,mCAAY,GAAZ,UAAa,MAAM;QACjB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yCAAuC,MAAQ,EAAE,OAAO,CAAC;aACzE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,2CAAoB,GAApB,UAAqB,MAAM,EAAC,QAAQ;QAClC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAA+C,MAAM,kBAAa,QAAU,EAAE,OAAO,CAAC;aACtG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,kCAAW,GAAX,UAAY,OAAO;QACjB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,qCAAmC,OAAS,EAAE,OAAO,CAAC;aACzE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,kCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAEH,mBAAC;AAAD,CAAC;AA1HY,YAAY;IADxB,yEAAU,EAAE;yDAIe,2DAAI,oBAAJ,2DAAI;GAHnB,YAAY,CA0HxB;AA1HwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC,IAAa,aAAa;IAGxB,uBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAED,yCAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;QACzC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,6CAA6C,EAAE,KAAK,EAAE,OAAO,CAAC;aACjF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,kCAAU,GAAV,UAAW,MAAM,EAAE,OAAO;QACxB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,sCAAoC,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aAChG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,yCAAiB,GAAjB,UAAkB,QAAQ,EAAE,OAAO;QACjC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAA+C,QAAU,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aAC5G,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,yCAAiB,GAAjB,UAAkB,OAAO;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,6CAA6C,EAAE,OAAO,EAAE,OAAO,CAAC;aACjF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,kCAAU,GAAV,UAAW,MAAM,EAAE,OAAO;QACxB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,6CAA2C,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;aACvG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAS,GAAT,UAAU,QAAQ;QAChB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sCAAoC,QAAU,EAAE,OAAO,CAAC;aACxE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,qCAAa,GAAb,UAAc,MAAM;QAClB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0CAAwC,MAAQ,EAAE,OAAO,CAAC;aAC1E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,oCAAY,GAAZ,UAAa,QAAQ;QACnB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,sCAAoC,QAAU,EAAE,OAAO,CAAC;aAC3E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,mCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IACH,oBAAC;AAAD,CAAC;AAnGY,aAAa;IADzB,yEAAU,EAAE;yDAIe,2DAAI,oBAAJ,2DAAI;GAHnB,aAAa,CAmGzB;AAnGyB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAKnC,IAAa,WAAW;IAItB,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,gCAAU,GAAV;QACE,IAAI,CAAC;YACD,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;YACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC;YACpC,CAAC;QACL,CAAC;QAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACT,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QACD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED,2BAAK,GAAL,UAAM,KAAK;QAAX,iBAiBC;QAhBC,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QACjE,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QAErD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACvF,EAAE,CAAC,UAAC,QAAkB;YACnB,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,WAAW,GAAU,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBAClD,IAAI,OAAO,GAAQ,EAAE,CAAC;gBACtB,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;gBACvC,OAAO,CAAC,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC;gBAEtC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YACjE,CAAC;YACD,QAAQ,CAAC,IAAI,EAAE,CAAC;QACpB,CAAC,CAAC;aACD,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC3B,CAAC;IAED,4BAAM,GAAN;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzC,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAEH,kBAAC;AAAD,CAAC;AA/CY,WAAW;IADvB,yEAAU,EAAE;yDAKe,2DAAI,oBAAJ,2DAAI;GAJnB,WAAW,CA+CvB;AA/CuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXmB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC,IAAa,WAAW;IAGtB,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC5B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAClC,CAAC;IACH,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,KAAK,EAAE,OAAO,CAAC;aAC9E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,oCAAc,GAAd,UAAe,KAAK;QAClB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,KAAK,EAAE,OAAO,CAAC;aAC9E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,KAAK;QACrB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,KAAK,EAAE,OAAO,CAAC;aAC5E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,oCAAc,GAAd,UAAe,KAAK;QAClB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QACvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,0CAA0C,EAAE,KAAK,EAAE,OAAO,CAAC;aAC5E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK;QACvC,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,oCAAkC,MAAM,kBAAa,QAAQ,iBAAY,OAAS,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACpI,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,MAAM,EAAE,KAAK;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2CAAyC,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAClG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,MAAM,EAAE,KAAK;QAC7B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAA+C,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACxG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,uCAAiB,GAAjB,UAAkB,MAAM,EAAE,KAAK;QAC7B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAA+C,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACxG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IACD,oCAAc,GAAd,UAAe,MAAM,EAAE,KAAK;QAC1B,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8CAA4C,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACrG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,6BAAO,GAAP,UAAQ,MAAM;QACZ,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAkC,MAAQ,EAAE,OAAO,CAAC;aACpE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAU,GAAV,UAAW,MAAM;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6CAA2C,MAAQ,EAAE,OAAO,CAAC;aAC7E,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,gCAAU,GAAV,UAAW,MAAM;QACf,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,oCAAkC,MAAQ,EAAE,OAAO,CAAC;aACvE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,iCAAW,GAAX,UAAY,MAAM,EAAE,KAAK;QACvB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,8CAA4C,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACtG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,8BAAQ,GAAR,UAAS,MAAM,EAAE,KAAK;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,2CAAyC,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACnG,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAe;QACjC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAChE,CAAC;IAEH,kBAAC;AAAD,CAAC;AAlKY,WAAW;IADvB,yEAAU,EAAE;yDAIe,2DAAI,oBAAJ,2DAAI;GAHnB,WAAW,CAkKvB;AAlKuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTmB;AAC4B;AAC1B;AACf;AACG;AACF;AACI;AAGnC,IAAa,WAAW;IAGtB,qBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAC1B,IAAM,OAAO,GAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACpE,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC;QAChC,CAAC;IACL,CAAC;IAEH;;;;;;OAMG;IACD,8BAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,OAAO,GAAG,IAAI,8DAAO,CAAE,EAAE,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;QAClE,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gCAAgC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aACnF,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC;IAED,6BAAO,GAAP,UAAQ,MAAM;QACV,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAkC,MAAQ,EAAE,OAAO,CAAC;aACpE,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAED,gCAAU,GAAV,UAAW,MAAM,EAAE,KAAK;QACpB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAkC,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC3F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEH;;;;;;;;;;;;;;;;;;;;;MAqBE;IAEA,oCAAc,GAAd,UAAe,MAAM,EAAE,KAAK;QACxB,IAAI,OAAO,GAAG,IAAI,8DAAO,EAAE,CAAC;QAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QACnD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,KAAG,IAAI,CAAC,QAAU,CAAC,CAAC;QACpD,IAAI,OAAO,GAAG,IAAI,qEAAc,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;QAEvD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wCAAsC,MAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC;aAC/F,GAAG,CAAC,UAAC,QAAkB,IAAK,eAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aAC5C,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC;IAEO,iCAAW,GAAnB,UAAoB,KAAe;QAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,IAAI,cAAc,CAAC,CAAC;IAClE,CAAC;IACH,kBAAC;AAAD,CAAC;AArFY,WAAW;IADvB,yEAAU,EAAE;yDAIe,2DAAI,oBAAJ,2DAAI;GAHnB,WAAW,CAqFvB;AArFuB;;;;;;;;;;ACTxB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n<footer class=\\\"footer\\\">\\n  <div class=\\\"container\\\">\\n      <p class=\\\"text-muted\\\">&copy; Copyright 2017 | kaXet app</p>\\n  </div>\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'kaXet';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, Routes } from '@angular/router';\n\n/* Services Modules */\nimport { AuthService } from './services/auth.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { UserService } from './services/user.service';\nimport { ArtistService } from './services/artist.service';\nimport { AlbumService } from './services/album.service';\nimport { SongService } from './services/song.service';\n\n/* common Modules */\nimport { ToastrService } from './common/toastr.service';\nimport { DatePipe } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { PasswordComponent } from './components/user/password/password.component';\nimport { ProfileComponent } from './components/user/profile/profile.component';\nimport { LogoutComponent } from './components/user/logout.component';\nimport { AboutComponent } from './components/about/about.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EditartistComponent } from './components/artist/editartist/editartist.component';\nimport { ListartistComponent } from './components/artist/listartist/listartist.component';\nimport { ViewartistComponent } from './components/artist/viewartist/viewartist.component';\nimport { AddartistComponent } from './components/artist/addartist/addartist.component';\nimport { EditartistphotoComponent } from './components/artist/editartistphoto/editartistphoto.component';\nimport { AddalbumComponent } from './components/album/addalbum/addalbum.component';\nimport { ListalbumComponent } from './components/album/listalbum/listalbum.component';\nimport { ViewalbumComponent } from './components/album/viewalbum/viewalbum.component';\nimport { EditalbumComponent } from './components/album/editalbum/editalbum.component';\nimport { EditalbumphotoComponent } from './components/album/editalbumphoto/editalbumphoto.component';\nimport { AddsongComponent } from './components/song/addsong/addsong.component';\nimport { ListsongComponent } from './components/song/listsong/listsong.component';\nimport { EditsongfilesComponent } from './components/song/editsongfiles/editsongfiles.component';\nimport { ViewsongComponent } from './components/song/viewsong/viewsong.component';\nimport { EditsongComponent } from './components/song/editsong/editsong.component';\n\nconst appRoutes: Routes = [\n  {path: '',redirectTo:'login',pathMatch:'full'},\n  {path:'register', component:RegisterComponent},\n  {path:'login', component:LoginComponent},\n  {path:'about', component:AboutComponent},\n  {path:'logout', component:LogoutComponent, canActivate:[AuthGuard]},\n  {path:'profile', component:ProfileComponent, canActivate:[AuthGuard]},\n  {path:'password', component:PasswordComponent, canActivate:[AuthGuard]},\n  {path:'report', component:DashboardComponent, canActivate:[AuthGuard]},\n  {path: 'addartist', canActivate: [ AuthGuard], component: AddartistComponent },\n  {path: 'editartist/:id', canActivate: [ AuthGuard], component: EditartistComponent },\n  {path: 'listartist', canActivate: [ AuthGuard], component: ListartistComponent },\n  {path: 'editartistphoto/:id', component:EditartistphotoComponent, canActivate:[AuthGuard]},\n  {path: 'viewartist/:id', canActivate: [ AuthGuard], component: ViewartistComponent },\n  {path: 'addalbum', canActivate: [ AuthGuard], component: AddalbumComponent },\n  {path: 'listalbum', canActivate: [ AuthGuard], component: ListalbumComponent },\n  {path: 'viewalbum/:id', canActivate: [ AuthGuard], component: ViewalbumComponent },\n  {path: 'editalbum/:id', canActivate: [ AuthGuard], component: EditalbumComponent },\n  {path: 'editalbumphoto/:id', component:EditalbumphotoComponent, canActivate:[AuthGuard]},\n  {path: 'addsong', canActivate: [ AuthGuard], component: AddsongComponent },\n  {path: 'listsong', canActivate: [ AuthGuard], component: ListsongComponent },\n  {path: 'editsongfiles/:id', component:EditsongfilesComponent, canActivate:[AuthGuard]},\n  {path: 'viewsong/:id', canActivate: [ AuthGuard], component: ViewsongComponent },\n  {path: 'editsong/:id', canActivate: [ AuthGuard], component: EditsongComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    PasswordComponent,\n    ProfileComponent,\n    LogoutComponent,\n    AboutComponent,\n    DashboardComponent,\n    EditartistComponent,\n    ListartistComponent,\n    ViewartistComponent,\n    AddartistComponent,\n    EditartistphotoComponent,\n    AddalbumComponent,\n    ListalbumComponent,\n    ViewalbumComponent,\n    EditalbumComponent,\n    EditalbumphotoComponent,\n    AddsongComponent,\n    ListsongComponent,\n    EditsongfilesComponent,\n    ViewsongComponent,\n    EditsongComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [ToastrService, \n    AuthService, \n    AuthGuard, \n    UserService, \n    ArtistService, \n    AlbumService, \n    SongService, \n    DatePipe],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/app.module.ts","import { Injectable } from '@angular/core';\ndeclare let toastr:any\n\n@Injectable()\nexport class ToastrService {\n\n  constructor() { }\n  success(message: string, title?: string) {\n    toastr.success(message, title)\n  }\n  info(message: string, title?: string) {\n    toastr.info(message, title)\n  }\n  warning(message: string, title?: string) {\n    toastr.warning(message, title)\n  }\n  error(message: string, title?: string) {\n    toastr.error(message, title)\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/common/toastr.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/about/about.component.css\n// module id = ../../../../../src/app/components/about/about.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n    <h1></h1>\\n</div>\\n  <div class=\\\"jumbotron\\\">\\n    <img src=\\\"../../../cassetteicon.png\\\">\\n      <h2>kaXet v1.0</h2>\\n      <p>An app for inspiring and commercial music</p>\\n  </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/about/about.component.html\n// module id = ../../../../../src/app/components/about/about.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/about/about.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/addalbum/addalbum.component.css\n// module id = ../../../../../src/app/components/album/addalbum/addalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Album</h3>\\n  </div>\\n\\n  <form [formGroup]=\\\"addAlbumForm\\\" (ngSubmit)=\\\"addAlbum(addAlbumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('artistid').invalid && addAlbumForm.get('artistid').dirty}\\\">\\n      <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist Id <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n            <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('artistid').dirty && addAlbumForm.get('artistid').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('artistid').errors.required\\\">\\n              Please enter the artist\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumname').invalid && addAlbumForm.get('albumname').dirty}\\\">\\n        <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"albumname\\\" id=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumname').dirty && addAlbumForm.get('albumname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumname').errors.required\\\">\\n                Please enter the album name\\n            </span>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumyear').invalid && addAlbumForm.get('albumyear').dirty}\\\">\\n      <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-6\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"albumyear\\\" id=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumyear').dirty && addAlbumForm.get('albumyear').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumyear').errors.required\\\">\\n              Please enter the album year\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumgenre').invalid && addAlbumForm.get('albumgenre').dirty}\\\">\\n      <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n          <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n              <option *ngFor=\\\"let a of genre\\\" >{{a}}</option>\\n          </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumgenre').dirty && addAlbumForm.get('albumgenre').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumgenre').errors.required\\\">\\n              Please select album genre\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumprice').invalid && addAlbumForm.get('albumprice').dirty}\\\">\\n      <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\">Rp</div>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"albumprice\\\" [formControl]=\\\"albumprice\\\" placeholder=\\\"Album Price\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addAlbumForm.get('albumprice').dirty && addAlbumForm.get('albumprice').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumprice').errors.required\\\">\\n              Please enter price\\n          </span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addAlbumForm.get('albumprice').errors.pattern\\\">\\n              Please enter a valid amount\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addAlbumForm.get('albumimage').invalid && addAlbumForm.get('albumimage').dirty}\\\">\\n        <label for=\\\"albumimage\\\" class=\\\"col-sm-2 control-label\\\">Album Photo</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n            <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"albumimage\\\" id=\\\"albumimage\\\" placeholder=\\\"Album image\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-5\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"addAlbumForm.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Reset</button>\\n        </div>\\n        <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n            <sup>*</sup> required\\n        </div>\\n    </div>\\n  </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/addalbum/addalbum.component.html\n// module id = ../../../../../src/app/components/album/addalbum/addalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\n\n@Component({\n  selector: 'app-addalbum',\n  templateUrl: './addalbum.component.html',\n  styleUrls: ['./addalbum.component.css']\n})\nexport class AddalbumComponent implements OnInit {\n  addAlbumForm: FormGroup;\n  userObj: any;\n  genre: any = ['Alternative', 'Blues', 'Children', 'Classical','Comedy', 'Country', 'Dance', 'Easy Listening', 'Electronic', 'Hip Hop','Christian Gospel', 'Instrumental', 'Jazz', 'Latin', 'New Age','Pop','RnB','Reggae', 'Rock', 'Soundtrack','Vocal','Others'];\n  filesToUpload: Array<File> = [];\n  albumid: String;\n  artistlist: IArtistList[];\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistid = new FormControl('', [Validators.required]);  \n  albumname = new FormControl('', [Validators.required]);\n  albumyear = new FormControl('', [Validators.required]);\n  albumgenre = new FormControl('', [Validators.required]);\n  albumprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  albumphotopath: String;\n  albumphotoname: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.getArtistList(this.userObj.userid);\n    this.albumid = '';\n    this.addAlbumForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      albumprice: this.albumprice,\n      albumimage: this.filesToUpload,\n      albumphotopath: this.albumphotopath,\n      albumphotoname: this.albumphotoname\n    });\n  }\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  addAlbum(formdata:any): void {\n    if (this.addAlbumForm.dirty && this.addAlbumForm.valid) {\n      const files: Array<File> = this.filesToUpload;\n      let theForm = this.addAlbumForm.value;\n      let lformData: FormData = new FormData();\n      console.log('Ini file: '+ files[0]['name']);\n      \n      lformData.append('albumimage',files[0],files[0]['name']);\n      console.log(lformData.getAll('albumimage'));\n      console.dir(theForm);\n      this.albumService.uploadAlbumphoto(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.toastr.error(data.message);\n          } else {\n              theForm.albumphotopath = data.filedata.albumphotopath;\n              theForm.albumphotoname = data.filedata.albumphotoname;\n              theForm.status = 'active';\n              console.log('Ini file path: '+ theForm.albumphotopath);\n              if (this.albumid !== '') {\n                theForm.albumid = this.albumid;\n              }\n              this.albumService.saveAlbum(this.userObj.userid, theForm.artistid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.toastr.error(data.message);\n                } else {\n                  this.toastr.success(data.message);\n                  this.router.navigate(['report']);\n                }\n                this.addAlbumForm.reset();\n              });\n          }   \n        });\n \n    }\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.filesToUpload);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/addalbum/addalbum.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbum/editalbum.component.css\n// module id = ../../../../../src/app/components/album/editalbum/editalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Album</h3>\\n    </div>\\n    <form [formGroup]=\\\"albumForm\\\" (ngSubmit)=\\\"saveAlbum(albumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumname').invalid && albumForm.get('albumname').dirty}\\\">\\n            <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumname').dirty && albumForm.get('albumname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} album name</span>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('artistid').invalid && albumForm.get('artistid').dirty}\\\">\\n            <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n                    <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('artistid').dirty && albumForm.get('artistid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('artistid').errors.required\\\">\\n                    Please select artist status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumyear').invalid && albumForm.get('albumyear').dirty}\\\">\\n            <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumyear').dirty && albumForm.get('albumyear').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter album year</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumgenre').invalid && albumForm.get('albumgenre').dirty}\\\">\\n            <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Album Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n                    <option *ngFor=\\\"let g of genre\\\" >{{g}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumgenre').dirty && albumForm.get('albumgenre').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumgenre').errors.required\\\">\\n                    Please select album genre\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('albumprice').invalid && albumForm.get('albumprice').dirty}\\\">\\n            <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"albumprice\\\" [formControl]=\\\"albumprice\\\" placeholder=\\\"Enter price\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('albumprice').dirty && albumForm.get('albumprice').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumprice').errors.required\\\">\\n                    Please enter price\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('albumprice').errors.pattern\\\">\\n                    Please enter a valid amount\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': albumForm.get('status').invalid && albumForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" >{{a}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"albumForm.get('status').dirty && albumForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"albumForm.get('status').errors.required\\\">\\n                    Please select album status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"albumForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbum/editalbum.component.html\n// module id = ../../../../../src/app/components/album/editalbum/editalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\n\n@Component({\n  selector: 'app-editalbum',\n  templateUrl: './editalbum.component.html',\n  styleUrls: ['./editalbum.component.css']\n})\nexport class EditalbumComponent implements OnInit {\n  albumForm: FormGroup;\n  userObj: any;\n  sts: any = ['active', 'inactive'];\n  genre: any = ['Alternative', 'Blues', 'Children', 'Classical','Comedy', 'Country', 'Dance', 'Easy Listening', 'Electronic', 'Hip Hop','Christian Gospel', 'Instrumental', 'Jazz', 'Latin', 'New Age','Pop','RnB','Reggae', 'Rock', 'Soundtrack','Vocal','Others'];\n  albumid: String;\n  artistlist: IArtistList[];\n  btnLbl: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  \n  artistid = new FormControl('', [Validators.required]);  \n  albumname = new FormControl('', [Validators.required]);\n  albumyear = new FormControl('', [Validators.required]);\n  albumgenre = new FormControl('', [Validators.required]);\n  albumprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.albumid = params['id'];\n      this.getAlbum(this.albumid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.getArtistList(this.userObj.userid);\n    this.albumForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      albumprice: this.albumprice,\n      status: this.status\n    });\n  }\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n          this.router.navigate(['listalbum']);\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.albumForm.patchValue({\n      artistid: data.artistid,\n      albumname: data.albumname,\n      albumyear: data.albumyear,\n      albumgenre: data.albumgenre,\n      albumprice: data.albumprice,\n      status: data.status\n    });\n  }\n\n  saveAlbum(formdata:any): void {\n    if (this.albumForm.valid) {\n      const theForm:any = this.albumForm.value;\n      if (this.albumid !== '') {\n        theForm.albumid = this.albumid;\n      \n      }\n      this.albumService.saveAlbum(this.userObj.userid,theForm.artistid, theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.albumid) {\n            this.albumForm.reset();\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbum/editalbum.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbumphoto/editalbumphoto.component.css\n// module id = ../../../../../src/app/components/album/editalbumphoto/editalbumphoto.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>Change Photo</h1>\\n    </div>\\n  \\n    <form [formGroup]=\\\"albumForm\\\" (ngSubmit)=\\\"updatePhoto(albumForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n\\n        <div class=\\\"col-lg-6 col-sm-6 col-12\\\">\\n            <label for=\\\"albumimage\\\" class=\\\"col-sm-3 control-label\\\"></label>\\n            <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n            <br><br>\\n            <div class=\\\"input-group\\\">\\n                <label class=\\\"input-group-btn\\\">\\n                    <span class=\\\"btn btn-primary\\\">\\n                        Browse&hellip; <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"albumimage\\\" id=\\\"albumimage\\\" style=\\\"display:none\\\">\\n                    </span>\\n                </label>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n              </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">     </label>\\n            <div class=\\\"col-sm-10\\\">\\n                <br>\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbumphoto/editalbumphoto.component.html\n// module id = ../../../../../src/app/components/album/editalbumphoto/editalbumphoto.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IAlbum } from '../../../interface/album';\n\n@Component({\n  selector: 'app-editalbumphoto',\n  templateUrl: './editalbumphoto.component.html',\n  styleUrls: ['./editalbumphoto.component.css']\n})\nexport class EditalbumphotoComponent implements OnInit {\n  albumForm: FormGroup\n  userObj: any;\n  album: IAlbum;\n  albumid: String;\n  filesToUpload: Array<File> = [];\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private albumService: AlbumService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  \n  albumphotopath = new FormControl('', [Validators.nullValidator]);\n  albumphotoname = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.albumForm = this.fb.group({\n      albumphotopath: this.albumphotopath,\n      albumphotoname: this.albumphotoname\n    });\n    this.route.params.subscribe((params: any) => {\n      this.albumid = params['id'];\n      this.getAlbum(this.albumid);\n    });\n  }\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.album = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n          this.router.navigate(['listalbum']);\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.deletedFilename = this.album.albumphotoname;\n    this.displayImg = this.album.albumphotopath;\n    this.albumForm.patchValue({\n      albumphotopath: data.albumphotopath,\n      albumphotoname: data.albumphotoname\n    });\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    this.newfile = this.filesToUpload[0]['name'];\n    console.log('content file: ' + this.filesToUpload);\n    this.uploadNewPhoto(this.filesToUpload);  \n  }\n\n  uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('albumimage',files[0],files[0]['name']);\n    this.albumService.uploadAlbumphoto(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.toastr.error(data.message);\n      } else {\n        this.displayImg = data.filedata.albumphotopath;\n        let payloadData: any = this.albumForm.value;\n        this.albumService.deleteAlbumPhoto(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.albumphotoname);\n            }   \n          });\n           \n        this.albumForm.value.albumphotopath = data.filedata.albumphotopath;\n        this.albumForm.value.albumphotoname = data.filedata.albumphotoname;\n\n        console.log('Update database photo - ' + this.displayImg);\n        this.albumService.updateAlbumphoto(this.albumid, this.albumForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n          }\n        });\n\n      }\n    });    \n  }\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/editalbumphoto/editalbumphoto.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/listalbum/listalbum.component.css\n// module id = ../../../../../src/app/components/album/listalbum/listalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>List Album</h3>\\n  </div>\\n\\n  <div class=\\\"panel panel-info\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                      <label for=\\\"albumname\\\">Album Name</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumname\\\" [formControl]=\\\"albumname\\\" placeholder=\\\"Album Name\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-12 col-md-2\\\">\\n                      <label for=\\\"albumyear\\\">Album Year</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-sm-12 col-md-3\\\">\\n                      <label for=\\\"albumgenre\\\">Genre</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"albumgenre\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>  \\n                            <option *ngFor=\\\"let g of genre\\\" >{{g}}</option>\\n                          </select>\\n                      </div>\\n                  </div>\\n              </div><br>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-sm-12 col-md-6\\\">\\n                      <label for=\\\"artistid\\\">Artist</label>\\n                      <div class=\\\"input-group col-sm-5\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\">\\n                              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n                              <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                          </select>\\n                        </div>\\n                  </div>                \\n                  <div class=\\\"col-sm-12 col-md-3\\\">\\n                      <label for=\\\"status\\\">Status</label>\\n                      <div class=\\\"input-group col-sm-10\\\">\\n                          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                          <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>  \\n                            <option *ngFor=\\\"let a of sts\\\" >{{a}}</option>\\n                          </select>\\n                      </div>\\n                  </div><br>\\n                  <div class=\\\"col-sm-12 col-md-2\\\">\\n                      <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                  </div>                \\n              </div>\\n          </form>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"albums && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No album found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems like you havn't entered any albums for the selected criteria. Please add the album <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddAlbums()\\\">here</a>.\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"albums && totalrows > 0\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                          <th width=\\\"20%\\\">Artist</th>\\n                          <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th>\\n                          <th width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                          <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th width=\\\"20%\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let albm of albums; let albIndex = index'>\\n                          <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showAlbum(albm._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ albm.albumname}}</a></td>\\n                          <td>{{ albm.artist }}</td>\\n                          <td>{{ albm.albumyear}}</td>\\n                          <td>{{ albm.albumgenre}}</td>\\n                          <td class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':true }}</td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editAlbumPhoto(albm._id)\\\">\\n                                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Album Photo\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editAlbum(albm._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Album Data\\\">\\n                                  <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(albIndex, albm._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Album\\\">\\n                                  <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                          </td>\\n                      </tr>\\n                      \\n                  </tbody>\\n              </table>\\n          </div>\\n\\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div>\\n\\n      </div>\\n  </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/listalbum/listalbum.component.html\n// module id = ../../../../../src/app/components/album/listalbum/listalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAggAlbum } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\n\n@Component({\n  selector: 'app-listalbum',\n  templateUrl: './listalbum.component.html',\n  styleUrls: ['./listalbum.component.css']\n})\nexport class ListalbumComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artistlist: IArtistList[];\n  albums: IAggAlbum[];\n  song: ISong;\n  totalrows: number;\n  pgCounter: number;\n  qalbumname: String;\n  qartistid: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  genre: any = ['Alternative', 'Blues', 'Children', 'Classical','Comedy', 'Country', 'Dance', 'Easy Listening', 'Electronic', 'Hip Hop','Christian Gospel', 'Instrumental', 'Jazz', 'Latin', 'New Age','Pop','RnB','Reggae', 'Rock', 'Soundtrack','Vocal','Others'];\n  sts: any = ['active', 'inactive'];\n  //artistname: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistid = new FormControl('',[Validators.nullValidator]);\n  albumname = new FormControl('',[Validators.nullValidator]);\n  albumyear = new FormControl('',[Validators.nullValidator]);\n  albumgenre = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('active', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      artistid: this.artistid,\n      albumname: this.albumname,\n      albumyear: this.albumyear,\n      albumgenre: this.albumgenre,\n      status: this.status\n    });\n    this.getArtistList(this.userObj.userid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistid = params['artistid'] || '';\n      this.qalbumname = params['albumname'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qalbumgenre = params['albumgenre'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistid = this.qartistid;\n      payload.albumname = this.qalbumyear;\n      payload.albumyear = this.qalbumyear;\n      payload.albumgenre = this.qalbumgenre;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n\n      this.reportForm.patchValue({\n        artistid: this.qartistid,\n        albumname: this.qalbumname,\n        albumyear: this.qalbumyear,\n        albumgenre: this.qalbumgenre,\n        status: this.qstatus\n      });\n    })\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.albumService.getAggAlbums(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        //this.albums = data.data.docs;\n        this.albums = data.data;\n        //console.log(this.albums);\n        //this.totalrows = +data.data.totalcount;\n        this.totalrows = +data.totalcount;\n        //console.log(this.totalrows);\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistid = formval.artistid;\n        this.qalbumname = formval.albumname;\n        this.qalbumyear = formval.albumyear;\n        this.qalbumgenre = formval.albumgenre;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Albums Result';\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listalbum'],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listalbum'],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n/*   getArtistName(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          return data.data[0].artistname;\n        } else {\n          return 'Artist id is incorrect in the URL';\n        }\n      }\n    });\n  } */\n  showAlbum(albumid): void {\n    this.router.navigate([`viewalbum/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, albumid: string) {\n    var totalsong: number;\n\n    let payload: any = {};\n    payload.albumid = albumid;\n    this.songService.getSongs(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.toastr.error(data.message);\n      } else {\n        totalsong = +data.data.total;\n        if (totalsong > 0) {\n          this.toastr.warning('Can not delete album. It already has songs.');\n        } else {\n          if(confirm('Do you really want to delete this record?')){\n            this.albumService.deleteAlbum(albumid)\n            .subscribe(data => {\n              if (data.success === false) {\n                if (data.errcode){\n                  this.authService.logout();\n                  this.router.navigate(['login']);\n                }\n                this.toastr.error(data.message);\n              } else {\n                this.albums.splice(idx, 1);\n                this.totalrows = this.totalrows - 1;\n                this.toastr.success(data.message);  \n              }\n            });\n          }\n        }\n      }\n    });\n  }\n  \n  editAlbum(albumid): void {\n    this.router.navigate([`editalbum/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n  editAlbumPhoto(albumid): void {\n    this.router.navigate([`editalbumphoto/${albumid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          albumname: this.qalbumname,\n          albumyear: this.qalbumyear,\n          albumgenre: this.qalbumgenre, \n          status: this.qstatus, \n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  toaddAlbums(): void {\n    this.router.navigate(['/addalbum']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/listalbum/listalbum.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/viewalbum/viewalbum.component.css\n// module id = ../../../../../src/app/components/album/viewalbum/viewalbum.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Album Details</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumname\\\" class=\\\"col-sm-2 control-label\\\">Album Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ album?.albumname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumyear\\\" class=\\\"col-sm-2 control-label\\\">Album Year</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ album?.albumyear }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumgenre\\\" class=\\\"col-sm-2 control-label\\\">Album Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ album?.albumgenre }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumprice\\\" class=\\\"col-sm-2 control-label\\\">Album Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <div class=\\\"form-ele\\\">{{ album?.albumprice | currency: 'IDR':true }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ album?.status }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"albumphoto\\\" class=\\\"col-sm-2 control-label\\\">Photo</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <img src=\\\"{{ album?.albumphotopath }}\\\" class=\\\"rounded float-right\\\" width=\\\"170\\\" height=\\\"170\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"listsong\\\" class=\\\"col-sm-2 control-label\\\">Song</label>\\n            <div class=\\\"input-group col-sm-10\\\" *ngIf=\\\"songs && totalrows > 0\\\">\\n                <div class=\\\"col-sm-12 col-md-10\\\">\\n                    <i>({{ totalrows }} songs found) </i> \\n                </div><br>\\n                <div class=\\\"col-sm-12 col-md-10\\\">\\n                    <div class=\\\"table-responsive\\\">\\n                        <table class=\\\"table table-striped\\\" width=\\\"50%\\\">\\n                            <thead>\\n                                <tr>\\n                                    <th width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Name</a></th>\\n                                    <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songpublish')\\\">Published?</a></th>\\n                                    <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songbuy')\\\">Total Purchase</a></th>\\n                                    <th width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                                    <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                                </tr>\\n                            </thead>\\n                            <tbody>\\n                                <tr *ngFor='let song of songs; let songIndex = index'>\\n                                    <td>{{ song.songname}}</td>\\n                                    <td>{{ song.songpublish}}</td>\\n                                    <td>{{ song.songbuy}}</td>\\n                                    <td class=\\\"text-right\\\">{{ song.songprice | currency: 'IDR':true }}</td>\\n                                    <td>{{ song.status}}</td>\\n                                </tr>\\n                                \\n                            </tbody>\\n                        </table>\\n                    </div>\\n            \\n                    <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n                        <nav aria-label=\\\"Page navigation\\\">\\n                            <ul class=\\\"pagination\\\">\\n                                <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                    <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                                </li>\\n                            </ul>\\n                        </nav>\\n                    </div>\\n            \\n                </div>\\n            </div>      \\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  \\n  </div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/viewalbum/viewalbum.component.html\n// module id = ../../../../../src/app/components/album/viewalbum/viewalbum.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\n\n@Component({\n  selector: 'app-viewalbum',\n  templateUrl: './viewalbum.component.html',\n  styleUrls: ['./viewalbum.component.css']\n})\nexport class ViewalbumComponent implements OnInit {\n  artist: IArtist;\n  album: IAlbum;\n  artistid: String;\n  albumid: String;\n  userObj: any;\n  songs: ISong[];\n  totalrows: number;\n  pgCounter: number;\n  qsongname: String;\n  qalbumid: String;\n\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n\n  private sub: Subscription;\n\n  constructor(\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,    \n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let albumid = params['id'];\n        this.albumid = albumid;\n      });\n    console.log(this.albumid);  \n    this.getAlbum(this.albumid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qalbumid = params['albumid'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      this.qalbumid = this.albumid;\n      payload.albumid = this.qalbumid;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n    })\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getAlbum(id){\n    this.albumService.getAlbum(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.album = data.data[0];\n          this.getArtistName(this.album.artistid);\n        } else {\n          this.toastr.error('Album id is incorrect in the URL');\n        }\n        \n      }\n    });\n  }\n  \n  getArtistName(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n      }\n    });\n  }\n\n  fetchReport(userid, formval) {\n    this.songService.getSongs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.songs = data.data.docs;\n        this.totalrows = +data.data.total;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qalbumid = formval.albumid;\n        this.reportTitle = 'Songs Result';\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate([`viewalbum/${this.albumid}`],\n      {\n        queryParams: { albumid: this.qalbumid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewalbum/${this.albumid}`],\n      {\n        queryParams: { albumid: this.qalbumid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listalbum'], { preserveQueryParams: true });\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/album/viewalbum/viewalbum.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/addartist/addartist.component.css\n// module id = ../../../../../src/app/components/artist/addartist/addartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Artist</h3>\\n  </div>\\n\\n  <form [formGroup]=\\\"addArtistForm\\\" (ngSubmit)=\\\"addArtist(addArtistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addArtistForm.get('artistname').invalid && addArtistForm.get('artistname').dirty}\\\">\\n        <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Artist Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"artistname\\\" id=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"addArtistForm.get('artistname').dirty && addArtistForm.get('artistname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addArtistForm.get('artistname').errors.required\\\">\\n                Please enter the artist name\\n            </span>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addArtistForm.get('artistimage').invalid && addArtistForm.get('artistimage').dirty}\\\">\\n        <label for=\\\"artistimage\\\" class=\\\"col-sm-2 control-label\\\">Artist Photo</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n            <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"artistimage\\\" id=\\\"artistimage\\\" placeholder=\\\"Artistimage\\\">\\n        </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-5\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"addArtistForm.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n            <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Reset</button>\\n        </div>\\n        <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n            <sup>*</sup> required\\n        </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/addartist/addartist.component.html\n// module id = ../../../../../src/app/components/artist/addartist/addartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-addartist',\n  templateUrl: './addartist.component.html',\n  styleUrls: ['./addartist.component.css']\n})\nexport class AddartistComponent implements OnInit {\n  addArtistForm: FormGroup;\n  userObj: any;\n  //status: any = ['active', 'inactive'];\n  filesToUpload: Array<File> = [];\n  artistid: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  \n  artistname = new FormControl('', [Validators.required]);\n  artistphotopath: String;\n  artistphotoname: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.artistid = '';\n    this.addArtistForm = this.fb.group({\n      artistname: this.artistname,\n      artistimage: this.filesToUpload,\n      artistphotopath: this.artistphotopath,\n      artistphotoname: this.artistphotoname\n    });\n  }\n\n  addArtist(formdata:any): void {\n    if (this.addArtistForm.dirty && this.addArtistForm.valid) {\n      const files: Array<File> = this.filesToUpload;\n      let theForm = this.addArtistForm.value;\n      let lformData: FormData = new FormData();\n      console.log('Ini file: '+ files[0]['name']);\n      \n      lformData.append('artistimage',files[0],files[0]['name']);\n      console.log(lformData.getAll('artistimage'));\n      console.dir(theForm);\n      this.artistService.uploadArtistphoto(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.toastr.error(data.message);\n          } else {\n              theForm.artistphotopath = data.filedata.artistphotopath;\n              theForm.artistphotoname = data.filedata.artistphotoname;\n              theForm.status = 'active';\n              console.log('Ini file path: '+ theForm.artistphotopath);\n              if (this.artistid !== '') {\n                theForm.artistid = this.artistid;\n              }\n              this.artistService.saveArtist(this.userObj.userid, theForm)\n              .subscribe(data => {\n                if (data.success === false) {\n                  this.toastr.error(data.message);\n                } else {\n                  this.toastr.success(data.message);\n                  this.router.navigate(['report']);\n                }\n                this.addArtistForm.reset();\n              });\n          }   \n        });\n \n    }\n  }\n\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.filesToUpload);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/addartist/addartist.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartist/editartist.component.css\n// module id = ../../../../../src/app/components/artist/editartist/editartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Artist</h3>\\n    </div>\\n    <form [formGroup]=\\\"artistForm\\\" (ngSubmit)=\\\"saveArtist(artistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': artistForm.get('artistname').invalid && artistForm.get('artistname').dirty}\\\">\\n            <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"artistForm.get('artistname').dirty && artistForm.get('artistname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} artist name</span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': artistForm.get('status').invalid && artistForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" >{{a}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"artistForm.get('status').dirty && artistForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"artistForm.get('status').errors.required\\\">\\n                    Please select artist status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"artistForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartist/editartist.component.html\n// module id = ../../../../../src/app/components/artist/editartist/editartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-editartist',\n  templateUrl: './editartist.component.html',\n  styleUrls: ['./editartist.component.css']\n})\nexport class EditartistComponent implements OnInit {\n  artistForm: FormGroup;\n  userObj: any;\n  sts: any = ['active', 'inactive'];\n  artistid: String;\n  btnLbl: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistname = new FormControl('', [Validators.required]);\n  status = new FormControl('', [Validators.required]);\n  \n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.artistid = params['id'];\n      this.getArtist(this.artistid);\n      this.btnLbl = \"Update\"\n    });\n    \n    this.userObj =  this.authService.currentUser;\n    this.artistForm = this.fb.group({\n      artistname: this.artistname,\n      status: this.status\n    });\n  }\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n          this.router.navigate(['listartist']);\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.artistForm.patchValue({\n      artistname: data.artistname,\n      status: data.status\n    });\n  }\n\n  saveArtist(formdata:any): void {\n    if (this.artistForm.valid) {\n      const theForm:any = this.artistForm.value;\n      if (this.artistid !== '') {\n        theForm.artistid = this.artistid;\n      \n      }\n      this.artistService.saveArtist(this.userObj.userid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.artistid) {\n            this.artistForm.reset();\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartist/editartist.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartistphoto/editartistphoto.component.css\n// module id = ../../../../../src/app/components/artist/editartistphoto/editartistphoto.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h1>Change Photo</h1>\\n  </div>\\n\\n  <form [formGroup]=\\\"artistForm\\\" (ngSubmit)=\\\"updatePhoto(artistForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n<!--       <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('imgpath').invalid && profileForm.get('imgpath').dirty}\\\">\\n          <label for=\\\"imgpath\\\" class=\\\"col-sm-2 control-label\\\">Image Path</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imgpath\\\" [formControl]=\\\"imgpath\\\" placeholder=\\\"Img Path\\\">\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('imgoriname').invalid && profileForm.get('imgoriname').dirty}\\\">\\n          <label for=\\\"imgoriname\\\" class=\\\"col-sm-2 control-label\\\">Image Oriname</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"imgoriname\\\" [formControl]=\\\"imgoriname\\\" placeholder=\\\"Img Oriname\\\">\\n          </div>\\n      </div> -->\\n      <div class=\\\"col-lg-6 col-sm-6 col-12\\\">\\n          <label for=\\\"artistimage\\\" class=\\\"col-sm-3 control-label\\\"></label>\\n          <img src=\\\"{{ this.displayImg }}\\\" width=\\\"170\\\" height=\\\"170\\\">\\n          <br><br>\\n          <div class=\\\"input-group\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input type=\\\"file\\\" (change)=\\\"fileChangeEvent($event)\\\" name=\\\"artistimage\\\" id=\\\"artistimage\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newfile }}\\\">  \\n            </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\">     </label>\\n          <div class=\\\"col-sm-10\\\">\\n              <br>\\n              <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartistphoto/editartistphoto.component.html\n// module id = ../../../../../src/app/components/artist/editartistphoto/editartistphoto.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtist } from '../../../interface/artist';\n\n@Component({\n  selector: 'app-editartistphoto',\n  templateUrl: './editartistphoto.component.html',\n  styleUrls: ['./editartistphoto.component.css']\n})\nexport class EditartistphotoComponent implements OnInit {\n  artistForm: FormGroup\n  userObj: any;\n  artist: IArtist;\n  artistid: String;\n  filesToUpload: Array<File> = [];\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  artistphotopath = new FormControl('', [Validators.nullValidator]);\n  artistphotoname = new FormControl('', [Validators.nullValidator]);\n  newfile: String;\n  displayImg: String;\n  deletedFilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.artistForm = this.fb.group({\n      artistphotopath: this.artistphotopath,\n      artistphotoname: this.artistphotoname\n    });\n    this.route.params.subscribe((params: any) => {\n      this.artistid = params['id'];\n      this.getArtist(this.artistid);\n    });\n  }\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n          this.router.navigate(['listartist']);\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.deletedFilename = this.artist.artistphotoname;\n    this.displayImg = this.artist.artistphotopath;\n    this.artistForm.patchValue({\n      artistphotopath: data.artistphotopath,\n      artistphotoname: data.artistphotoname\n    });\n  }\n  fileChangeEvent(fileInput:any): void {\n    this.filesToUpload = <Array<File>>fileInput.target.files;\n    this.newfile = this.filesToUpload[0]['name'];\n    console.log('content file: ' + this.filesToUpload);\n    this.uploadNewPhoto(this.filesToUpload);  \n  }\n\n  uploadNewPhoto(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('artistimage',files[0],files[0]['name']);\n    this.artistService.uploadArtistphoto(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.toastr.error(data.message);\n      } else {\n        this.displayImg = data.filedata.artistphotopath;\n        let payloadData: any = this.artistForm.value;\n        this.artistService.deleteArtistPhoto(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              //this.toastr.error(data.message);\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.artistphotoname);\n            }   \n          });\n           \n        this.artistForm.value.artistphotopath = data.filedata.artistphotopath;\n        this.artistForm.value.artistphotoname = data.filedata.artistphotoname;\n\n        console.log('Update database photo - ' + this.displayImg);\n        this.artistService.updateArtistphoto(this.artistid, this.artistForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            console.log('Success update database photo - ' + this.displayImg)\n            this.toastr.success(data.message);\n          }\n        });\n\n      }\n    });    \n  }\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/editartistphoto/editartistphoto.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/listartist/listartist.component.css\n// module id = ../../../../../src/app/components/artist/listartist/listartist.component.css\n// module chunks = main","module.exports = \"<script>\\n    $(document).ready(function(){\\n        $('[data-toggle=\\\"tooltip\\\"]').tooltip();   \\n    });\\n</script>\\n    \\n<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>List Artist</h3>\\n    </div>\\n\\n    <div class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12 col-md-7\\\">\\n                        <label for=\\\"artistname\\\">Artist Name</label>\\n                        <div class=\\\"input-group col-sm-10\\\">\\n                            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"artistname\\\" [formControl]=\\\"artistname\\\" placeholder=\\\"Artist Name\\\">\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-sm-12 col-md-3\\\">\\n                        <label for=\\\"status\\\">Status</label>\\n                        <div class=\\\"input-group col-sm-10\\\">\\n                            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                            <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                                <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>\\n                                <option *ngFor=\\\"let a of sts\\\" >{{a}}</option>\\n                            </select>\\n                        </div>\\n                    </div><br>\\n                    <div class=\\\"col-sm-12 col-md-2\\\">\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n                    </div> \\n                </div>\\n            </form>\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"panel panel-danger\\\" *ngIf=\\\"artists && totalrows < 1\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">No artist found</h3> \\n        </div>\\n  \\n        <div class=\\\"panel-body\\\">\\n            It seems like you havn't entered any artists for the selected criteria. Please add the artist <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddArtists()\\\">here</a>.\\n        </div>\\n    </div>\\n  \\n  \\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"artists && totalrows > 0\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n        </div>\\n        <div class=\\\"panel-body\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped\\\">\\n                    <thead>\\n                        <tr>\\n                            <th width=\\\"50%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('artistname')\\\">Artist Name</a></th>\\n                            <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortArtist('status')\\\">Status</a></th>\\n                            <th width=\\\"20%\\\">Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor='let artst of artists; let artIndex = index'>\\n                            <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showArtist(artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ artst.artistname}}</a></td>\\n                            <td>{{ artst.status}}</td>\\n                            <td>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editArtistPhoto(artst._id)\\\">\\n                                    <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Photo\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editArtist(artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Artist Data\\\">\\n                                    <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                                <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(artIndex, artst._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Artist\\\">\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                        \\n                    </tbody>\\n                </table>\\n            </div>\\n  \\n            <div style=\\\"text-align:center\\\" *ngIf=\\\"artists && totalrows > 10\\\">\\n                <nav aria-label=\\\"Page navigation\\\">\\n                    <ul class=\\\"pagination\\\">\\n                        <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                            <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\"class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                        </li>\\n                    </ul>\\n                </nav>\\n            </div>\\n  \\n        </div>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/listartist/listartist.component.html\n// module id = ../../../../../src/app/components/artist/listartist/listartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtist } from '../../../interface/artist';\n\n@Component({\n  selector: 'app-listartist',\n  templateUrl: './listartist.component.html',\n  styleUrls: ['./listartist.component.css']\n})\nexport class ListartistComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artists: IArtist[];\n  totalrows: number;\n  pgCounter: number;\n  qartistname: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  sts: any = ['active', 'inactive'];\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistname = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('active', [Validators.nullValidator]);\n  //startdt = new FormControl({value: '', disabled: true});\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      artistname: this.artistname,\n      status: this.status\n    });\n\n    this.route.queryParams.forEach((params: Params) => {\n      this.qartistname = params['artistname'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n//      if(this.qstatus !== '') {\n        let payload: any = {};\n        payload.status = this.qstatus;\n//        if( (this.qartistname !== '')){\n          payload.artistname = this.qartistname;\n//        }\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n\n        this.reportForm.patchValue({\n          artistname: this.qartistname,\n          status: this.qstatus\n        });\n//      }\n    })\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.artistService.getArtists(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.artists = data.data.docs;\n        this.totalrows = +data.data.total;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistname = formval.artistname;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Artists Result';\n        \n        /* if (formval.status === 'active') {\n          this.reportTitle = 'Selected active Artists'\n        } else {\n          this.reportTitle = 'Selected inactive Artists'\n        } */\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listartist'],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: page, sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  showArtist(artistid): void {\n    this.router.navigate([`viewartist/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  confirmDel(idx: number, artistid: string) {\n    var totalalbum: number;\n    \n    let payload: any = {};\n    payload.artistid = artistid;\n    this.albumService.getAlbums(this.userObj.userid, payload)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.toastr.error(data.message);\n      } else {\n        totalalbum = +data.data.total;\n        if (totalalbum > 0) {\n          this.toastr.warning('Can not delete artist. It already has albums.');\n        } else {\n          if(confirm('Do you really want to delete this record?')){\n            this.artistService.deleteArtist(artistid)\n            .subscribe(data => {\n              if (data.success === false) {\n                if (data.errcode){\n                  this.authService.logout();\n                  this.router.navigate(['login']);\n                }\n                this.toastr.error(data.message);\n              } else {\n                this.artists.splice(idx, 1);\n                this.totalrows = this.totalrows - 1;\n                this.toastr.success(data.message);\n              }\n            });\n          }\n        }\n      }\n    });    \n  }\n\n  editArtist(artistid): void {\n    this.router.navigate([`editartist/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n  editArtistPhoto(artistid): void {\n    this.router.navigate([`editartistphoto/${artistid}`],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  sortArtist(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listartist'],\n      {\n        queryParams: { artistname: this.qartistname, status: this.qstatus, page: this.qpage || 1, sortby: this.qsort }\n      }\n    );\n  }\n\n  toaddArtists(): void {\n    this.router.navigate(['/addartist']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/listartist/listartist.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/viewartist/viewartist.component.css\n// module id = ../../../../../src/app/components/artist/viewartist/viewartist.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h1>Artist Details</h1>\\n  </div>\\n  <form class=\\\"form-horizontal\\\">\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"artistname\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <div class=\\\"form-ele\\\">{{ artist?.artistname }}</div>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n              <div class=\\\"form-ele\\\">{{ artist?.status }}</div>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"artistphoto\\\" class=\\\"col-sm-2 control-label\\\">Photo</label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n            <img src=\\\"{{ artist?.artistphotopath }}\\\" class=\\\"rounded float-right\\\" width=\\\"170\\\" height=\\\"170\\\">\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label for=\\\"listalbum\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n          <div class=\\\"input-group col-sm-10\\\" *ngIf=\\\"albums && totalrows > 0\\\">\\n              <div class=\\\"col-sm-12 col-md-10\\\">\\n                  <i>({{ totalrows }} albums found) </i> \\n              </div><br>\\n              <div class=\\\"col-sm-12 col-md-10\\\">\\n                  <div class=\\\"table-responsive\\\">\\n                      <table class=\\\"table table-striped\\\" width=\\\"50%\\\">\\n                          <thead>\\n                              <tr>\\n                                  <th width=\\\"30%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumname')\\\">Album Name</a></th>\\n                                  <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumyear')\\\">Year</a></th>\\n                                  <th width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumgenre')\\\">Genre</a></th>\\n                                  <th width=\\\"10%\\\" class=\\\"text-right\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('albumprice')\\\">Price</a></th>\\n                                  <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th>\\n                              </tr>\\n                          </thead>\\n                          <tbody>\\n                              <tr *ngFor='let albm of albums; let albIndex = index'>\\n                                  <td>{{ albm.albumname}}</td>\\n                                  <td>{{ albm.albumyear}}</td>\\n                                  <td>{{ albm.albumgenre}}</td>\\n                                  <td class=\\\"text-right\\\">{{ albm.albumprice | currency: 'IDR':true }}</td>\\n                                  <td>{{ albm.status}}</td>\\n                              </tr>\\n                              \\n                          </tbody>\\n                      </table>\\n                  </div>\\n        \\n                  <div style=\\\"text-align:center\\\" *ngIf=\\\"albums && totalrows > 10\\\">\\n                      <nav aria-label=\\\"Page navigation\\\">\\n                          <ul class=\\\"pagination\\\">\\n                              <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                                  <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                              </li>\\n                          </ul>\\n                      </nav>\\n                  </div>\\n        \\n              </div>\\n          </div>      \\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n              <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/viewartist/viewartist.component.html\n// module id = ../../../../../src/app/components/artist/viewartist/viewartist.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IArtist } from '../../../interface/artist';\nimport { IAlbum } from '../../../interface/album';\n\n@Component({\n  selector: 'app-viewartist',\n  templateUrl: './viewartist.component.html',\n  styleUrls: ['./viewartist.component.css']\n})\nexport class ViewartistComponent implements OnInit {\n  artist: IArtist;\n  artistid: String;\n  userObj: any;\n  albums: IAlbum[];\n  private sub: Subscription;\n  totalrows: number;\n  pgCounter: number;\n  qalbumname: String;\n  qartistid: String;\n  qalbumyear: String;\n  qalbumgenre: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  reportTitle: String;\n\n  constructor(\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.sub = this.route.params.subscribe(\n      params => {\n        let artistid = params['id'];\n        this.artistid = artistid;\n        this.getArtist(artistid);\n      });\n      this.route.queryParams.forEach((params: Params) => {\n        this.qartistid = params['artistid'] || '';\n        this.qpage = params['page'] || '';\n        this.qsort = params['sortby'] || '';\n\n        let payload: any = {};\n        this.qartistid = this.artistid;\n        payload.artistid = this.qartistid;\n        payload.page = this.qpage;\n        payload.sortby = this.qsort;\n        this.fetchReport(this.userObj.userid, payload);\n      })\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n  getArtist(id){\n    this.artistService.getArtist(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.artist = data.data[0];\n        } else {\n          this.toastr.error('Artist id is incorrect in the URL');\n        }\n        \n      }\n    });\n  }\n\n  fetchReport(userid, formval) {\n    this.albumService.getAlbums(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.albums = data.data.docs;\n        this.totalrows = +data.data.total;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n        \n        this.qartistid = formval.artistid;\n        this.reportTitle = 'Albums Result';\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate([`viewartist/${this.artistid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortAlbum(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate([`viewartist/${this.artistid}`],\n      {\n        queryParams: { artistid: this.qartistid,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listartist'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/artist/viewartist/viewartist.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Dashboard</h3>\\n  </div>\\n\\n  <form class=\\\"form-horizontal\\\">\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"labelname\\\" class=\\\"col-sm-2 control-label\\\">Label Name</label>\\n        <div class=\\\"input-group col-sm-6\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n            <div class=\\\"form-ele\\\">{{ this.name }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n        <div class=\\\"input-group col-sm-6\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n            <div class=\\\"form-ele\\\">{{ this.email }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n      <div class=\\\"input-group col-sm-6\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-earphone\\\"></i></div>\\n          <div class=\\\"form-ele\\\">{{ this.contactno }}</div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"balance\\\" class=\\\"col-sm-2 control-label\\\">Balance</label>\\n        <div class=\\\"input-group col-sm-6\\\">\\n            <div class=\\\"input-group-addon\\\">Rp</div>\\n            <div class=\\\"form-ele\\\">{{ this.balance }}</div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label class=\\\"col-sm-2 control-label\\\"></label>\\n        <div class=\\\"col-sm-7\\\">\\n          <!-- You have {{ this.totalrows }} active artists. To see the details, click <a style=\\\"cursor:pointer\\\" (click)=\\\"toArtists()\\\">here</a>. -->\\n            You have <b><i><a style=\\\"cursor:pointer\\\" (click)=\\\"toArtists()\\\">({{ this.totalrows }})</a></i></b> active artists, <b><i><a style=\\\"cursor:pointer\\\" (click)=\\\"toAlbums()\\\">({{ this.totalalbums }})</a></i></b> active albums, \\n            and <b><i><a style=\\\"cursor:pointer\\\" (click)=\\\"toSongs()\\\">({{ this.totalsongs }})</a></i></b> active songs.\\n        </div>\\n    </div>\\n  </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/components/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../common/toastr.service'\nimport { ArtistService } from '../../services/artist.service';\nimport { AlbumService } from '../../services/album.service';\nimport { SongService } from '../../services/song.service';\nimport { AuthService } from '../../services/auth.service';\nimport { IArtist } from '../../interface/artist';\nimport { IAlbum } from '../../interface/album';\nimport { IUser } from '../../interface/user';\nimport { UserService } from '../../services/user.service';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  artists: IArtist[];\n  albums: IAlbum[];  \n  user: IUser;\n  private sub: Subscription;\n  userObj: any;\n  totalrows: number;\n  totalalbums: number;\n  totalsongs: number;\n\n  constructor(\n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private userService: UserService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  name: String;\n  email: String;\n  contactno: String;\n  balance: Number;\n  \n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.name = this.userObj.name;\n\n    this.userService.getUser(this.userObj.userid).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.email = this.user.email;\n        this.contactno = this.user.contactno;\n        this.balance = this.user.balance;\n      }\n    });\n\n    let payload: any = {};\n    payload.status = 'active';\n    this.fetchReport(this.userObj.userid, payload);\n  }\n\n  fetchReport(userid, formval) {\n    this.artistService.getArtists(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.artists = data.data.docs;\n        this.totalrows = +data.data.total;\n        this.albumService.getAlbums(userid, formval)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.albums = data.data.docs;\n            this.totalalbums = +data.data.total;\n            this.songService.getSongs(userid, formval)\n            .subscribe(data => {\n              if (data.success === false) {\n                if (data.errcode){\n                  this.authService.logout();\n                  this.router.navigate(['login']);\n                }\n                this.toastr.error(data.message);\n              } else {\n                this.totalsongs = +data.data.total;\n              }\n            });\n          }\n        });\n      }\n    });\n  }\n\n  toArtists(): void {\n    this.router.navigate(['/listartist']);\n  }\n  toAlbums(): void {\n    this.router.navigate(['/listalbum']);\n  }\n  toSongs(): void {\n    this.router.navigate(['/listsong']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/dashboard/dashboard.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/navbar/navbar.component.css\n// module id = ../../../../../src/app/components/navbar/navbar.component.css\n// module chunks = main","module.exports = \"<!-- Fixed navbar -->\\n<nav class=\\\"navbar navbar-default navbar-fixed-top\\\">\\n  <div class=\\\"container\\\">\\n      <div class=\\\"navbar-header\\\">\\n          <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbar\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"navbar\\\">\\n              <span class=\\\"sr-only\\\">Toggle navigation</span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n              <span class=\\\"icon-bar\\\"></span>\\n          </button>\\n          <a class=\\\"navbar-brand\\\" *ngIf=\\\"!authService.isLoggedIn()\\\" routerLink=\\\"login\\\">kaXet</a>\\n          <a class=\\\"navbar-brand\\\" *ngIf=\\\"authService.isLoggedIn()\\\" routerLink=\\\"report\\\">kaXet</a>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n          <ul class=\\\"nav navbar-nav\\\">\\n              \\n<!--               <li ><a routerLink=\\\"report\\\" *ngIf=\\\"authService.isLoggedIn()\\\" routerLinkActive=\\\"active\\\">Report</a></li>\\n              <li><a routerLink=\\\"editexpense\\\" *ngIf=\\\"authService.isLoggedIn()\\\" routerLinkActive=\\\"active\\\">Add Expense</a></li> -->\\n              <li><a routerLink=\\\"about\\\" routerLinkActive=\\\"active\\\">About</a></li>\\n              <li *ngIf=\\\"authService.isLoggedIn()\\\">\\n                  <ul class=\\\"menu\\\">\\n                      <li>\\n                          Artist\\n                          <ul>\\n                              <li routerLink=\\\"addartist\\\" routerLinkActive=\\\"active\\\">Add Artist</li>\\n                              <li routerLink=\\\"listartist\\\" routerLinkActive=\\\"active\\\">Manage Artist</li>\\n                          </ul>\\n                      </li>\\n                      <li>\\n                        Album\\n                        <ul>\\n                            <li routerLink=\\\"addalbum\\\" routerLinkActive=\\\"active\\\">Add Album</li>\\n                            <li routerLink=\\\"listalbum\\\" routerLinkActive=\\\"active\\\">Manage Album</li>\\n                        </ul>\\n                    </li>\\n                    <li>\\n                        Song\\n                        <ul>\\n                            <li routerLink=\\\"addsong\\\" routerLinkActive=\\\"active\\\">Add Song</li>\\n                            <li routerLink=\\\"listsong\\\" routerLinkActive=\\\"active\\\">Manage Song</li>\\n                        </ul>\\n                    </li>\\n                  </ul>\\n              </li>\\n          </ul>\\n          <ul class=\\\"nav navbar-nav navbar-right\\\">\\n              <li *ngIf=\\\"!authService.isLoggedIn()\\\">\\n                  <a routerLink=\\\"login\\\" routerLinkActive=\\\"active\\\">Log In</a>\\n              </li>\\n              <li *ngIf=\\\"authService.isLoggedIn()\\\">\\n                  <ul class=\\\"menu\\\">\\n                      <li>\\n                          Welcome {{ authService.currentUser.name }}\\n                          <ul>\\n                              <li routerLink=\\\"profile\\\" routerLinkActive=\\\"active\\\">My Profile</li>\\n                              <li routerLink=\\\"password\\\" routerLinkActive=\\\"active\\\">Change Password</li>\\n                              <li routerLink=\\\"logout\\\" routerLinkActive=\\\"active\\\">Logout</li>\\n                          </ul>\\n                      </li>\\n                  </ul>\\n              </li>\\n          </ul>\\n      </div>\\n  </div>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/navbar/navbar.component.html\n// module id = ../../../../../src/app/components/navbar/navbar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/navbar/navbar.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/addsong/addsong.component.css\n// module id = ../../../../../src/app/components/song/addsong/addsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Add Song</h3>\\n  </div>\\n\\n  <form [formGroup]=\\\"addSongForm\\\" (ngSubmit)=\\\"addSong(addSongForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('artistid').invalid && addSongForm.get('artistid').dirty}\\\">\\n      <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n            <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('artistid').dirty && addSongForm.get('artistid').errors\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('artistid').errors.required\\\">\\n            Please enter the artist\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('albumid').invalid && addSongForm.get('albumid').dirty}\\\">\\n      <label for=\\\"albumid\\\" class=\\\"col-sm-2 control-label\\\">Album<sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n        <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n        <select class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n            <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the album</option>\\n            <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n        </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('albumid').dirty && addSongForm.get('albumid').errors\\\">\\n        <span class=\\\"col-sm-2\\\"></span>\\n        <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('albumid').errors.required\\\">\\n            Please enter the album\\n        </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songname').invalid && addSongForm.get('songname').dirty}\\\">\\n      <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name <sup>*</sup></label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"songname\\\" id=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songname').dirty && addSongForm.get('songname').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songname').errors.required\\\">\\n              Please enter the song name\\n          </span>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <textarea class=\\\"form-control\\\" id=\\\"songlyric\\\" rows=\\\"10\\\" [formControl]=\\\"songlyric\\\" placeholder=\\\"Song Lyric\\\"></textarea>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songgenre').invalid && addSongForm.get('songgenre').dirty}\\\">\\n      <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n          <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n              <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>\\n              <option *ngFor=\\\"let a of genre\\\" >{{a}}</option>\\n          </select>\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songgenre').dirty && addSongForm.get('songgenre').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songgenre').errors.required\\\">\\n              Please select song genre\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songprice').invalid && addSongForm.get('songprice').dirty}\\\">\\n      <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\">Rp</div>\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"songprice\\\" [formControl]=\\\"songprice\\\" placeholder=\\\"Song Price\\\">\\n      </div>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"addSongForm.get('songprice').dirty && addSongForm.get('songprice').errors\\\">\\n          <span class=\\\"col-sm-2\\\"></span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songprice').errors.required\\\">\\n              Please enter price\\n          </span>\\n          <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"addSongForm.get('songprice').errors.pattern\\\">\\n              Please enter a valid amount\\n          </span>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songprvw').invalid && addSongForm.get('songprvw').dirty}\\\">\\n      <label for=\\\"songprvw\\\" class=\\\"col-sm-2 control-label\\\">Song Preview</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n          <input type=\\\"file\\\" (change)=\\\"prvwfileChangeEvent($event)\\\" name=\\\"songprvw\\\" id=\\\"songprvw\\\" placeholder=\\\"Song preview\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': addSongForm.get('songfile').invalid && addSongForm.get('songfile').dirty}\\\">\\n      <label for=\\\"songfile\\\" class=\\\"col-sm-2 control-label\\\">Song File</label>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-file\\\"></i></div>\\n          <input type=\\\"file\\\" (change)=\\\"songfileChangeEvent($event)\\\" name=\\\"songfile\\\" id=\\\"songfile\\\" placeholder=\\\"Song file\\\">\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"col-sm-2 control-label\\\"></label>\\n      <div class=\\\"col-sm-5\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addSongForm.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n          <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Reset</button>\\n      </div>\\n      <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n          <sup>*</sup> required\\n      </div>\\n    </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/addsong/addsong.component.html\n// module id = ../../../../../src/app/components/song/addsong/addsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\n\n\n@Component({\n  selector: 'app-addsong',\n  templateUrl: './addsong.component.html',\n  styleUrls: ['./addsong.component.css']\n})\nexport class AddsongComponent implements OnInit {\n  addSongForm: FormGroup;\n  userObj: any;\n  genre: any = ['Alternative', 'Blues', 'Children', 'Classical','Comedy', 'Country', 'Dance', 'Easy Listening', 'Electronic', 'Hip Hop','Christian Gospel', 'Instrumental', 'Jazz', 'Latin', 'New Age','Pop','RnB','Reggae', 'Rock', 'Soundtrack','Vocal','Others'];\n  PrvwfilesToUpload: Array<File> = [];\n  SongfilesToUpload: Array<File> = [];\n  songid: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  artistid = new FormControl('', [Validators.required]);  \n  albumid = new FormControl('', [Validators.required]);  \n  songname = new FormControl('', [Validators.required]);\n  songlyric = new FormControl('', [Validators.required]);  \n  songgenre = new FormControl('', [Validators.required]);\n  songprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  songprvwpath: String;\n  songprvwname: String;\n  songfilepath: String;\n  songfilename: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.getArtistList(this.userObj.userid);\n    this.getAlbumList(this.userObj.userid);\n    this.songid = '';\n    this.addSongForm = this.fb.group({\n      artistid: this.artistid,\n      albumid: this.albumid,\n      songname: this.songname,\n      songlyric: this.songlyric,\n      songgenre: this.songgenre,\n      songprice: this.songprice,\n      songprvw: this.PrvwfilesToUpload,\n      songfile: this.SongfilesToUpload,\n      songprvwpath: this.songprvwpath,\n      songprvwname: this.songprvwname,\n      songfilepath: this.songfilepath,\n      songfilename: this.songfilename,\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getAlbumList(id){\n    this.albumService.getAlbumList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'Error album list'}];\n        }\n      }\n    });\n  }\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      }\n    });\n  }\n  addSong(formdata:any): void {\n    if (this.addSongForm.dirty && this.addSongForm.valid) {\n      const prvwfiles: Array<File> = this.PrvwfilesToUpload;\n      let theForm = this.addSongForm.value;\n      let lformData: FormData = new FormData();\n      //console.log('Ini file: '+ prvwfiles[0]['name']);\n      \n      lformData.append('songprvw',prvwfiles[0],prvwfiles[0]['name']);\n      //console.log(lformData.getAll('songprvw'));\n      //console.dir(theForm);\n      this.songService.uploadSongPreview(lformData)\n        .subscribe(data => {\n          if (data.success === false) {\n            this.toastr.error(data.message);\n          } else {\n              theForm.songprvwpath = data.filedata.songprvwpath;\n              theForm.songprvwname = data.filedata.songprvwname;\n              const songfiles: Array<File> = this.SongfilesToUpload;\n              lformData.append('songfile',songfiles[0],songfiles[0]['name']);\n              this.songService.uploadSongFile(lformData)\n              .subscribe(data => {\n                  if (data.success === false) {\n                    this.toastr.error(data.message);\n                  } else {\n                    theForm.songfilepath = data.filedata.songfilepath;\n                    theForm.songfilename = data.filedata.songfilename;  \n                    theForm.status = 'active';\n                    if (this.songid !== '') {\n                      theForm.songid = this.songid;\n                    }\n                    this.songService.saveSong(this.userObj.userid, theForm.artistid, theForm.albumid, theForm)\n                    .subscribe(data => {\n                      if (data.success === false) {\n                        this.toastr.error(data.message);\n                      } else {\n                        this.toastr.success(data.message);\n                        this.router.navigate(['listsong']);\n                      }\n                      this.addSongForm.reset();\n                    });\n                  }      \n              });\n          }   \n        });\n \n    }\n  }\n\n  prvwfileChangeEvent(fileInput:any): void {\n    this.PrvwfilesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.PrvwfilesToUpload);\n  }\n\n  songfileChangeEvent(fileInput:any): void {\n    this.SongfilesToUpload = <Array<File>>fileInput.target.files;\n    console.log('content file: ' + this.SongfilesToUpload);\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/addsong/addsong.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsong/editsong.component.css\n// module id = ../../../../../src/app/components/song/editsong/editsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Edit Song</h3>\\n    </div>\\n\\n    <form [formGroup]=\\\"songForm\\\" (ngSubmit)=\\\"saveSong(songForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songname').invalid && songForm.get('songname').dirty}\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songname').dirty && songForm.get('songname').invalid\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} song name</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('artistid').invalid && songForm.get('artistid').dirty}\\\">\\n            <label for=\\\"artistid\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n                    <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('artistid').dirty && songForm.get('artistid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('artistid').errors.required\\\">\\n                    Please select artist status\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('albumid').invalid && songForm.get('albumid').dirty}\\\">\\n            <label for=\\\"albumid\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n                    <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('albumid').dirty && songForm.get('albumid').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('albumid').errors.required\\\">\\n                    Please select album song\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <textarea class=\\\"form-control\\\" id=\\\"songlyric\\\" rows=\\\"10\\\" [formControl]=\\\"songlyric\\\" placeholder=\\\"Song Lyric\\\"></textarea>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songgenre').invalid && songForm.get('songgenre').dirty}\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Song Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                    <option *ngFor=\\\"let g of genre\\\" >{{g}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songgenre').dirty && songForm.get('songgenre').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songgenre').errors.required\\\">\\n                    Please select song genre\\n                </span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songprice').invalid && songForm.get('songprice').dirty}\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"songprice\\\" [formControl]=\\\"songprice\\\" placeholder=\\\"Enter price\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songprice').dirty && songForm.get('songprice').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songprice').errors.required\\\">\\n                    Please enter price\\n                </span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songprice').errors.pattern\\\">\\n                    Please enter a valid amount\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('songpublish').invalid && songForm.get('songpublish').dirty}\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Song Published?</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"songpublish\\\">\\n                    <option *ngFor=\\\"let g of ynlist\\\" >{{g}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('songpublish').dirty && songForm.get('songpublish').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('songpublish').errors.required\\\">\\n                    Please select the options\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songbuy }}</div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': songForm.get('status').invalid && songForm.get('status').dirty}\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                    <option *ngFor=\\\"let a of sts\\\" >{{a}}</option>\\n                </select>\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"songForm.get('status').dirty && songForm.get('status').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"songForm.get('status').errors.required\\\">\\n                    Please select song status\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"songForm.invalid\\\" class=\\\"btn btn-primary\\\">{{ btnLbl }}</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"onBack()\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsong/editsong.component.html\n// module id = ../../../../../src/app/components/song/editsong/editsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { ISong } from '../../../interface/song';\n\n@Component({\n  selector: 'app-editsong',\n  templateUrl: './editsong.component.html',\n  styleUrls: ['./editsong.component.css']\n})\nexport class EditsongComponent implements OnInit {\n  songForm: FormGroup;\n  userObj: any;\n  sts: any = ['active', 'inactive'];\n  genre: any = ['Alternative', 'Blues', 'Children', 'Classical','Comedy', 'Country', 'Dance', 'Easy Listening', 'Electronic', 'Hip Hop','Christian Gospel', 'Instrumental', 'Jazz', 'Latin', 'New Age','Pop','RnB','Reggae', 'Rock', 'Soundtrack','Vocal','Others'];\n  ynlist: any = ['Y','N'];\n\n  songid: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  partistid: String;\n  btnLbl: String;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n  artistid = new FormControl('', [Validators.required]);  \n  albumid = new FormControl('', [Validators.required]);  \n  songname = new FormControl('', [Validators.required]);\n  songlyric = new FormControl('', [Validators.required]);  \n  songgenre = new FormControl('', [Validators.required]);\n  songprice = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  songpublish = new FormControl('', [Validators.required]);\n  songbuy = new FormControl('', [Validators.required, Validators.pattern('[0-9]+(\\.[0-9][0-9]?)?')]);\n  status = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.route.params.subscribe((params: any) => {\n      this.songid = params['id'];\n      this.btnLbl = \"Update\"\n    });\n    this.getSelectedSong(this.songid);\n    this.userObj =  this.authService.currentUser;\n    this.getArtistList(this.userObj.userid);\n\n    this.songForm = this.fb.group({\n      artistid: this.artistid,\n      albumid: this.albumid,\n      songname: this.songname,\n      songlyric: this.songlyric,\n      songgenre: this.songgenre,\n      songprice: this.songprice,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,         \n      status: this.status\n    });\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      }\n    });\n  }\n\n  getSelectedSong(id){\n    this.songService.getSong(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.partistid = data.data[0].artistid;\n          this.getAlbumListbyArtist(this.userObj.userid, this.partistid)\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n          this.router.navigate(['listsong']);\n        }\n      }\n    });\n  }\n\n  populateForm(data): void {\n    this.songForm.patchValue({\n      artistid: data.artistid,\n      albumid: data.albumid,\n      songname: data.songname,\n      songlyric: data.songlyric,\n      songgenre: data.songgenre,\n      songprice: data.songprice,\n      songpublish: data.songpublish,\n      songbuy: data.songbuy,         \n      status: data.status\n    });\n  }\n\n  saveSong(formdata:any): void {\n    if (this.songForm.valid) {\n      const theForm:any = this.songForm.value;\n      if (this.songid !== '') {\n        theForm.songid = this.songid;\n      \n      }\n      this.songService.saveSong(this.userObj.userid,theForm.artistid, theForm.albumid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          if (!this.songid) {\n            this.songForm.reset();\n          }\n      });\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listsong'], { preserveQueryParams: true });\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsong/editsong.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsongfiles/editsongfiles.component.css\n// module id = ../../../../../src/app/components/song/editsongfiles/editsongfiles.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Change Song Files</h3>\\n    </div>\\n    <form [formGroup]=\\\"songForm\\\" (ngSubmit)=\\\"updateSong(songForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"input-group col-sm-10\\\">\\n          <label for=\\\"songprvw\\\" class=\\\"col-sm-3 control-label\\\">Song Preview</label>\\n          <div class=\\\"input-group\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input type=\\\"file\\\" (change)=\\\"PrvwfileChangeEvent($event)\\\" name=\\\"songprvw\\\" id=\\\"songprvw\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newprvwfile }}\\\">  \\n            </div>\\n      </div>\\n      <br><br>\\n      <div class=\\\"input-group col-sm-10\\\">\\n          <label for=\\\"songfile\\\" class=\\\"col-sm-3 control-label\\\">Song File</label>\\n          <div class=\\\"input-group\\\">\\n              <label class=\\\"input-group-btn\\\">\\n                  <span class=\\\"btn btn-primary\\\">\\n                      Browse&hellip; <input type=\\\"file\\\" (change)=\\\"SongfileChangeEvent($event)\\\" name=\\\"songfile\\\" id=\\\"songfile\\\" style=\\\"display:none\\\">\\n                  </span>\\n              </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" value=\\\"{{ this.newsongfile }}\\\">  \\n            </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\">     </label>\\n          <div class=\\\"col-sm-10\\\">\\n              <br>\\n              <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n          </div>\\n      </div>\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsongfiles/editsongfiles.component.html\n// module id = ../../../../../src/app/components/song/editsongfiles/editsongfiles.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ISong } from '../../../interface/song';\n\n@Component({\n  selector: 'app-editsongfiles',\n  templateUrl: './editsongfiles.component.html',\n  styleUrls: ['./editsongfiles.component.css']\n})\nexport class EditsongfilesComponent implements OnInit {\n  songForm: FormGroup\n  userObj: any;\n  song: ISong;\n  songid: String;\n  PrvwfilesToUpload: Array<File> = [];\n  SongfilesToUpload: Array<File> = [];\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n\n  songprvwpath = new FormControl('', [Validators.nullValidator]);\n  songprvwname = new FormControl('', [Validators.nullValidator]);\n  songfilepath = new FormControl('', [Validators.nullValidator]);\n  songfilename = new FormControl('', [Validators.nullValidator]);\n  newprvwfile: String;\n  newsongfile: String;\n  deletedPrvwFile: String;\n  deletedSongFile: String;\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.songForm = this.fb.group({\n      songprvwpath: this.songprvwpath,\n      songprvwname: this.songprvwname,\n      songfilepath: this.songfilepath,\n      songfilename: this.songfilename,\n    });\n    this.route.params.subscribe((params: any) => {\n      this.songid = params['id'];\n      this.getSong(this.songid);\n    });\n  }\n  getSong(id){\n    this.songService.getSong(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.song = data.data[0];\n          this.populateForm(data.data[0]);\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n          this.router.navigate(['listsong']);\n        }\n      }\n    });\n  }\n  populateForm(data): void {\n    this.deletedPrvwFile = this.song.songprvwname;\n    this.deletedSongFile = this.song.songfilename;\n    this.songForm.patchValue({\n      songprvwpath: data.songprvwpath,\n      songprvwname: data.songprvwname,\n      songfilepath: data.songfilepath,\n      songfilename: data.songfilename\n    });\n  }\n\n  PrvwfileChangeEvent(fileInput:any): void {\n    this.PrvwfilesToUpload = <Array<File>>fileInput.target.files;\n    this.newprvwfile = this.PrvwfilesToUpload[0]['name'];\n    this.uploadNewPreview(this.PrvwfilesToUpload);  \n  }\n\n  SongfileChangeEvent(fileInput:any): void {\n    this.SongfilesToUpload = <Array<File>>fileInput.target.files;\n    this.newsongfile = this.SongfilesToUpload[0]['name'];\n    this.uploadNewSong(this.SongfilesToUpload);  \n  }\n\n  uploadNewPreview(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('songprvw',files[0],files[0]['name']);\n    this.songService.uploadSongPreview(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.toastr.error(data.message);\n      } else {\n        let payloadData: any = this.songForm.value;\n        this.songService.deleteSongPreview(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error deleted ' + data.message);\n            } else {\n              if (payloadData) {\n                console.log('File deleted - ' + payloadData.songprvwname);\n              }\n            }   \n          });\n        this.songForm.value.songprvwpath = data.filedata.songprvwpath;\n        this.songForm.value.songprvwname = data.filedata.songprvwname;\n          \n        this.songService.updateSongPreview(this.songid, this.songForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            console.log('Success update song preview.');\n            this.toastr.success(data.message);\n          }\n        });\n      }\n    });    \n  }\n\n  uploadNewSong(newFileData:any): void {\n    const files: Array<File> = newFileData;\n    let lformData: FormData = new FormData();\n    lformData.append('songfile',files[0],files[0]['name']);\n    this.songService.uploadSongFile(lformData)\n    .subscribe(data => {\n      if (data.success === false) {\n        this.toastr.error(data.message);\n      } else {\n        let payloadData: any = this.songForm.value;\n        this.songService.deleteSongFile(payloadData)\n        .subscribe(data => {\n           if (data.success === false) {\n              console.log('Error deleted ' + data.message);\n            } else {\n              console.log('File deleted - ' + payloadData.songfilename);\n            }   \n          });\n           \n        this.songForm.value.songfilepath = data.filedata.songfilepath;\n        this.songForm.value.songfilename = data.filedata.songfilename;\n\n        this.songService.updateSongFile(this.songid, this.songForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            console.log('Success update song file.');\n            this.toastr.success(data.message);\n          }\n        });\n      }\n    });    \n  }\n  onBack(): void {\n    this.router.navigate(['/listsong'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/editsongfiles/editsongfiles.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/listsong/listsong.component.css\n// module id = ../../../../../src/app/components/song/listsong/listsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>List Song</h3>\\n  </div>\\n\\n  <div class=\\\"panel panel-info\\\">\\n    <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Search Parameter</h3>\\n    </div>\\n    <div class=\\\"panel-body\\\">\\n      <form [formGroup]=\\\"reportForm\\\" (ngSubmit)=\\\"getReport(reportForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\n                <label for=\\\"artistid\\\">Artist</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"artistid\\\" (change)=\\\"artistChangeEvent($event)\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the artist</option>\\n                        <option *ngFor=\\\"let artist of artistlist\\\" [ngValue]=\\\"artist._id\\\">{{artist.artistname}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n            <div class=\\\"col-sm-12 col-md-6\\\">\\n                <label for=\\\"albumid\\\">Album</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                    <select class=\\\"form-control\\\" [formControl]=\\\"albumid\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the album</option>\\n                        <option *ngFor=\\\"let album of albumlist\\\" [ngValue]=\\\"album._id\\\">{{album.albumname}}</option>\\n                    </select>\\n                  </div>\\n            </div>\\n\\n\\n          </div><br>\\n\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-6\\\">\\n                  <label for=\\\"songname\\\">Song Name</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"songname\\\" [formControl]=\\\"songname\\\" placeholder=\\\"Song Name\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-2\\\">\\n                  <label for=\\\"albumyear\\\">Album Year</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"albumyear\\\" [formControl]=\\\"albumyear\\\" placeholder=\\\"Album Year\\\">\\n                  </div>\\n              </div>\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songgenre\\\">Genre</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songgenre\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the genre</option>  \\n                        <option *ngFor=\\\"let g of genre\\\" >{{g}}</option>\\n                      </select>\\n                  </div>\\n              </div>\\n          </div><br>\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songpublish\\\">Publish?</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songpublish\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the options</option>  \\n                        <option *ngFor=\\\"let a of ynlist\\\" >{{a}}</option>\\n                      </select>\\n                  </div>\\n              </div>  \\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"songbuy\\\">Buy?</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"songbuy\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the options</option>  \\n                        <option *ngFor=\\\"let a of ynlist\\\" >{{a}}</option>\\n                      </select>\\n                  </div>\\n              </div>  \\n              <div class=\\\"col-sm-12 col-md-3\\\">\\n                  <label for=\\\"status\\\">Status</label>\\n                  <div class=\\\"input-group col-sm-10\\\">\\n                      <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-list-alt\\\"></i></div>\\n                      <select class=\\\"form-control\\\" [formControl]=\\\"status\\\">\\n                        <option ng-selected=\\\"true\\\" value=\\\"\\\">Select the status</option>  \\n                        <option *ngFor=\\\"let a of sts\\\" >{{a}}</option>\\n                      </select>\\n                  </div>\\n              </div><br>\\n              <div class=\\\"col-sm-12 col-md-2\\\">\\n                  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"reportForm.invalid\\\">Submit</button>\\n              </div>                  \\n          </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"panel panel-danger\\\" *ngIf=\\\"songs && totalrows < 1\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">No song found</h3> \\n      </div>\\n\\n      <div class=\\\"panel-body\\\">\\n          It seems like you havn't entered any songs for the selected criteria. Please add the song <a style=\\\"cursor:pointer\\\" (click)=\\\"toaddSongs()\\\">here</a>.\\n      </div>\\n  </div>\\n\\n  <div class=\\\"panel panel-default\\\" *ngIf=\\\"songs && totalrows > 0\\\">\\n      <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\"><i>{{reportTitle}}</i> <b> ({{ totalrows }} records found)</b> </h3> \\n      </div>\\n      <div class=\\\"panel-body\\\">\\n          <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-striped\\\">\\n                  <thead>\\n                      <tr>\\n                          <th width=\\\"20%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songname')\\\">Song Name</a></th>\\n                          <th width=\\\"20%\\\">Artist</th>\\n                          <th width=\\\"20%\\\">Album</th>\\n                          <th width=\\\"5%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('albumyear')\\\">Year</a></th>\\n                          <th width=\\\"9%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songgenre')\\\">Genre</a></th>\\n                          <th width=\\\"10%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortSong('songprice')\\\">Price</a></th>\\n                          <!-- <th width=\\\"6%\\\"><a style=\\\"cursor:pointer\\\" (click)=\\\"sortAlbum('status')\\\">Status</a></th> -->\\n                          <th width=\\\"20%\\\">Action</th>\\n                      </tr>\\n                  </thead>\\n                  <tbody>\\n                      <tr *ngFor='let song of songs; let songIndex = index'>\\n                          <td><a style=\\\"cursor:pointer\\\" (click)=\\\"showSong(song._id)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"View Detail\\\">{{ song.songname}}</a></td>\\n                          <td>{{ song.artist }}</td>\\n                          <td>{{ song.album }}</td>\\n                          <td>{{ song.albumyear}}</td>\\n                          <td>{{ song.songgenre}}</td>\\n                          <td class=\\\"text-right\\\">{{ song.songprice | currency: 'IDR':true }}</td>\\n                          <!-- <td>{{ albm.status}}</td> -->\\n                          <td>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-info\\\" aria-label=\\\"View\\\" (click)=\\\"editSongFiles(song._id, song.songpublish, song.songbuy)\\\">\\n                                  <span class=\\\"glyphicon glyphicon-edit\\\" aria-hidden=\\\"true\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Song File\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-danger\\\" aria-label=\\\"Edit\\\" (click)=\\\"editSong(song._id, song.songpublish, song.songbuy)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Change Song Data\\\">\\n                                  <span class=\\\"glyphicon glyphicon-pencil\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                              <button type=\\\"button\\\" class=\\\"btn-xs btn-primary\\\" aria-label=\\\"Delete\\\" (click)=\\\"confirmDel(songIndex, song._id, song.songpublish, song.songbuy)\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Delete Song\\\">\\n                                  <span class=\\\"glyphicon glyphicon-trash\\\" aria-hidden=\\\"true\\\"></span>\\n                              </button>\\n                          </td>\\n                      </tr>\\n                  </tbody>\\n              </table>\\n          </div> \\n          <div style=\\\"text-align:center\\\" *ngIf=\\\"songs && totalrows > 10\\\">\\n              <nav aria-label=\\\"Page navigation\\\">\\n                  <ul class=\\\"pagination\\\">\\n                      <li *ngFor=\\\"let item of createPager(pgCounter); let idx = index\\\">\\n                          <a [ngClass]=\\\"{'selected': qpage == idx + 1 }\\\" class=\\\"selected\\\" style=\\\"cursor:pointer\\\" (click) = \\\"setPage(idx + 1)\\\">{{ idx + 1 }}</a>\\n                      </li>\\n                  </ul>\\n              </nav>\\n          </div> \\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/listsong/listsong.component.html\n// module id = ../../../../../src/app/components/song/listsong/listsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { DatePipe } from '@angular/common';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { ArtistService } from '../../../services/artist.service';\nimport { AlbumService } from '../../../services/album.service';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IArtistList } from '../../../interface/artist';\nimport { IAlbumList } from '../../../interface/album';\nimport { IAggSong } from '../../../interface/song';\n\n@Component({\n  selector: 'app-listsong',\n  templateUrl: './listsong.component.html',\n  styleUrls: ['./listsong.component.css']\n})\nexport class ListsongComponent implements OnInit {\n  reportForm: FormGroup\n  userObj: any;\n  reportTitle: String;\n  artistlist: IArtistList[];\n  albumlist: IAlbumList[];\n  songs: IAggSong[];\n  totalrows: number;\n  pgCounter: number;\n  qsongname: String;\n  qartistid: String;\n  qalbumid: String;\n  qalbumyear: String;\n  qsonggenre: String;\n  qsongpublish: String;\n  qsongbuy: String;\n  qstatus: String;\n  qpage: number;\n  qsort: String;\n  genre: any = ['Alternative', 'Blues', 'Children', 'Classical','Comedy', 'Country', 'Dance', 'Easy Listening', 'Electronic', 'Hip Hop','Christian Gospel', 'Instrumental', 'Jazz', 'Latin', 'New Age','Pop','RnB','Reggae', 'Rock', 'Soundtrack','Vocal','Others'];\n  sts: any = ['active', 'inactive'];\n  ynlist: any = ['Y', 'N'];\n  currsongpublish: String;\n  currsongbuy: Number;\n\n  constructor(\n    private fb: FormBuilder, \n    private authService: AuthService,\n    private artistService: ArtistService,\n    private albumService: AlbumService,\n    private songService: SongService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private toastr: ToastrService,\n    private datePipe: DatePipe\n  ) { }\n\n  songname = new FormControl('',[Validators.nullValidator]);\n  artistid = new FormControl('',[Validators.nullValidator]);\n  albumid = new FormControl('',[Validators.nullValidator]);  \n  albumyear = new FormControl('',[Validators.nullValidator]);\n  songgenre = new FormControl('',[Validators.nullValidator]);\n  songpublish = new FormControl('',[Validators.nullValidator]);\n  songbuy = new FormControl('',[Validators.nullValidator]);\n  status = new FormControl('active', [Validators.nullValidator]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.reportForm = this.fb.group({\n      songname: this.songname,\n      artistid: this.artistid,\n      albumid: this.albumid,\n      albumyear: this.albumyear,\n      songgenre: this.songgenre,\n      songpublish: this.songpublish,\n      songbuy: this.songbuy,\n      status: this.status\n    });\n    this.getArtistList(this.userObj.userid);\n    this.getAlbumList(this.userObj.userid);\n    this.route.queryParams.forEach((params: Params) => {\n      this.qsongname = params['songname'] || '';\n      this.qartistid = params['artistid'] || '';\n      this.qalbumid = params['albumid'] || '';\n      this.qalbumyear = params['albumyear'] || '';\n      this.qsonggenre = params['songgenre'] || '';\n      this.qsongpublish = params['songpublish'] || '';\n      this.qsongbuy = params['songbuy'] || '';\n      this.qstatus = params['status'] || '';\n      this.qpage = params['page'] || '';\n      this.qsort = params['sortby'] || '';\n\n      let payload: any = {};\n      payload.status = this.qstatus;\n      payload.artistid = this.qartistid;\n      payload.albumid = this.qalbumid;\n      payload.songname = this.qsongname;\n      payload.albumyear = this.qalbumyear;\n      payload.songgenre = this.qsonggenre;\n      payload.songpublish = this.qsongpublish;\n      payload.songbuy = this.qsongbuy;\n      payload.page = this.qpage;\n      payload.sortby = this.qsort;\n      this.fetchReport(this.userObj.userid, payload);\n\n      this.reportForm.patchValue({\n        songname: this.qsongname,\n        artistid: this.qartistid,\n        albumid: this.qalbumid,\n        albumyear: this.qalbumyear,\n        songgenre: this.qsonggenre,\n        songpublish: this.qsongpublish,\n        songbuy: this.qsongbuy,\n        status: this.qstatus\n      });\n    })\n  }\n\n  getArtistList(id){\n    this.artistService.getArtistList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.artistlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.artistlist = [{_id:'', artistname:'Error artist list'}];\n        }\n      }\n    });\n  }\n\n  getAlbumList(id){\n    this.albumService.getAlbumList(id).subscribe(data => {\n      if (data.success === true) {\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.artistlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'Error album list'}];\n        }\n      }\n    });\n  }\n  getAlbumListbyArtist(id, artistid){\n    this.albumService.getAlbumListbyArtist(id, artistid).subscribe(data => {\n      if (data.success === true) {\n        console.log(data.data[0]);\n        if (data.data[0]) {\n          this.albumlist = data.data;\n          //console.log(this.albumlist);\n        } else {\n          this.albumlist = [{_id:'', albumname:'No album list available'}];\n        }\n      }\n    });\n  }\n\n  getReport(formdata:any): void {\n    if (this.reportForm.valid) {\n        this.fetchReport(this.userObj.userid, this.reportForm.value);\n    }\n  }\n\n  fetchReport(userid, formval) {\n    this.songService.getAggSongs(userid, formval)\n    .subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.songs = data.data;\n        this.totalrows = +data.totalcount;\n        this.pgCounter = Math.floor((this.totalrows + 10 - 1) / 10);\n\n        this.qsongname = formval.songname;\n        this.qartistid = formval.artistid;\n        this.qalbumid = formval.albumid;\n        this.qalbumyear = formval.albumyear;\n        this.qsonggenre = formval.songgenre;\n        this.qsongpublish = formval.songpublish;\n        this.qsongbuy = formval.songbuy;\n        this.qstatus = formval.status;\n        this.reportTitle = 'Songs Result';\n      }\n    });\n  }\n\n  setPage(page): void {\n    this.router.navigate(['listsong'],\n      {\n        queryParams: {\n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: page, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  createPager(number) {\n    var items: number[] = [];\n    for(var i = 1; i <= number; i++){\n      items.push(i);\n    }\n    return items;\n  }\n\n  sortSong(sortby): void {\n    if (this.qsort === ''){\n      this.qsort = sortby;\n    } else if (this.qsort.indexOf('-') > -1 ) {\n      this.qsort = sortby;\n    } else {\n      this.qsort = '-' + sortby;\n    }\n  \n    this.router.navigate(['listsong'],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  artistChangeEvent(selectedValue:any): void {\n    var result = <String>selectedValue.target.value;\n    // result is 1: artistid. Therefore need split\n    var res = result.split(\" \");\n    this.getAlbumListbyArtist(this.userObj.userid,res[1]);\n  }\n\n  editSongFiles(songid, songpublish, songbuy): void {\n    if (songbuy > 0) {\n      this.toastr.warning(\"This song has been purchased. The file can not be edited\");\n    } else {\n      //this.toastr.warning(\"This song id: \" + songid);      \n      this.router.navigate([`editsongfiles/${songid}`],\n        {\n          queryParams: { \n            songname: this.qsongname,\n            artistid: this.qartistid,\n            albumid: this.qalbumid,\n            albumyear: this.qalbumyear,\n            songgenre: this.qsonggenre,\n            songpublish: this.qsongpublish,\n            songbuy: this.qsongbuy,\n            status: this.qstatus,\n            page: this.qpage || 1, \n            sortby: this.qsort }\n        }\n      );\n    }\n\n  }\n\n  showSong(songid): void {\n    this.router.navigate([`viewsong/${songid}`],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n      }\n    );\n  }\n\n  editSong(songid, songpublish, songbuy): void {\n\n    if (songbuy > 0) {\n      this.toastr.warning(\"This song has been purchased. The file can not be edited\");\n    } else {\n      this.router.navigate([`editsong/${songid}`],\n      {\n        queryParams: { \n          songname: this.qsongname,\n          artistid: this.qartistid,\n          albumid: this.qalbumid,\n          albumyear: this.qalbumyear,\n          songgenre: this.qsonggenre,\n          songpublish: this.qsongpublish,\n          songbuy: this.qsongbuy,\n          status: this.qstatus,\n          page: this.qpage || 1, \n          sortby: this.qsort }\n        }\n      );\n    }\n  }\n\n  confirmDel(idx: number, songid: string, songpublish, songbuy) {\n    \n    if (songbuy > 0) {\n      this.toastr.warning(\"This song has been purchased. The file can not be edited\");\n    } else {\n      if(confirm('Do you really want to delete this record?')){\n        this.songService.deleteSong(songid)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.songs.splice(idx, 1);\n            this.totalrows = this.totalrows - 1;\n            this.toastr.success(data.message);\n          }\n        });\n      }\n    }\n  }\n\n  toaddSongs(): void {\n    this.router.navigate(['/addsong']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/listsong/listsong.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/viewsong/viewsong.component.css\n// module id = ../../../../../src/app/components/song/viewsong/viewsong.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h3>Song Details</h3>\\n    </div>\\n    <form class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songname\\\" class=\\\"col-sm-2 control-label\\\">Song Name</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songname }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"artist\\\" class=\\\"col-sm-2 control-label\\\">Artist</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.artist }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"album\\\" class=\\\"col-sm-2 control-label\\\">Album</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.album }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songlyric\\\" class=\\\"col-sm-2 control-label\\\">Lyric</label>\\n            \\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songlyric }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songgenre\\\" class=\\\"col-sm-2 control-label\\\">Genre</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songgenre }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprice\\\" class=\\\"col-sm-2 control-label\\\">Price</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\">Rp</div>\\n                <div class=\\\"form-ele\\\">{{ song?.songprice | currency: 'IDR':true }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songprvwpath\\\" class=\\\"col-sm-2 control-label\\\">Preview</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songprvwpath }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songfilepath\\\" class=\\\"col-sm-2 control-label\\\">File</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-music\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songfilepath }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songpublish\\\" class=\\\"col-sm-2 control-label\\\">Publish?</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songpublish }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"songbuy\\\" class=\\\"col-sm-2 control-label\\\">Total Purchased</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-download\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.songbuy }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"status\\\" class=\\\"col-sm-2 control-label\\\">Status</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                <div class=\\\"form-ele\\\">{{ song?.status }}</div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\">    </label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"button\\\" (click)=\\\"onBack()\\\" class=\\\"btn btn-default\\\">Back</button>\\n            </div>\\n        </div>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/viewsong/viewsong.component.html\n// module id = ../../../../../src/app/components/song/viewsong/viewsong.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { SongService } from '../../../services/song.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { ToastrService } from '../../../common/toastr.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { IAggSong } from '../../../interface/song';\n\n@Component({\n  selector: 'app-viewsong',\n  templateUrl: './viewsong.component.html',\n  styleUrls: ['./viewsong.component.css']\n})\nexport class ViewsongComponent implements OnInit {\n  song: IAggSong;\n  private sub: Subscription;\n\n  constructor(    \n    private authService: AuthService,\n    private songService: SongService,\n    private toastr: ToastrService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(\n      params => {\n        let songid = params['id'];\n        this.getSong(songid);\n      });\n  }\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  getSong(id){\n    this.songService.getSongAgg(id).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        if (data.data[0]) {\n          this.song = data.data[0];\n        } else {\n          this.toastr.error('Song id is incorrect in the URL');\n        }\n      }\n    });\n  }\n\n  onBack(): void {\n    this.router.navigate(['/listsong'], { preserveQueryParams: true });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/song/viewsong/viewsong.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/login/login.component.css\n// module id = ../../../../../src/app/components/user/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  \\n  <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginUser(loginForm.value)\\\" class=\\\"form-signin\\\" novalidate autocomplete=\\\"off\\\">\\n      <h3>Please sign in</h3>\\n      <label for=\\\"inputUser\\\" class=\\\"sr-only\\\">Username</label>\\n      <input type=\\\"text\\\" id=\\\"inputUser\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" placeholder=\\\"Username\\\" autofocus>\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('username').dirty && loginForm.get('username').invalid\\\">\\n          Please enter username\\n      </div>\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" placeholder=\\\"Password\\\">\\n      <div class=\\\"text-danger\\\" *ngIf=\\\"loginForm.get('password').dirty && loginForm.get('password').invalid\\\">\\n          Please enter password\\n      </div>\\n      <br><br>\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\" [disabled]=\\\"loginForm.invalid\\\" >Sign in</button>\\n      <br>\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 col-sm-6 col-xs-6\\\">Forgot Password</div>\\n          <div class=\\\"col-md-6 col-sm-6 col-xs-6\\\" style=\\\"text-align: right\\\"><a [routerLink]=\\\"['/register']\\\">Register</a></div>\\n      </div>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/login/login.component.html\n// module id = ../../../../../src/app/components/user/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { AuthService } from '../../../services/auth.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n    username = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n  }\n  \n  loginForm: FormGroup = this.fb.group({\n    username: this.username,\n    password: this.password,\n  });\n\n  loginUser(formdata:any): void {\n    if (this.loginForm.dirty && this.loginForm.valid) {\n      this.authService.login(this.loginForm.value)\n        .subscribe(data => {\n          if (data.json().success === false) {\n            this.toastr.error(data.json().message);\n          } else {\n            this.toastr.success('Login successful.');\n            this.router.navigate(['report']);\n          }\n          this.loginForm.reset();\n        });\n    }\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/login/login.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from '../../common/toastr.service'\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  template: ''\n})\n\nexport class LogoutComponent implements OnInit {\n  \n    constructor(private authService: AuthService,\n        private router: Router,\n        private toastr: ToastrService) { \n    }\n\n    ngOnInit(){\n        this.authService.logout();\n        this.toastr.success('You have been logged out.');\n        this.router.navigate(['login']);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/logout.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/password/password.component.css\n// module id = ../../../../../src/app/components/user/password/password.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>Change Password</h1>\\n    </div>\\n  \\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"updatePassword(passwordForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('oldpassword').invalid && passwordForm.get('oldpassword').dirty}\\\">\\n            <label for=\\\"oldpassword\\\" class=\\\"col-sm-2 control-label\\\">Existing Password</label>\\n            <div class=\\\"input-group col-sm-10\\\">\\n                <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-lock\\\"></i></div>\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"oldpassword\\\" [formControl]=\\\"oldpassword\\\" placeholder=\\\"Existing Password\\\">\\n            </div>\\n            <div class=\\\"text-danger\\\" *ngIf=\\\"passwordForm.get('oldpassword').dirty && passwordForm.get('oldpassword').errors\\\">\\n                <span class=\\\"col-sm-2\\\"></span>\\n                <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('oldpassword').errors.required\\\">\\n                    Please enter existing password\\n                </span>\\n            </div>\\n        </div>\\n  \\n        <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup').errors }\\\">\\n  \\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.password').invalid && passwordForm.get('passwordGroup.password').dirty}\\\">\\n                <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">New Password</label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" [formControl]=\\\"password\\\" placeholder=\\\"New Pasword\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\"  *ngIf=\\\"passwordForm.get('passwordGroup.password').dirty && passwordForm.get('passwordGroup.password').errors\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.required\\\">\\n                        Please enter password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.password').errors.pattern\\\">\\n                        Password must contain one letter, number & special characters\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': passwordForm.get('passwordGroup.retypepass').invalid && passwordForm.get('passwordGroup.retypepass').dirty}\\\">\\n                <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\">Retype Password <sup>*</sup></label>\\n                <div class=\\\"input-group col-sm-10\\\">\\n                    <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n                </div>\\n                <div class=\\\"text-danger\\\" *ngIf=\\\"(passwordForm.get('passwordGroup.retypepass').touched || passwordForm.get('passwordGroup.retypepass').dirty) && (passwordForm.get('passwordGroup.retypepass').errors || passwordForm.get('passwordGroup').errors)\\\">\\n                    <span class=\\\"col-sm-2\\\"></span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                        Please confirm your password\\n                    </span>\\n                    <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"passwordForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                        Password do not match\\n                    </span>\\n                </div>\\n            </div>\\n  \\n        </div>\\n    \\n        <div class=\\\"form-group\\\">\\n            <label class=\\\"col-sm-2 control-label\\\"></label>\\n            <div class=\\\"col-sm-10\\\">\\n                <button type=\\\"submit\\\" [disabled]=\\\"passwordForm.invalid\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n            </div>\\n        </div>\\n    </form>\\n  \\n  </div>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/password/password.component.html\n// module id = ../../../../../src/app/components/user/password/password.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\n\n@Component({\n  selector: 'app-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent implements OnInit {\n\n  passwordForm: FormGroup;\n  userObj: any;\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n    oldpassword = new FormControl('', [Validators.required]);\n    password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n    retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.passwordForm = this.fb.group({\n      oldpassword: this.oldpassword,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n  \n  updatePassword(formdata:any): void {\n    if (this.passwordForm.dirty && this.passwordForm.valid) {\n      let theForm = this.passwordForm.value;\n      const thePass = this.passwordForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n\n      this.userService.updatePassword(this.userObj.userid,theForm)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n          }\n          this.passwordForm.reset();\n      });\n    }\n  }\n\n}\n\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n  let passwordControl = c.get('password');\n  let confirmControl = c.get('retypepass');\n\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n      return null;\n  }\n  return { 'mismatchedPassword': true };\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/password/password.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/profile/profile.component.css\n// module id = ../../../../../src/app/components/user/profile/profile.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n    <div class=\\\"page-header\\\">\\n        <h1>My Profile</h1>\\n    </div>\\n    <div class=\\\"clearfix\\\">\\n      <form [formGroup]=\\\"profileForm\\\" (ngSubmit)=\\\"updateUser(profileForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.username }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('name').invalid && profileForm.get('name').dirty}\\\">\\n              <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Name</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" [formControl]=\\\"name\\\" placeholder=\\\"Name\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('name').dirty && profileForm.get('name').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your {{ userObj.username }} name</span>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('email').invalid && profileForm.get('email').dirty}\\\">\\n              <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\">@</div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" [formControl]=\\\"email\\\" placeholder=\\\"Email\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('email').dirty && profileForm.get('email').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter a valid email</span>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('contactno').invalid && profileForm.get('contactno').dirty}\\\">\\n              <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactno\\\" [formControl]=\\\"contactno\\\" placeholder=\\\"Contact No\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('contactno').dirty && profileForm.get('contactno').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Contact Number</span>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('bankaccno').invalid && profileForm.get('bankaccno').dirty}\\\">\\n              <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankaccno\\\" [formControl]=\\\"bankaccno\\\" placeholder=\\\"Bank Account No\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('bankaccno').dirty && profileForm.get('bankaccno').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Bank Account Number</span>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': profileForm.get('bankname').invalid && profileForm.get('bankname').dirty}\\\">\\n              <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-bold\\\"></i></div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankname\\\" [formControl]=\\\"bankname\\\" placeholder=\\\"Bank Name\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"profileForm.get('bankname').dirty && profileForm.get('bankname').invalid\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\">Please enter your Bank Name</span>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"usertype\\\" class=\\\"col-sm-2 control-label\\\">User Type</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.usertype }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"lastlogin\\\" class=\\\"col-sm-2 control-label\\\">Last Login</label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-calendar\\\"></i></div>\\n                  <div class=\\\"form-ele\\\">{{ userObj.lastlogin | date:'medium' }}</div>\\n              </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n              <label class=\\\"col-sm-2 control-label\\\"></label>\\n              <div class=\\\"col-sm-10\\\">\\n                  <button type=\\\"submit\\\" [disabled]=\\\"profileForm.invalid\\\" class=\\\"btn btn-primary\\\">Update</button>\\n                  <button type=\\\"reset\\\" class=\\\"btn btn-default\\\" (click)=\\\"ngOnInit()\\\">Cancel</button>\\n              </div>\\n          </div>\\n      </form>                \\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/profile/profile.component.html\n// module id = ../../../../../src/app/components/user/profile/profile.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\nimport { AuthService } from '../../../services/auth.service';\nimport { IUser } from '../../../interface/user';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  profileForm: FormGroup\n  userObj: any;\n  user: IUser;\n\n  constructor(private fb: FormBuilder, \n    private authService: AuthService,\n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService) { }\n\n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankname = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.userObj =  this.authService.currentUser;\n    this.profileForm = this.fb.group({\n      name: this.name,\n      email: this.email,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankname: this.bankname\n    });\n\n    this.userService.getUser(this.userObj.userid).subscribe(data => {\n      if (data.success === false) {\n        if (data.errcode){\n          this.authService.logout();\n          this.router.navigate(['login']);\n        }\n        this.toastr.error(data.message);\n      } else {\n        this.user = data.data[0];\n        this.populateForm(this.user);\n      }\n    });    \n  }\n\n  populateForm(data): void {\n    this.profileForm.patchValue({\n      name: data.name,\n      email: data.email,\n      contactno: data.contactno,\n      bankaccno: data.bankaccno,\n      bankname: data.bankname\n    });\n  }\n\n  updateUser(formdata:any): void {\n    if (this.profileForm.dirty && this.profileForm.valid) {\n        this.userService.updateUser(this.userObj.userid, this.profileForm.value)\n        .subscribe(data => {\n          if (data.success === false) {\n            if (data.errcode){\n              this.authService.logout();\n              this.router.navigate(['login']);\n            }\n            this.toastr.error(data.message);\n          } else {\n            this.toastr.success(data.message);\n            let theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n            theUser.user.name = this.profileForm.value.name;\n            localStorage.setItem('currentUser', JSON.stringify(theUser));\n          }\n        });\n      }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/profile/profile.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/register/register.component.css\n// module id = ../../../../../src/app/components/user/register/register.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pagecontainer\\\">\\n  <div class=\\\"page-header\\\">\\n      <h3>Register Label</h3>\\n  </div>\\n\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"registerUser(registerForm.value)\\\" class=\\\"form-horizontal\\\" novalidate autocomplete=\\\"off\\\">\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('name').invalid && registerForm.get('name').dirty}\\\">\\n          <label for=\\\"name\\\" class=\\\"col-sm-2 control-label\\\">Label Name <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-font\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Label Name\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('name').dirty && registerForm.get('name').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('name').errors.required\\\">\\n                  Please enter your label name\\n              </span>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('email').invalid && registerForm.get('email').dirty}\\\">\\n          <label for=\\\"email\\\" class=\\\"col-sm-2 control-label\\\">Email <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\">@</div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('email').dirty && registerForm.get('email').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('email').invalid\\\">\\n                  Please enter a valid email\\n              </span>\\n          </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('contactno').invalid && registerForm.get('contactno').dirty}\\\">\\n        <label for=\\\"contactno\\\" class=\\\"col-sm-2 control-label\\\">Contact No <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-earphone\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"contactno\\\" id=\\\"contactno\\\" placeholder=\\\"Contact No\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('contactno').dirty && registerForm.get('contactno').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('contactno').errors.required\\\">\\n                Please enter your contact no\\n            </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('bankaccno').invalid && registerForm.get('bankaccno').dirty}\\\">\\n        <label for=\\\"bankaccno\\\" class=\\\"col-sm-2 control-label\\\">Bank Account No <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-bitcoin\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankaccno\\\" id=\\\"bankaccno\\\" placeholder=\\\"Bank Account No\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('bankaccno').dirty && registerForm.get('bankaccno').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('bankaccno').errors.required\\\">\\n                Please enter your bank account no\\n            </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('bankname').invalid && registerForm.get('bankname').dirty}\\\">\\n        <label for=\\\"bankname\\\" class=\\\"col-sm-2 control-label\\\">Bank Name <sup>*</sup></label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon-bitcoin\\\"></i></div>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"bankname\\\" id=\\\"bankname\\\" placeholder=\\\"Bank Name\\\">\\n        </div>\\n        <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('bankname').dirty && registerForm.get('bankname').errors\\\">\\n            <span class=\\\"col-sm-2\\\"></span>\\n            <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('bankname').errors.required\\\">\\n                Please enter your bank name\\n            </span>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"usertype\\\" class=\\\"col-sm-2 control-label\\\">Usertype</label>\\n        <div class=\\\"input-group col-sm-10\\\">\\n            <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n            <div class=\\\"form-ele\\\">{{ this.usertype.value }}</div>\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('username').invalid && registerForm.get('username').dirty}\\\">\\n          <label for=\\\"username\\\" class=\\\"col-sm-2 control-label\\\">Username <sup>*</sup></label>\\n          <div class=\\\"input-group col-sm-10\\\">\\n              <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-user\\\"></i></div>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"username\\\" id=\\\"username\\\" placeholder=\\\"Username\\\">\\n          </div>\\n          <div class=\\\"text-danger\\\" *ngIf=\\\"registerForm.get('username').dirty && registerForm.get('username').errors\\\">\\n              <span class=\\\"col-sm-2\\\"></span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.required\\\">\\n                  Please enter username\\n              </span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.minlength\\\">\\n                  Username must be longer than 3 characters.\\n              </span>\\n              <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('username').errors.maxlength\\\">\\n                  Username cannot be longer than 16 characters.\\n              </span>\\n          </div>\\n      </div>\\n\\n       <div formGroupName=\\\"passwordGroup\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup').errors }\\\">\\n           \\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.password').invalid && registerForm.get('passwordGroup.password').dirty}\\\">\\n              <label for=\\\"password\\\" class=\\\"col-sm-2 control-label\\\">Password <sup>*</sup></label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Pasword\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\"  *ngIf=\\\"registerForm.get('passwordGroup.password').dirty && registerForm.get('passwordGroup.password').errors\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.required\\\">\\n                      Please enter password\\n                  </span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.password').errors.pattern\\\">\\n                      Password must contain one letter, number & special characters\\n                  </span>\\n              </div>\\n          \\n          </div>\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{'has-error': registerForm.get('passwordGroup.retypepass').invalid && registerForm.get('passwordGroup.retypepass').dirty}\\\">\\n              <label for=\\\"retypepass\\\" class=\\\"col-sm-2 control-label\\\">Retype Password <sup>*</sup></label>\\n              <div class=\\\"input-group col-sm-10\\\">\\n                  <div class=\\\"input-group-addon\\\"><i class=\\\"glyphicon glyphicon glyphicon-asterisk\\\"></i></div>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" [formControl]=\\\"retypepass\\\" id=\\\"retypepass\\\" placeholder=\\\"Retype Password\\\">\\n              </div>\\n              <div class=\\\"text-danger\\\" *ngIf=\\\"(registerForm.get('passwordGroup.retypepass').touched || registerForm.get('passwordGroup.retypepass').dirty) && (registerForm.get('passwordGroup.retypepass').errors || registerForm.get('passwordGroup').errors)\\\">\\n                  <span class=\\\"col-sm-2\\\"></span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup.retypepass').errors?.required\\\">\\n                      Please confirm your password\\n                  </span>\\n                  <span class=\\\"col-sm-10\\\" style=\\\"padding:4px 0 0\\\" *ngIf=\\\"registerForm.get('passwordGroup').errors?.mismatchedPassword\\\">\\n                      Password do not match\\n                  </span>\\n              </div>\\n          </div>\\n       </div>\\n      <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2 control-label\\\"></label>\\n          <div class=\\\"col-sm-5\\\">\\n              <button type=\\\"submit\\\" [disabled]=\\\"registerForm.invalid\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n              <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Reset</button>\\n          </div>\\n          <div class=\\\"col-sm-5\\\" style=\\\"text-align:right\\\">\\n              <sup>*</sup> required\\n          </div>\\n      </div>\\n  </form>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/register/register.component.html\n// module id = ../../../../../src/app/components/user/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, AbstractControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ToastrService } from '../../../common/toastr.service'\nimport { UserService } from '../../../services/user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n\n  constructor(\n    private fb: FormBuilder, \n    private userService: UserService,\n    private router: Router,\n    private toastr: ToastrService\n  ) { }\n  \n  name = new FormControl('', [Validators.required]);\n  email = new FormControl('', [Validators.email]);\n  contactno = new FormControl('', [Validators.required]);\n  bankaccno = new FormControl('', [Validators.required]);\n  bankname = new FormControl('', [Validators.required]);\n  usertype = new FormControl('label', [Validators.required]);\n  username = new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(16)]);\n  password = new FormControl('', [Validators.required, Validators.pattern('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{6,12}$')]);\n  retypepass = new FormControl('', [Validators.required]);\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      name: this.name,\n      email: this.email,\n      contactno: this.contactno,\n      bankaccno: this.bankaccno,\n      bankname: this.bankname,\n      usertype: this.usertype,\n      username: this.username,\n      passwordGroup: this.fb.group({\n        password: this.password,\n        retypepass: this.retypepass,\n      }, {validator: comparePassword})\n    });\n  }\n  registerUser(formdata:any): void {\n    if (this.registerForm.dirty && this.registerForm.valid) {\n      let theForm = this.registerForm.value;      \n      const thePass = this.registerForm.value.passwordGroup.password;\n      theForm.password = thePass;\n      delete theForm.passwordGroup;\n\n      this.userService.register(theForm)\n      .subscribe(data => {\n        if (data.success === false) {\n          this.toastr.error(data.message);\n        } else {\n          this.toastr.success(data.message);\n          this.router.navigate(['login']);\n        }\n        this.registerForm.reset();\n      });\n \n    }\n  }\n}\nfunction comparePassword(c: AbstractControl): {[key: string]: boolean} | null {\n  let passwordControl = c.get('password');\n  let confirmControl = c.get('retypepass');\n\n  if (passwordControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (passwordControl.value === confirmControl.value) {\n      return null;\n  }\n  return { 'mismatchedPassword': true };\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/components/user/register/register.component.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivate } from '@angular/router';\n\nimport { AuthService } from '../services/auth.service';\nimport { ToastrService } from '../common/toastr.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService,\n        private router: Router,\n        private toastr: ToastrService) { }\n    \n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot){\n        return this.checkLoggedIn(state.url);\n    }\n\n    checkLoggedIn(url: string): boolean {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        }\n\n        this.toastr.info(\"Please login to access this page.\")\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/guards/auth.guard.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class AlbumService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  uploadAlbumphoto(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    console.log(oFile.getAll('albumimage'));\n    return this.http.post('http://localhost:2000/api/albumphotoupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  saveAlbum(userid, artistid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/album/${userid}?artistid=${artistid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateAlbumphoto(albumid, oAlbum){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/updatealbumphoto/${albumid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteAlbumPhoto(oAlbum){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('http://localhost:2000/api/albumphotodelete', oAlbum, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/album/report/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggAlbums(userid, oAlbum) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/album/aggreport/${userid}`, JSON.stringify(oAlbum), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbum(albumid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`http://localhost:2000/api/album/${albumid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbumList(userid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`http://localhost:2000/api/albumlist/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAlbumListbyArtist(userid,artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`http://localhost:2000/api/albumlistbyartist/${userid}?artistid=${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteAlbum(albumid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`http://localhost:2000/api/album/${albumid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/album.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class ArtistService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  uploadArtistphoto(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    console.log(oFile.getAll('artistimage'));\n    return this.http.post('http://localhost:2000/api/artistphotoupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  saveArtist(userid, oArtist){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/artist/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateArtistphoto(artistid, oArtist){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/updateartistphoto/${artistid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteArtistPhoto(oArtist){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('http://localhost:2000/api/artistphotodelete', oArtist, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtists(userid, oArtist) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/artist/report/${userid}`, JSON.stringify(oArtist), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtist(artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`http://localhost:2000/api/artist/${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getArtistList(userid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`http://localhost:2000/api/artistlist/${userid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteArtist(artistid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`http://localhost:2000/api/artist/${artistid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/artist.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nimport { IUser } from '../interface/user';\n\n@Injectable()\nexport class AuthService {\n\n  public currentUser: IUser;\n  \n  constructor(private http: Http) { }\n\n  isLoggedIn(): boolean {\n    try {\n        const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n        if (theUser) {\n            this.currentUser = theUser.user;\n        }\n    } catch (e) {\n        return false;\n    }\n    return !!this.currentUser;\n  }\n\n  login(oUser) {\n    let headers = new Headers({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n\n    return this.http.post('http://localhost:2000/api/login', JSON.stringify(oUser), options)\n    .do((response: Response) => {\n        if (response.json().success) {\n            this.currentUser = <IUser>response.json().message;\n            let userObj: any = {};\n            userObj.user = response.json().message;\n            userObj.token = response.json().token;\n\n            localStorage.setItem('currentUser', JSON.stringify(userObj));\n        }\n        response.json();\n    })\n    .catch(this.handleError);\n  }\n\n  logout(): void {\n    this.currentUser = null;\n    localStorage.removeItem('currentUser');\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class SongService {\n  public jwtToken: String;\n\n  constructor(private http: Http) { \n    const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n    if (theUser) {\n        this.jwtToken = theUser.token;\n    }\n  }\n\n  uploadSongPreview(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    \n    return this.http.post('http://localhost:2000/api/songprvwupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  uploadSongFile(oFile){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    \n    return this.http.post('http://localhost:2000/api/songfileupload', oFile, options)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n\n  deleteSongPreview(oSong){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('http://localhost:2000/api/songprvwdelete', oSong, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteSongFile(oSong){\n    let headers = new Headers();\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post('http://localhost:2000/api/songfiledelete', oSong, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  saveSong(userid, artistid, albumid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/song/${userid}?artistid=${artistid}&albumid=${albumid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  publishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/publishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  cancelPublishSong(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/cancelpublishsong/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  updateSongPreview(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/updatesongpreview/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n  updateSongFile(songid, oSong){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/updatesongfile/${songid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`http://localhost:2000/api/song/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongAgg(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.get(`http://localhost:2000/api/songaggregate/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  deleteSong(songid) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.delete(`http://localhost:2000/api/song/${songid}`, options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getAggSongs(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/song/aggreport/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getSongs(userid, oSong) {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post(`http://localhost:2000/api/song/report/${userid}`, JSON.stringify(oSong), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n    console.error(error);\n    return Observable.throw(error.json().error || 'Server error');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/song.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions} from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class UserService {\n  public jwtToken: string;\n\n  constructor(private http: Http) {\n      const theUser:any = JSON.parse(localStorage.getItem('currentUser'));\n      if (theUser) {\n        this.jwtToken = theUser.token;\n      }    \n  }\n\n/*   uploadpreview(oFile){\n    console.log(oFile.getAll('usrimage'));\n    return this.http.post('http://localhost:2000/flupload', oFile)\n      .map((response: Response) => response.json())\n      .catch(this.handleError);\n  }\n */\n  register(oUser) {\n    let headers = new Headers ({ 'Content-Type': 'application/json'});\n    let options = new RequestOptions({headers: headers});\n     return this.http.post('http://localhost:2000/register', JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n\n  getUser(userid) {\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.get(`http://localhost:2000/api/user/${userid}`, options)\n          .map((response: Response) => response.json())\n          .catch(this.handleError);\n  }\n\n  updateUser(userid, oUser){\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.put(`http://localhost:2000/api/user/${userid}`, JSON.stringify(oUser), options)\n          .map((response: Response) => response.json())\n          .catch(this.handleError);\n  }\n\n/*   updatePhoto(userid, oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.put(`http://localhost:2000/api/editphoto/${userid}`, JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n \n  deletePhoto(oUser){\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', `${this.jwtToken}`);\n    let options = new RequestOptions({ headers: headers });\n\n    return this.http.post('http://localhost:2000/api/delphoto', JSON.stringify(oUser), options)\n        .map((response: Response) => response.json())\n        .catch(this.handleError);\n  }\n*/\n\n  updatePassword(userid, oUser){\n      let headers = new Headers();\n      headers.append('Content-Type', 'application/json');\n      headers.append('Authorization', `${this.jwtToken}`);\n      let options = new RequestOptions({ headers: headers });\n\n      return this.http.put(`http://localhost:2000/api/password/${userid}`, JSON.stringify(oUser), options)\n          .map((response: Response) => response.json())\n          .catch(this.handleError);\n  }\n\n  private handleError(error: Response) {\n      console.error(error);\n      return Observable.throw(error.json().error || 'Server error');\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/app/services/user.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/leonardgurning/Documents/nodeprojects/kaxet/angular-src/src/main.ts"],"sourceRoot":"webpack:///"}